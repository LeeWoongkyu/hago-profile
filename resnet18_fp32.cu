#if defined(__CUDA_ARCH__) && (__CUDA_ARCH__ >= 530)
#include <cuda_fp16.h>
__device__ half max(half a, half b)
{
  return __hgt(__half(a), __half(b)) ? a : b;
}
__device__ half min(half a, half b)
{
  return __hlt(__half(a), __half(b)) ? a : b;
}
#else

typedef unsigned short uint16_t;
typedef unsigned char uint8_t;
typedef signed char int8_t;
typedef int int32_t;
typedef unsigned long long uint64_t;
typedef unsigned int uint32_t;

#define TVM_FORCE_INLINE inline __attribute__((always_inline))
#define TVM_XINLINE TVM_FORCE_INLINE __device__ __host__
#define TVM_ALIGNED(x) __attribute__ ((aligned(x)))
#define TVM_HALF_OPERATOR(RTYPE, OP)                              \
  TVM_XINLINE RTYPE operator OP (half a, half b) {                \
    return RTYPE(float(a) OP float(b));                           \
  }                                                               \
  template<typename T>                                            \
  TVM_XINLINE RTYPE operator OP (half a, T b) {                   \
    return RTYPE(float(a) OP float(b));                           \
  }                                                               \
  template<typename T>                                            \
  TVM_XINLINE RTYPE operator OP (T a, half b) {                   \
    return RTYPE(float(a) OP float(b));                           \
  }

#define TVM_HALF_ASSIGNOP(AOP, OP)                                \
  template<typename T>                                            \
  TVM_XINLINE half operator AOP (const T& a) {                    \
    return *this = half(float(*this) OP float(a));                \
  }                                                               \
  template<typename T>                                            \
  TVM_XINLINE half operator AOP (const volatile T& a) volatile {  \
    return *this = half(float(*this) OP float(a));                \
  }

class TVM_ALIGNED(2) half {
 public:
  uint16_t half_;

  static TVM_XINLINE half Binary(uint16_t value) {
    half res;
    res.half_ = value;
    return res;
  }

  TVM_XINLINE half() {}

  TVM_XINLINE half(const float& value) { constructor(value); }
  TVM_XINLINE explicit half(const double& value) { constructor(value); }
  TVM_XINLINE explicit half(const int8_t& value) { constructor(value); }
  TVM_XINLINE explicit half(const uint8_t& value) { constructor(value); }
  TVM_XINLINE explicit half(const int32_t& value) { constructor(value); }
  TVM_XINLINE explicit half(const uint32_t& value) { constructor(value); }
  TVM_XINLINE explicit half(const long long& value) { constructor(value); }
  TVM_XINLINE explicit half(const uint64_t& value) { constructor(value); }

  TVM_XINLINE operator float() const {                          \
    return float(half2float(half_));                            \
  }                                                             \
  TVM_XINLINE operator float() const volatile {                 \
    return float(half2float(half_));                            \
  }


  TVM_HALF_ASSIGNOP(+=, +)
  TVM_HALF_ASSIGNOP(-=, -)
  TVM_HALF_ASSIGNOP(*=, *)
  TVM_HALF_ASSIGNOP(/=, /)

  TVM_XINLINE half operator+() {
    return *this;
  }

  TVM_XINLINE half operator-() {
    return half(-float(*this));
  }

  TVM_XINLINE half operator=(const half& a) {
    half_ = a.half_;
    return a;
  }

  template<typename T>
  TVM_XINLINE half operator=(const T& a) {
    return *this = half(a);
  }

  TVM_XINLINE half operator=(const half& a) volatile {
    half_ = a.half_;
    return a;
  }

  template<typename T>
  TVM_XINLINE half operator=(const T& a) volatile {
    return *this = half(a);
  }

 private:
  union Bits {
    float f;
    int32_t si;
    uint32_t ui;
  };

  static int const fp16FractionBits = 10;
  static int const fp32FractionBits = 23;
  static int32_t const fp32FractionMask = ~(~0u << fp32FractionBits);   // == 0x7fffff
  static int32_t const fp32HiddenBit = 1 << fp32FractionBits;   // == 0x800000
  static int const shift = fp32FractionBits - fp16FractionBits;   // == 13
  static int const shiftSign = 16;
  static int32_t const expAdjust = 127 - 15;   // exp32-127 = exp16-15, so exp16 = exp32 - (127-15)

  static int32_t const infN = 0x7F800000;   // flt32 infinity
  static int32_t const maxN = 0x477FFFFF;   // max flt32 that's a flt16 normal after >> by shift
  static int32_t const minN = 0x38800000;   // min flt16 normal as a flt32
  static int32_t const maxZ = 0x33000000;   // max fp32 number that's still rounded to zero in fp16
  static int32_t const signN = 0x80000000;  // flt32 sign bit

  static int32_t const infC = infN >> shift;
  static int32_t const nanN = (infC + 1) << shift;   // minimum flt16 nan as a flt32
  static int32_t const maxC = maxN >> shift;
  static int32_t const minC = minN >> shift;
  static int32_t const signC = signN >> shiftSign;  // flt16 sign bit

  static int32_t const mulN = 0x52000000;  // (1 << 23) / minN
  static int32_t const mulC = 0x33800000;  // minN / (1 << (23 - shift))

  static int32_t const subC = 0x003FF;  // max flt32 subnormal down shifted
  static int32_t const norC = 0x00400;  // min flt32 normal down shifted

  static int32_t const maxD = infC - maxC - 1;
  static int32_t const minD = minC - subC - 1;

  TVM_XINLINE uint16_t float2half(const float& value) const {
    Bits v;
    v.f = value;
    uint32_t sign = v.si & signN;    // grab sign bit
    v.si ^= sign;                    // clear sign bit from v
    sign >>= shiftSign;              // logical shift sign to fp16 position

    if (v.si <= maxZ) {
      // Handle eventual zeros here to ensure
      // vshift will not exceed 32 below.
      v.ui = 0;
    } else if (v.si < minN) {
      // Handle denorms
      uint32_t exp32 = v.ui >> fp32FractionBits;
      int32_t exp16 = exp32 - expAdjust;
      // If exp16 == 0 (just into the denorm range), then significant should be shifted right 1.
      // Smaller (so negative) exp16 values should result in greater right shifts.
      uint32_t vshift = 1 - exp16;
      uint32_t significand = fp32HiddenBit | (v.ui & fp32FractionMask);
      v.ui = significand >> vshift;
      v.ui += (v.ui & 0x3fff) != 0x1000 || (significand & 0x7ff) ? 0x1000 : 0;
    } else if (v.si <= maxN) {
      // Handle norms
      v.ui += (v.ui & 0x3fff) != 0x1000 ? 0x1000 : 0;
      v.ui -= expAdjust << fp32FractionBits;
    } else if (v.si <= infN) {
      v.si = infN;
    } else if (v.si < nanN) {
      v.si = nanN;
    }

    v.ui >>= shift;
    return sign | (v.ui & 0x7fff);
  }

  // Same as above routine, except for addition of volatile keyword
  TVM_XINLINE uint16_t float2half(
    const volatile float& value) const volatile {
    Bits v;
    v.f = value;
    uint32_t sign = v.si & signN;    // grab sign bit
    v.si ^= sign;                    // clear sign bit from v
    sign >>= shiftSign;              // logical shift sign to fp16 position

    if (v.si <= maxZ) {
      // Handle eventual zeros here to ensure
      // vshift will not exceed 32 below.
      v.ui = 0;
    } else if (v.si < minN) {
      // Handle denorms
      uint32_t exp32 = v.ui >> fp32FractionBits;
      int32_t exp16 = exp32 - expAdjust;
      // If exp16 == 0 (just into the denorm range), then significant should be shifted right 1.
      // Smaller (so negative) exp16 values should result in greater right shifts.
      uint32_t vshift = 1 - exp16;
      uint32_t significand = fp32HiddenBit | (v.ui & fp32FractionMask);
      v.ui = significand >> vshift;
      v.ui += (v.ui & 0x3fff) != 0x1000 || (significand & 0x7ff) ? 0x1000 : 0;
    } else if (v.si <= maxN) {
      // Handle norms
      v.ui += (v.ui & 0x3fff) != 0x1000 ? 0x1000 : 0;
      v.ui -= expAdjust << fp32FractionBits;
    } else if (v.si <= infN) {
      v.si = infN;
    } else if (v.si < nanN) {
      v.si = nanN;
    }

    v.ui >>= shift;
    return sign | (v.ui & 0x7fff);
  }

  TVM_XINLINE float half2float(const uint16_t& value) const {
    Bits v;
    v.ui = value;
    int32_t sign = v.si & signC;
    v.si ^= sign;
    sign <<= shiftSign;
    v.si ^= ((v.si + minD) ^ v.si) & -(v.si > subC);
    v.si ^= ((v.si + maxD) ^ v.si) & -(v.si > maxC);
    Bits s;
    s.si = mulC;
    s.f *= v.si;
    int32_t mask = -(norC > v.si);
    v.si <<= shift;
    v.si ^= (s.si ^ v.si) & mask;
    v.si |= sign;
    return v.f;
  }

  TVM_XINLINE float half2float(
    const volatile uint16_t& value) const volatile {
    Bits v;
    v.ui = value;
    int32_t sign = v.si & signC;
    v.si ^= sign;
    sign <<= shiftSign;
    v.si ^= ((v.si + minD) ^ v.si) & -(v.si > subC);
    v.si ^= ((v.si + maxD) ^ v.si) & -(v.si > maxC);
    Bits s;
    s.si = mulC;
    s.f *= v.si;
    int32_t mask = -(norC > v.si);
    v.si <<= shift;
    v.si ^= (s.si ^ v.si) & mask;
    v.si |= sign;
    return v.f;
  }

  template<typename T>
  TVM_XINLINE void constructor(const T& value) {
    half_ = float2half(float(value));
  }
};

TVM_HALF_OPERATOR(half, +)
TVM_HALF_OPERATOR(half, -)
TVM_HALF_OPERATOR(half, *)
TVM_HALF_OPERATOR(half, /)
TVM_HALF_OPERATOR(bool, >)
TVM_HALF_OPERATOR(bool, <)
TVM_HALF_OPERATOR(bool, >=)
TVM_HALF_OPERATOR(bool, <=)

TVM_XINLINE half __float2half_rn(const float a) {
  return half(a);
}
#endif


// Pack two half values.
static inline __device__ __host__ unsigned
__pack_half2(const half x, const half y) {
  unsigned v0 = *((unsigned short *)&x);
  unsigned v1 = *((unsigned short *)&y);
  return (v1 << 16) | v0;
}
#include <mma.h>
extern "C" __global__ void fused_nn_conv2d_add_nn_relu_3_kernel0(void* __restrict__ placeholder, void* __restrict__ placeholder1, void* __restrict__ T_relu, void* __restrict__ placeholder2) {
  float compute[28];
  __shared__ float pad_temp_shared[450];
  __shared__ float placeholder_shared[2304];
  for (int yy_init = 0; yy_init < 7; ++yy_init) {
    compute[(yy_init)] = 0.000000e+00f;
    compute[((yy_init + 7))] = 0.000000e+00f;
    compute[((yy_init + 14))] = 0.000000e+00f;
    compute[((yy_init + 21))] = 0.000000e+00f;
  }
  for (int rc_outer = 0; rc_outer < 128; ++rc_outer) {
    __syncthreads();
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 3; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {
      if (((((((int)threadIdx.x) * 3) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) / 15) + ((int)threadIdx.z)) < 30) {
        if ((((((int)threadIdx.z) * 15) + (((int)threadIdx.x) * 3)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) < 450) {
          if (((((int)threadIdx.x) * 3) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) < 15) {
            if (((((int)threadIdx.z) / 30) + (((int)blockIdx.z) >> 2)) < 32) {
              pad_temp_shared[((((((int)threadIdx.z) * 15) + (((int)threadIdx.x) * 3)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner))] = (((1 <= (((int)threadIdx.z) % 15)) && (1 <= ((((int)threadIdx.x) * 3) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner))) ? (float)((float*)placeholder)[((((((((((((int)threadIdx.z) / 30) * 50176) + ((((int)blockIdx.z) >> 2) * 50176)) + (rc_outer * 392)) + (((((int)threadIdx.z) % 30) / 15) * 196)) + ((((int)threadIdx.z) % 15) * 14)) + (((int)threadIdx.x) * 3)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) - 15))] : (float)0.000000e+00f);
            }
          }
        }
      }
    }
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 < 11; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) {
      if (((((int)threadIdx.z) * 4) + (((((int)threadIdx.x) * 11) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) / 18)) < 128) {
        if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 11) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) / 9)) < 256) {
          if (((((int)threadIdx.z) * 24) + (((((int)threadIdx.x) * 11) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) / 3)) < 768) {
            if ((((((int)threadIdx.z) * 72) + (((int)threadIdx.x) * 11)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 2304) {
              if (((((int)threadIdx.x) * 11) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 72) {
                placeholder_shared[((((((int)threadIdx.z) * 72) + (((int)threadIdx.x) * 11)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1))] = ((float*)placeholder1)[(((((((((int)blockIdx.z) & 3) * 294912) + (((int)threadIdx.z) * 9216)) + ((((((int)threadIdx.x) * 11) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) / 18) * 2304)) + (rc_outer * 18)) + (((((int)threadIdx.x) * 11) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) % 18)))];
              }
            }
          }
        }
      }
    }
    __syncthreads();
    for (int rc_inner = 0; rc_inner < 2; ++rc_inner) {
      for (int ry_inner = 0; ry_inner < 3; ++ry_inner) {
        for (int rx_inner = 0; rx_inner < 3; ++rx_inner) {
          for (int yy = 0; yy < 7; ++yy) {
            compute[(yy)] = (compute[(yy)] + (pad_temp_shared[((((((rc_inner * 225) + (yy * 30)) + (ry_inner * 15)) + (((int)threadIdx.x) * 2)) + rx_inner))] * placeholder_shared[(((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + (ry_inner * 3)) + rx_inner))]));
            compute[((yy + 7))] = (compute[((yy + 7))] + (pad_temp_shared[((((((rc_inner * 225) + (yy * 30)) + (ry_inner * 15)) + (((int)threadIdx.x) * 2)) + rx_inner))] * placeholder_shared[((((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + (ry_inner * 3)) + rx_inner) + 576))]));
            compute[((yy + 14))] = (compute[((yy + 14))] + (pad_temp_shared[((((((rc_inner * 225) + (yy * 30)) + (ry_inner * 15)) + (((int)threadIdx.x) * 2)) + rx_inner))] * placeholder_shared[((((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + (ry_inner * 3)) + rx_inner) + 1152))]));
            compute[((yy + 21))] = (compute[((yy + 21))] + (pad_temp_shared[((((((rc_inner * 225) + (yy * 30)) + (ry_inner * 15)) + (((int)threadIdx.x) * 2)) + rx_inner))] * placeholder_shared[((((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + (ry_inner * 3)) + rx_inner) + 1728))]));
          }
        }
      }
    }
  }
  for (int ax2_inner_inner_inner = 0; ax2_inner_inner_inner < 7; ++ax2_inner_inner_inner) {
    ((float*)T_relu)[(((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 49)) + (ax2_inner_inner_inner * 7)) + ((int)threadIdx.x)))] = max((float)((compute[(ax2_inner_inner_inner)] + ((float*)placeholder2)[((((((int)blockIdx.z) & 3) * 128) + ((int)threadIdx.z)))])), (float)(0.000000e+00f));
    ((float*)T_relu)[((((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 49)) + (ax2_inner_inner_inner * 7)) + ((int)threadIdx.x)) + 1568))] = max((float)((compute[((ax2_inner_inner_inner + 7))] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 3) * 128) + ((int)threadIdx.z)) + 32))])), (float)(0.000000e+00f));
    ((float*)T_relu)[((((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 49)) + (ax2_inner_inner_inner * 7)) + ((int)threadIdx.x)) + 3136))] = max((float)((compute[((ax2_inner_inner_inner + 14))] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 3) * 128) + ((int)threadIdx.z)) + 64))])), (float)(0.000000e+00f));
    ((float*)T_relu)[((((((((int)blockIdx.z) * 6272) + (((int)threadIdx.z) * 49)) + (ax2_inner_inner_inner * 7)) + ((int)threadIdx.x)) + 4704))] = max((float)((compute[((ax2_inner_inner_inner + 21))] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 3) * 128) + ((int)threadIdx.z)) + 96))])), (float)(0.000000e+00f));
  }
}

extern "C" __global__ void fused_nn_max_pool2d_kernel0(void* __restrict__ placeholder, void* __restrict__ tensor) {
  float tensor_local[1];
  tensor_local[(0)] = -3.402823e+38f;
  for (int rv = 0; rv < 3; ++rv) {
    for (int rv1 = 0; rv1 < 3; ++rv1) {
      tensor_local[(0)] = max((float)(tensor_local[(0)]), (float)((((1 <= ((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 3136) / 56) * 2) + rv)) && (1 <= (((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 56) * 2) + rv1))) ? (float)((float*)placeholder)[(((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) / 56) * 224) + (rv * 112)) + ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 56) * 2)) + rv1) - 113))] : (float)-3.402823e+38f)));
    }
  }
  ((float*)tensor)[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = tensor_local[(0)];
}

extern "C" __global__ void fused_nn_contrib_conv2d_winograd_without_weight_transform_add_1_kernel2(float* __restrict__ bgemm, void* __restrict__ T_add, void* __restrict__ placeholder) {
  float inverse[4];
  inverse[(0)] = 0.000000e+00f;
  inverse[(0)] = (inverse[(0)] + bgemm[((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 401408))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 802816))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 1605632))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 2007040))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 2408448))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 3211264))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 3612672))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 4014080))]);
  inverse[(1)] = 0.000000e+00f;
  inverse[(1)] = (inverse[(1)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 401408))] * -1.000000e+00f));
  inverse[(1)] = (inverse[(1)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 802816))]);
  inverse[(1)] = (inverse[(1)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 1204224))]);
  inverse[(1)] = (inverse[(1)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 2007040))] * -1.000000e+00f));
  inverse[(1)] = (inverse[(1)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 2408448))]);
  inverse[(1)] = (inverse[(1)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 2809856))]);
  inverse[(1)] = (inverse[(1)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 3612672))] * -1.000000e+00f));
  inverse[(1)] = (inverse[(1)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 4014080))]);
  inverse[(1)] = (inverse[(1)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 4415488))]);
  inverse[(2)] = 0.000000e+00f;
  inverse[(2)] = (inverse[(2)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 1605632))] * -1.000000e+00f));
  inverse[(2)] = (inverse[(2)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 2007040))] * -1.000000e+00f));
  inverse[(2)] = (inverse[(2)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 2408448))] * -1.000000e+00f));
  inverse[(2)] = (inverse[(2)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 3211264))]);
  inverse[(2)] = (inverse[(2)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 3612672))]);
  inverse[(2)] = (inverse[(2)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 4014080))]);
  inverse[(2)] = (inverse[(2)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 4816896))]);
  inverse[(2)] = (inverse[(2)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 5218304))]);
  inverse[(2)] = (inverse[(2)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 5619712))]);
  inverse[(3)] = 0.000000e+00f;
  inverse[(3)] = (inverse[(3)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 2007040))] * -1.000000e+00f) * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 2408448))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 2809856))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 3612672))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 4014080))]);
  inverse[(3)] = (inverse[(3)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 4415488))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 5218304))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 5619712))]);
  inverse[(3)] = (inverse[(3)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 6021120))]);
  for (int ax2_inner = 0; ax2_inner < 2; ++ax2_inner) {
    for (int ax3_inner = 0; ax3_inner < 2; ++ax3_inner) {
      ((float*)T_add)[((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 7) * 28) + (ax2_inner * 14)) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 7) * 2)) + ax3_inner))] = (inverse[(((ax2_inner * 2) + ax3_inner))] + ((float*)placeholder)[(((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49))]);
    }
  }
}

extern "C" __global__ void fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_kernel1(void* __restrict__ placeholder, float* __restrict__ data_pack, float* __restrict__ bgemm) {
  float bgemm_local[32];
  __shared__ float placeholder_shared[128];
  __shared__ float data_pack_shared[256];
  for (int co_c_init = 0; co_c_init < 2; ++co_c_init) {
    bgemm_local[(co_c_init)] = 0.000000e+00f;
    bgemm_local[((co_c_init + 8))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 16))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 24))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 2))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 10))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 18))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 26))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 4))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 12))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 20))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 28))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 6))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 14))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 22))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 30))] = 0.000000e+00f;
  }
  for (int ci_outer = 0; ci_outer < 16; ++ci_outer) {
    __syncthreads();
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer = 0; ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer < 2; ++ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer) {
      placeholder_shared[((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 64) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)))] = ((float*)placeholder)[(((((((((int)blockIdx.z) * 4096) + (ci_outer * 256)) + (ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 128)) + ((((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) >> 5) * 64)) + (((int)blockIdx.y) * 32)) + (((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) & 31)))];
    }
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer1 < 4; ++ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer1) {
      data_pack_shared[((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer1 * 64) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)))] = data_pack[(((((((((int)blockIdx.z) * 401408) + (ci_outer * 25088)) + (ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer1 * 6272)) + (((int)blockIdx.x) * 64)) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)))];
    }
    __syncthreads();
    for (int ci_inner = 0; ci_inner < 4; ++ci_inner) {
      for (int co_c = 0; co_c < 2; ++co_c) {
        bgemm_local[(co_c)] = (bgemm_local[(co_c)] + (placeholder_shared[((((ci_inner * 32) + (((int)threadIdx.y) * 2)) + co_c))] * data_pack_shared[(((ci_inner * 64) + ((int)threadIdx.x)))]));
        bgemm_local[((co_c + 8))] = (bgemm_local[((co_c + 8))] + (placeholder_shared[(((((ci_inner * 32) + (((int)threadIdx.y) * 2)) + co_c) + 8))] * data_pack_shared[(((ci_inner * 64) + ((int)threadIdx.x)))]));
        bgemm_local[((co_c + 16))] = (bgemm_local[((co_c + 16))] + (placeholder_shared[(((((ci_inner * 32) + (((int)threadIdx.y) * 2)) + co_c) + 16))] * data_pack_shared[(((ci_inner * 64) + ((int)threadIdx.x)))]));
        bgemm_local[((co_c + 24))] = (bgemm_local[((co_c + 24))] + (placeholder_shared[(((((ci_inner * 32) + (((int)threadIdx.y) * 2)) + co_c) + 24))] * data_pack_shared[(((ci_inner * 64) + ((int)threadIdx.x)))]));
        bgemm_local[((co_c + 2))] = (bgemm_local[((co_c + 2))] + (placeholder_shared[((((ci_inner * 32) + (((int)threadIdx.y) * 2)) + co_c))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 16))]));
        bgemm_local[((co_c + 10))] = (bgemm_local[((co_c + 10))] + (placeholder_shared[(((((ci_inner * 32) + (((int)threadIdx.y) * 2)) + co_c) + 8))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 16))]));
        bgemm_local[((co_c + 18))] = (bgemm_local[((co_c + 18))] + (placeholder_shared[(((((ci_inner * 32) + (((int)threadIdx.y) * 2)) + co_c) + 16))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 16))]));
        bgemm_local[((co_c + 26))] = (bgemm_local[((co_c + 26))] + (placeholder_shared[(((((ci_inner * 32) + (((int)threadIdx.y) * 2)) + co_c) + 24))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 16))]));
        bgemm_local[((co_c + 4))] = (bgemm_local[((co_c + 4))] + (placeholder_shared[((((ci_inner * 32) + (((int)threadIdx.y) * 2)) + co_c))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 32))]));
        bgemm_local[((co_c + 12))] = (bgemm_local[((co_c + 12))] + (placeholder_shared[(((((ci_inner * 32) + (((int)threadIdx.y) * 2)) + co_c) + 8))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 32))]));
        bgemm_local[((co_c + 20))] = (bgemm_local[((co_c + 20))] + (placeholder_shared[(((((ci_inner * 32) + (((int)threadIdx.y) * 2)) + co_c) + 16))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 32))]));
        bgemm_local[((co_c + 28))] = (bgemm_local[((co_c + 28))] + (placeholder_shared[(((((ci_inner * 32) + (((int)threadIdx.y) * 2)) + co_c) + 24))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 32))]));
        bgemm_local[((co_c + 6))] = (bgemm_local[((co_c + 6))] + (placeholder_shared[((((ci_inner * 32) + (((int)threadIdx.y) * 2)) + co_c))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 48))]));
        bgemm_local[((co_c + 14))] = (bgemm_local[((co_c + 14))] + (placeholder_shared[(((((ci_inner * 32) + (((int)threadIdx.y) * 2)) + co_c) + 8))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 48))]));
        bgemm_local[((co_c + 22))] = (bgemm_local[((co_c + 22))] + (placeholder_shared[(((((ci_inner * 32) + (((int)threadIdx.y) * 2)) + co_c) + 16))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 48))]));
        bgemm_local[((co_c + 30))] = (bgemm_local[((co_c + 30))] + (placeholder_shared[(((((ci_inner * 32) + (((int)threadIdx.y) * 2)) + co_c) + 24))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 48))]));
      }
    }
  }
  for (int co_inner_inner_inner = 0; co_inner_inner_inner < 2; ++co_inner_inner_inner) {
    bgemm[(((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 12544)) + (co_inner_inner_inner * 6272)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)))] = bgemm_local[(co_inner_inner_inner)];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 12544)) + (co_inner_inner_inner * 6272)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 50176))] = bgemm_local[((co_inner_inner_inner + 8))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 12544)) + (co_inner_inner_inner * 6272)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 100352))] = bgemm_local[((co_inner_inner_inner + 16))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 12544)) + (co_inner_inner_inner * 6272)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 150528))] = bgemm_local[((co_inner_inner_inner + 24))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 12544)) + (co_inner_inner_inner * 6272)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 16))] = bgemm_local[((co_inner_inner_inner + 2))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 12544)) + (co_inner_inner_inner * 6272)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 50192))] = bgemm_local[((co_inner_inner_inner + 10))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 12544)) + (co_inner_inner_inner * 6272)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 100368))] = bgemm_local[((co_inner_inner_inner + 18))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 12544)) + (co_inner_inner_inner * 6272)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 150544))] = bgemm_local[((co_inner_inner_inner + 26))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 12544)) + (co_inner_inner_inner * 6272)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 32))] = bgemm_local[((co_inner_inner_inner + 4))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 12544)) + (co_inner_inner_inner * 6272)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 50208))] = bgemm_local[((co_inner_inner_inner + 12))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 12544)) + (co_inner_inner_inner * 6272)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 100384))] = bgemm_local[((co_inner_inner_inner + 20))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 12544)) + (co_inner_inner_inner * 6272)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 150560))] = bgemm_local[((co_inner_inner_inner + 28))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 12544)) + (co_inner_inner_inner * 6272)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 48))] = bgemm_local[((co_inner_inner_inner + 6))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 12544)) + (co_inner_inner_inner * 6272)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 50224))] = bgemm_local[((co_inner_inner_inner + 14))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 12544)) + (co_inner_inner_inner * 6272)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 100400))] = bgemm_local[((co_inner_inner_inner + 22))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 12544)) + (co_inner_inner_inner * 6272)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 150576))] = bgemm_local[((co_inner_inner_inner + 30))];
  }
}

extern "C" __global__ void fused_nn_conv2d_add_add_nn_relu_2_kernel0(void* __restrict__ placeholder, void* __restrict__ placeholder1, void* __restrict__ T_relu, void* __restrict__ placeholder2, void* __restrict__ placeholder3) {
  float compute[32];
  __shared__ float pad_temp_shared[770];
  __shared__ float placeholder_shared[128];
  compute[(0)] = 0.000000e+00f;
  compute[(16)] = 0.000000e+00f;
  compute[(1)] = 0.000000e+00f;
  compute[(17)] = 0.000000e+00f;
  compute[(2)] = 0.000000e+00f;
  compute[(18)] = 0.000000e+00f;
  compute[(3)] = 0.000000e+00f;
  compute[(19)] = 0.000000e+00f;
  compute[(4)] = 0.000000e+00f;
  compute[(20)] = 0.000000e+00f;
  compute[(5)] = 0.000000e+00f;
  compute[(21)] = 0.000000e+00f;
  compute[(6)] = 0.000000e+00f;
  compute[(22)] = 0.000000e+00f;
  compute[(7)] = 0.000000e+00f;
  compute[(23)] = 0.000000e+00f;
  compute[(8)] = 0.000000e+00f;
  compute[(24)] = 0.000000e+00f;
  compute[(9)] = 0.000000e+00f;
  compute[(25)] = 0.000000e+00f;
  compute[(10)] = 0.000000e+00f;
  compute[(26)] = 0.000000e+00f;
  compute[(11)] = 0.000000e+00f;
  compute[(27)] = 0.000000e+00f;
  compute[(12)] = 0.000000e+00f;
  compute[(28)] = 0.000000e+00f;
  compute[(13)] = 0.000000e+00f;
  compute[(29)] = 0.000000e+00f;
  compute[(14)] = 0.000000e+00f;
  compute[(30)] = 0.000000e+00f;
  compute[(15)] = 0.000000e+00f;
  compute[(31)] = 0.000000e+00f;
  for (int rc_outer = 0; rc_outer < 32; ++rc_outer) {
    __syncthreads();
    if (((((int)threadIdx.z) * 49) + (((int)threadIdx.x) * 4)) < 770) {
      if (((int)threadIdx.x) < 13) {
        pad_temp_shared[(((((int)threadIdx.z) * 49) + (((int)threadIdx.x) * 4)))] = ((float*)placeholder)[((((((((((int)blockIdx.z) >> 1) * 200704) + (rc_outer * 6272)) + ((((((int)threadIdx.z) * 49) + (((int)threadIdx.x) * 4)) / 385) * 3136)) + (((int)blockIdx.y) * 448)) + (((((((int)threadIdx.z) * 49) + (((int)threadIdx.x) * 4)) % 385) / 55) * 56)) + (((((int)threadIdx.z) * 49) + (((int)threadIdx.x) * 4)) % 55)))];
      }
    }
    if (((((int)threadIdx.z) * 49) + (((int)threadIdx.x) * 4)) < 769) {
      if (((int)threadIdx.x) < 12) {
        pad_temp_shared[((((((int)threadIdx.z) * 49) + (((int)threadIdx.x) * 4)) + 1))] = ((float*)placeholder)[((((((((((int)blockIdx.z) >> 1) * 200704) + (rc_outer * 6272)) + (((((((int)threadIdx.z) * 49) + (((int)threadIdx.x) * 4)) + 1) / 385) * 3136)) + (((int)blockIdx.y) * 448)) + ((((((((int)threadIdx.z) * 49) + (((int)threadIdx.x) * 4)) + 1) % 385) / 55) * 56)) + ((((((int)threadIdx.z) * 49) + (((int)threadIdx.x) * 4)) + 1) % 55)))];
      }
    }
    if (((((int)threadIdx.z) * 49) + (((int)threadIdx.x) * 4)) < 768) {
      if (((int)threadIdx.x) < 12) {
        pad_temp_shared[((((((int)threadIdx.z) * 49) + (((int)threadIdx.x) * 4)) + 2))] = ((float*)placeholder)[((((((((((int)blockIdx.z) >> 1) * 200704) + (rc_outer * 6272)) + (((((((int)threadIdx.z) * 49) + (((int)threadIdx.x) * 4)) + 2) / 385) * 3136)) + (((int)blockIdx.y) * 448)) + ((((((((int)threadIdx.z) * 49) + (((int)threadIdx.x) * 4)) + 2) % 385) / 55) * 56)) + ((((((int)threadIdx.z) * 49) + (((int)threadIdx.x) * 4)) + 2) % 55)))];
      }
    }
    if (((((int)threadIdx.z) * 49) + (((int)threadIdx.x) * 4)) < 767) {
      if (((int)threadIdx.x) < 12) {
        pad_temp_shared[((((((int)threadIdx.z) * 49) + (((int)threadIdx.x) * 4)) + 3))] = ((float*)placeholder)[((((((((((int)blockIdx.z) >> 1) * 200704) + (rc_outer * 6272)) + (((((((int)threadIdx.z) * 49) + (((int)threadIdx.x) * 4)) + 3) / 385) * 3136)) + (((int)blockIdx.y) * 448)) + ((((((((int)threadIdx.z) * 49) + (((int)threadIdx.x) * 4)) + 3) % 385) / 55) * 56)) + ((((((int)threadIdx.z) * 49) + (((int)threadIdx.x) * 4)) + 3) % 55)))];
      }
    }
    if (((((int)threadIdx.z) * 4) + (((int)threadIdx.x) >> 1)) < 64) {
      if (((((int)threadIdx.z) * 8) + ((int)threadIdx.x)) < 128) {
        if (((int)threadIdx.x) < 8) {
          placeholder_shared[(((((int)threadIdx.z) * 8) + ((int)threadIdx.x)))] = ((float*)placeholder1)[(((((((((int)blockIdx.z) & 1) * 4096) + (((int)threadIdx.z) * 256)) + ((((int)threadIdx.x) >> 1) * 64)) + (rc_outer * 2)) + (((int)threadIdx.x) & 1)))];
        }
      }
    }
    __syncthreads();
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[((((int)threadIdx.z) * 8))]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 28))] * placeholder_shared[((((int)threadIdx.z) * 8))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 110))] * placeholder_shared[((((int)threadIdx.z) * 8))]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 138))] * placeholder_shared[((((int)threadIdx.z) * 8))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 220))] * placeholder_shared[((((int)threadIdx.z) * 8))]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 248))] * placeholder_shared[((((int)threadIdx.z) * 8))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 330))] * placeholder_shared[((((int)threadIdx.z) * 8))]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 358))] * placeholder_shared[((((int)threadIdx.z) * 8))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 2))]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 28))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 2))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 110))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 2))]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 138))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 2))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 220))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 2))]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 248))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 2))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 330))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 2))]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 358))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 2))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 4))]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 28))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 4))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 110))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 4))]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 138))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 4))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 220))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 4))]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 248))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 4))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 330))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 4))]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 358))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 4))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 6))]));
    compute[(28)] = (compute[(28)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 28))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 6))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 110))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 6))]));
    compute[(29)] = (compute[(29)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 138))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 6))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 220))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 6))]));
    compute[(30)] = (compute[(30)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 248))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 6))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 330))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 6))]));
    compute[(31)] = (compute[(31)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 358))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 6))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 385))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1))]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 413))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 495))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1))]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 523))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 605))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1))]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 633))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 715))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1))]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 743))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 385))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 3))]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 413))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 3))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 495))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 3))]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 523))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 3))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 605))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 3))]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 633))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 3))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 715))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 3))]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 743))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 3))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 385))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 5))]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 413))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 5))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 495))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 5))]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 523))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 5))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 605))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 5))]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 633))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 5))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 715))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 5))]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 743))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 5))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 385))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 7))]));
    compute[(28)] = (compute[(28)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 413))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 7))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 495))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 7))]));
    compute[(29)] = (compute[(29)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 523))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 7))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 605))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 7))]));
    compute[(30)] = (compute[(30)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 633))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 7))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 715))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 7))]));
    compute[(31)] = (compute[(31)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 743))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 7))]));
  }
  ((float*)T_relu)[(((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)))] = max((float)(((compute[(0)] + ((float*)placeholder2)[((((((int)blockIdx.z) & 1) * 64) + (((int)threadIdx.z) * 4)))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 14))] = max((float)(((compute[(16)] + ((float*)placeholder2)[((((((int)blockIdx.z) & 1) * 64) + (((int)threadIdx.z) * 4)))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 14))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 28))] = max((float)(((compute[(1)] + ((float*)placeholder2)[((((((int)blockIdx.z) & 1) * 64) + (((int)threadIdx.z) * 4)))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 28))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 42))] = max((float)(((compute[(17)] + ((float*)placeholder2)[((((((int)blockIdx.z) & 1) * 64) + (((int)threadIdx.z) * 4)))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 42))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 56))] = max((float)(((compute[(2)] + ((float*)placeholder2)[((((((int)blockIdx.z) & 1) * 64) + (((int)threadIdx.z) * 4)))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 56))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 70))] = max((float)(((compute[(18)] + ((float*)placeholder2)[((((((int)blockIdx.z) & 1) * 64) + (((int)threadIdx.z) * 4)))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 70))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 84))] = max((float)(((compute[(3)] + ((float*)placeholder2)[((((((int)blockIdx.z) & 1) * 64) + (((int)threadIdx.z) * 4)))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 84))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 98))] = max((float)(((compute[(19)] + ((float*)placeholder2)[((((((int)blockIdx.z) & 1) * 64) + (((int)threadIdx.z) * 4)))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 98))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 784))] = max((float)(((compute[(4)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 64) + (((int)threadIdx.z) * 4)) + 1))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 784))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 798))] = max((float)(((compute[(20)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 64) + (((int)threadIdx.z) * 4)) + 1))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 798))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 812))] = max((float)(((compute[(5)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 64) + (((int)threadIdx.z) * 4)) + 1))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 812))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 826))] = max((float)(((compute[(21)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 64) + (((int)threadIdx.z) * 4)) + 1))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 826))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 840))] = max((float)(((compute[(6)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 64) + (((int)threadIdx.z) * 4)) + 1))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 840))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 854))] = max((float)(((compute[(22)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 64) + (((int)threadIdx.z) * 4)) + 1))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 854))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 868))] = max((float)(((compute[(7)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 64) + (((int)threadIdx.z) * 4)) + 1))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 868))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 882))] = max((float)(((compute[(23)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 64) + (((int)threadIdx.z) * 4)) + 1))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 882))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 1568))] = max((float)(((compute[(8)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 64) + (((int)threadIdx.z) * 4)) + 2))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 1568))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 1582))] = max((float)(((compute[(24)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 64) + (((int)threadIdx.z) * 4)) + 2))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 1582))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 1596))] = max((float)(((compute[(9)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 64) + (((int)threadIdx.z) * 4)) + 2))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 1596))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 1610))] = max((float)(((compute[(25)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 64) + (((int)threadIdx.z) * 4)) + 2))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 1610))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 1624))] = max((float)(((compute[(10)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 64) + (((int)threadIdx.z) * 4)) + 2))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 1624))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 1638))] = max((float)(((compute[(26)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 64) + (((int)threadIdx.z) * 4)) + 2))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 1638))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 1652))] = max((float)(((compute[(11)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 64) + (((int)threadIdx.z) * 4)) + 2))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 1652))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 1666))] = max((float)(((compute[(27)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 64) + (((int)threadIdx.z) * 4)) + 2))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 1666))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 2352))] = max((float)(((compute[(12)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 64) + (((int)threadIdx.z) * 4)) + 3))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 2352))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 2366))] = max((float)(((compute[(28)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 64) + (((int)threadIdx.z) * 4)) + 3))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 2366))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 2380))] = max((float)(((compute[(13)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 64) + (((int)threadIdx.z) * 4)) + 3))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 2380))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 2394))] = max((float)(((compute[(29)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 64) + (((int)threadIdx.z) * 4)) + 3))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 2394))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 2408))] = max((float)(((compute[(14)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 64) + (((int)threadIdx.z) * 4)) + 3))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 2408))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 2422))] = max((float)(((compute[(30)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 64) + (((int)threadIdx.z) * 4)) + 3))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 2422))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 2436))] = max((float)(((compute[(15)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 64) + (((int)threadIdx.z) * 4)) + 3))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 2436))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 2450))] = max((float)(((compute[(31)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 64) + (((int)threadIdx.z) * 4)) + 3))]) + ((float*)placeholder3)[((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 3136)) + (((int)blockIdx.y) * 112)) + ((int)threadIdx.x)) + 2450))])), (float)(0.000000e+00f));
}

extern "C" __global__ void fused_nn_contrib_conv2d_winograd_without_weight_transform_add_add_nn_relu_kernel1(void* __restrict__ placeholder, float* __restrict__ data_pack, float* __restrict__ bgemm) {
  float bgemm_local[128];
  __shared__ float placeholder_shared[1024];
  __shared__ float data_pack_shared[1024];
  #pragma unroll
  for (int co_c_init = 0; co_c_init < 32; ++co_c_init) {
    #pragma unroll
    for (int p_c_init = 0; p_c_init < 4; ++p_c_init) {
      bgemm_local[(((co_c_init * 4) + p_c_init))] = 0.000000e+00f;
    }
  }
  for (int ci_outer = 0; ci_outer < 64; ++ci_outer) {
    __syncthreads();
    #pragma unroll
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer = 0; ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer < 8; ++ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer) {
      placeholder_shared[((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 128) + (((int)threadIdx.y) * 32)) + ((int)threadIdx.x)))] = ((float*)placeholder)[(((((((((int)blockIdx.z) * 262144) + (ci_outer * 4096)) + (ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 512)) + (((int)blockIdx.y) * 128)) + (((int)threadIdx.y) * 32)) + ((int)threadIdx.x)))];
    }
    #pragma unroll
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer1 < 8; ++ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer1) {
      data_pack_shared[((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer1 * 128) + (((int)threadIdx.y) * 32)) + ((int)threadIdx.x)))] = data_pack[(((((((((int)blockIdx.z) * 262144) + (ci_outer * 4096)) + (ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer1 * 512)) + (((int)blockIdx.x) * 128)) + (((int)threadIdx.y) * 32)) + ((int)threadIdx.x)))];
    }
    __syncthreads();
    #pragma unroll
    for (int ci_inner = 0; ci_inner < 8; ++ci_inner) {
      #pragma unroll
      for (int co_c = 0; co_c < 32; ++co_c) {
        #pragma unroll
        for (int p_c = 0; p_c < 4; ++p_c) {
          bgemm_local[(((co_c * 4) + p_c))] = (bgemm_local[(((co_c * 4) + p_c))] + (placeholder_shared[((((ci_inner * 128) + (((int)threadIdx.y) * 32)) + co_c))] * data_pack_shared[((((ci_inner * 128) + (((int)threadIdx.x) * 4)) + p_c))]));
        }
      }
    }
  }
  #pragma unroll
  for (int co_inner_inner_inner = 0; co_inner_inner_inner < 32; ++co_inner_inner_inner) {
    #pragma unroll
    for (int p_inner_inner_inner = 0; p_inner_inner_inner < 4; ++p_inner_inner_inner) {
      bgemm[((((((((((int)blockIdx.z) * 262144) + (((int)blockIdx.y) * 65536)) + (((int)threadIdx.y) * 16384)) + (co_inner_inner_inner * 512)) + (((int)blockIdx.x) * 128)) + (((int)threadIdx.x) * 4)) + p_inner_inner_inner))] = bgemm_local[(((co_inner_inner_inner * 4) + p_inner_inner_inner))];
    }
  }
}

extern "C" __global__ void fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_kernel1(void* __restrict__ placeholder, float* __restrict__ data_pack, float* __restrict__ bgemm) {
  float bgemm_local[128];
  __shared__ float placeholder_shared[1024];
  __shared__ float data_pack_shared[1024];
  #pragma unroll
  for (int co_c_init = 0; co_c_init < 32; ++co_c_init) {
    #pragma unroll
    for (int p_c_init = 0; p_c_init < 4; ++p_c_init) {
      bgemm_local[(((co_c_init * 4) + p_c_init))] = 0.000000e+00f;
    }
  }
  for (int ci_outer = 0; ci_outer < 64; ++ci_outer) {
    __syncthreads();
    #pragma unroll
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer = 0; ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer < 8; ++ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer) {
      placeholder_shared[((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 128) + (((int)threadIdx.y) * 32)) + ((int)threadIdx.x)))] = ((float*)placeholder)[(((((((((int)blockIdx.z) * 262144) + (ci_outer * 4096)) + (ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 512)) + (((int)blockIdx.y) * 128)) + (((int)threadIdx.y) * 32)) + ((int)threadIdx.x)))];
    }
    #pragma unroll
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer1 < 8; ++ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer1) {
      data_pack_shared[((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer1 * 128) + (((int)threadIdx.y) * 32)) + ((int)threadIdx.x)))] = data_pack[(((((((((int)blockIdx.z) * 262144) + (ci_outer * 4096)) + (ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer1 * 512)) + (((int)blockIdx.x) * 128)) + (((int)threadIdx.y) * 32)) + ((int)threadIdx.x)))];
    }
    __syncthreads();
    #pragma unroll
    for (int ci_inner = 0; ci_inner < 8; ++ci_inner) {
      #pragma unroll
      for (int co_c = 0; co_c < 32; ++co_c) {
        #pragma unroll
        for (int p_c = 0; p_c < 4; ++p_c) {
          bgemm_local[(((co_c * 4) + p_c))] = (bgemm_local[(((co_c * 4) + p_c))] + (placeholder_shared[((((ci_inner * 128) + (((int)threadIdx.y) * 32)) + co_c))] * data_pack_shared[((((ci_inner * 128) + (((int)threadIdx.x) * 4)) + p_c))]));
        }
      }
    }
  }
  #pragma unroll
  for (int co_inner_inner_inner = 0; co_inner_inner_inner < 32; ++co_inner_inner_inner) {
    #pragma unroll
    for (int p_inner_inner_inner = 0; p_inner_inner_inner < 4; ++p_inner_inner_inner) {
      bgemm[((((((((((int)blockIdx.z) * 262144) + (((int)blockIdx.y) * 65536)) + (((int)threadIdx.y) * 16384)) + (co_inner_inner_inner * 512)) + (((int)blockIdx.x) * 128)) + (((int)threadIdx.x) * 4)) + p_inner_inner_inner))] = bgemm_local[(((co_inner_inner_inner * 4) + p_inner_inner_inner))];
    }
  }
}

extern "C" __global__ void fused_nn_conv2d_add_nn_relu_kernel0(void* __restrict__ placeholder, void* __restrict__ placeholder1, void* __restrict__ T_relu, void* __restrict__ placeholder2) {
  float compute[56];
  __shared__ float pad_temp_shared[1221];
  __shared__ float placeholder_shared[1568];
  compute[(0)] = 0.000000e+00f;
  compute[(1)] = 0.000000e+00f;
  compute[(2)] = 0.000000e+00f;
  compute[(3)] = 0.000000e+00f;
  compute[(4)] = 0.000000e+00f;
  compute[(5)] = 0.000000e+00f;
  compute[(6)] = 0.000000e+00f;
  compute[(7)] = 0.000000e+00f;
  compute[(8)] = 0.000000e+00f;
  compute[(9)] = 0.000000e+00f;
  compute[(10)] = 0.000000e+00f;
  compute[(11)] = 0.000000e+00f;
  compute[(12)] = 0.000000e+00f;
  compute[(13)] = 0.000000e+00f;
  compute[(14)] = 0.000000e+00f;
  compute[(15)] = 0.000000e+00f;
  compute[(16)] = 0.000000e+00f;
  compute[(17)] = 0.000000e+00f;
  compute[(18)] = 0.000000e+00f;
  compute[(19)] = 0.000000e+00f;
  compute[(20)] = 0.000000e+00f;
  compute[(21)] = 0.000000e+00f;
  compute[(22)] = 0.000000e+00f;
  compute[(23)] = 0.000000e+00f;
  compute[(24)] = 0.000000e+00f;
  compute[(25)] = 0.000000e+00f;
  compute[(26)] = 0.000000e+00f;
  compute[(27)] = 0.000000e+00f;
  compute[(28)] = 0.000000e+00f;
  compute[(29)] = 0.000000e+00f;
  compute[(30)] = 0.000000e+00f;
  compute[(31)] = 0.000000e+00f;
  compute[(32)] = 0.000000e+00f;
  compute[(33)] = 0.000000e+00f;
  compute[(34)] = 0.000000e+00f;
  compute[(35)] = 0.000000e+00f;
  compute[(36)] = 0.000000e+00f;
  compute[(37)] = 0.000000e+00f;
  compute[(38)] = 0.000000e+00f;
  compute[(39)] = 0.000000e+00f;
  compute[(40)] = 0.000000e+00f;
  compute[(41)] = 0.000000e+00f;
  compute[(42)] = 0.000000e+00f;
  compute[(43)] = 0.000000e+00f;
  compute[(44)] = 0.000000e+00f;
  compute[(45)] = 0.000000e+00f;
  compute[(46)] = 0.000000e+00f;
  compute[(47)] = 0.000000e+00f;
  compute[(48)] = 0.000000e+00f;
  compute[(49)] = 0.000000e+00f;
  compute[(50)] = 0.000000e+00f;
  compute[(51)] = 0.000000e+00f;
  compute[(52)] = 0.000000e+00f;
  compute[(53)] = 0.000000e+00f;
  compute[(54)] = 0.000000e+00f;
  compute[(55)] = 0.000000e+00f;
  for (int rc_outer = 0; rc_outer < 3; ++rc_outer) {
    __syncthreads();
    pad_temp_shared[((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)))] = (((((3 <= ((((int)blockIdx.y) * 28) + ((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) / 37))) && (((((int)blockIdx.y) * 28) + ((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) / 37)) < 227)) && (3 <= ((((int)blockIdx.x) * 32) + ((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) % 37)))) && (((((int)blockIdx.x) * 32) + ((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) % 37)) < 227)) ? (float)((float*)placeholder)[(((((((((((int)blockIdx.z) >> 1) * 150528) + (rc_outer * 50176)) + (((int)blockIdx.y) * 6272)) + (((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) / 37) * 224)) + (((int)blockIdx.x) * 32)) + ((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) % 37)) - 675))] : (float)0.000000e+00f);
    pad_temp_shared[(((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) + 1))] = (((((3 <= ((((int)blockIdx.y) * 28) + (((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) + 1) / 37))) && (((((int)blockIdx.y) * 28) + (((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) + 1) / 37)) < 227)) && (3 <= ((((int)blockIdx.x) * 32) + (((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) + 1) % 37)))) && (((((int)blockIdx.x) * 32) + (((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) + 1) % 37)) < 227)) ? (float)((float*)placeholder)[(((((((((((int)blockIdx.z) >> 1) * 150528) + (rc_outer * 50176)) + (((int)blockIdx.y) * 6272)) + ((((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) + 1) / 37) * 224)) + (((int)blockIdx.x) * 32)) + (((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) + 1) % 37)) - 675))] : (float)0.000000e+00f);
    pad_temp_shared[(((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) + 2))] = (((((3 <= ((((int)blockIdx.y) * 28) + (((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) + 2) / 37))) && (((((int)blockIdx.y) * 28) + (((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) + 2) / 37)) < 227)) && (3 <= ((((int)blockIdx.x) * 32) + (((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) + 2) % 37)))) && (((((int)blockIdx.x) * 32) + (((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) + 2) % 37)) < 227)) ? (float)((float*)placeholder)[(((((((((((int)blockIdx.z) >> 1) * 150528) + (rc_outer * 50176)) + (((int)blockIdx.y) * 6272)) + ((((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) + 2) / 37) * 224)) + (((int)blockIdx.x) * 32)) + (((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) + 2) % 37)) - 675))] : (float)0.000000e+00f);
    if ((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) < 1218) {
      pad_temp_shared[(((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) + 3))] = (((((3 <= ((((int)blockIdx.y) * 28) + (((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) + 3) / 37))) && (((((int)blockIdx.y) * 28) + (((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) + 3) / 37)) < 227)) && (3 <= ((((int)blockIdx.x) * 32) + (((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) + 3) % 37)))) && (((((int)blockIdx.x) * 32) + (((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) + 3) % 37)) < 227)) ? (float)((float*)placeholder)[(((((((((((int)blockIdx.z) >> 1) * 150528) + (rc_outer * 50176)) + (((int)blockIdx.y) * 6272)) + ((((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) + 3) / 37) * 224)) + (((int)blockIdx.x) * 32)) + (((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) + 3) % 37)) - 675))] : (float)0.000000e+00f);
    }
    if ((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) < 1217) {
      pad_temp_shared[(((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) + 4))] = (((((3 <= ((((int)blockIdx.y) * 28) + (((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) + 4) / 37))) && (((((int)blockIdx.y) * 28) + (((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) + 4) / 37)) < 227)) && (3 <= ((((int)blockIdx.x) * 32) + (((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) + 4) % 37)))) && (((((int)blockIdx.x) * 32) + (((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) + 4) % 37)) < 227)) ? (float)((float*)placeholder)[(((((((((((int)blockIdx.z) >> 1) * 150528) + (rc_outer * 50176)) + (((int)blockIdx.y) * 6272)) + ((((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) + 4) / 37) * 224)) + (((int)blockIdx.x) * 32)) + (((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) + 4) % 37)) - 675))] : (float)0.000000e+00f);
    }
    if ((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) < 1216) {
      pad_temp_shared[(((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) + 5))] = (((((3 <= ((((int)blockIdx.y) * 28) + (((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) + 5) / 37))) && (((((int)blockIdx.y) * 28) + (((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) + 5) / 37)) < 227)) && (3 <= ((((int)blockIdx.x) * 32) + (((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) + 5) % 37)))) && (((((int)blockIdx.x) * 32) + (((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) + 5) % 37)) < 227)) ? (float)((float*)placeholder)[(((((((((((int)blockIdx.z) >> 1) * 150528) + (rc_outer * 50176)) + (((int)blockIdx.y) * 6272)) + ((((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) + 5) / 37) * 224)) + (((int)blockIdx.x) * 32)) + (((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) + 5) % 37)) - 675))] : (float)0.000000e+00f);
    }
    if ((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) < 1215) {
      if (((((int)threadIdx.y) * 77) + (((int)threadIdx.x) * 10)) < 147) {
        pad_temp_shared[(((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) + 6))] = (((((3 <= ((((int)blockIdx.y) * 28) + (((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) + 6) / 37))) && (((((int)blockIdx.y) * 28) + (((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) + 6) / 37)) < 227)) && (3 <= ((((int)blockIdx.x) * 32) + (((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) + 6) % 37)))) && (((((int)blockIdx.x) * 32) + (((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) + 6) % 37)) < 227)) ? (float)((float*)placeholder)[(((((((((((int)blockIdx.z) >> 1) * 150528) + (rc_outer * 50176)) + (((int)blockIdx.y) * 6272)) + ((((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) + 6) / 37) * 224)) + (((int)blockIdx.x) * 32)) + (((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) + 6) % 37)) - 675))] : (float)0.000000e+00f);
      }
    }
    if ((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) < 1214) {
      if (((((int)threadIdx.y) * 77) + (((int)threadIdx.x) * 10)) < 146) {
        if (((int)threadIdx.x) < 7) {
          pad_temp_shared[(((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) + 7))] = (((((3 <= ((((int)blockIdx.y) * 28) + (((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) + 7) / 37))) && (((((int)blockIdx.y) * 28) + (((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) + 7) / 37)) < 227)) && (3 <= ((((int)blockIdx.x) * 32) + (((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) + 7) % 37)))) && (((((int)blockIdx.x) * 32) + (((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) + 7) % 37)) < 227)) ? (float)((float*)placeholder)[(((((((((((int)blockIdx.z) >> 1) * 150528) + (rc_outer * 50176)) + (((int)blockIdx.y) * 6272)) + ((((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) + 7) / 37) * 224)) + (((int)blockIdx.x) * 32)) + (((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) + 7) % 37)) - 675))] : (float)0.000000e+00f);
        }
      }
    }
    if ((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) < 1213) {
      if (((((int)threadIdx.y) * 77) + (((int)threadIdx.x) * 10)) < 145) {
        if (((int)threadIdx.x) < 7) {
          pad_temp_shared[(((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) + 8))] = (((((3 <= ((((int)blockIdx.y) * 28) + (((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) + 8) / 37))) && (((((int)blockIdx.y) * 28) + (((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) + 8) / 37)) < 227)) && (3 <= ((((int)blockIdx.x) * 32) + (((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) + 8) % 37)))) && (((((int)blockIdx.x) * 32) + (((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) + 8) % 37)) < 227)) ? (float)((float*)placeholder)[(((((((((((int)blockIdx.z) >> 1) * 150528) + (rc_outer * 50176)) + (((int)blockIdx.y) * 6272)) + ((((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) + 8) / 37) * 224)) + (((int)blockIdx.x) * 32)) + (((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) + 8) % 37)) - 675))] : (float)0.000000e+00f);
        }
      }
    }
    if ((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) < 1212) {
      if (((((int)threadIdx.y) * 77) + (((int)threadIdx.x) * 10)) < 144) {
        if (((int)threadIdx.x) < 7) {
          pad_temp_shared[(((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) + 9))] = (((((3 <= ((((int)blockIdx.y) * 28) + (((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) + 9) / 37))) && (((((int)blockIdx.y) * 28) + (((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) + 9) / 37)) < 227)) && (3 <= ((((int)blockIdx.x) * 32) + (((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) + 9) % 37)))) && (((((int)blockIdx.x) * 32) + (((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) + 9) % 37)) < 227)) ? (float)((float*)placeholder)[(((((((((((int)blockIdx.z) >> 1) * 150528) + (rc_outer * 50176)) + (((int)blockIdx.y) * 6272)) + ((((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) + 9) / 37) * 224)) + (((int)blockIdx.x) * 32)) + (((((((int)threadIdx.z) * 153) + (((int)threadIdx.y) * 77)) + (((int)threadIdx.x) * 10)) + 9) % 37)) - 675))] : (float)0.000000e+00f);
        }
      }
    }
    placeholder_shared[((((((int)threadIdx.z) * 196) + (((int)threadIdx.y) * 98)) + (((int)threadIdx.x) * 13)))] = ((float*)placeholder1)[((((((((((int)blockIdx.z) & 1) * 4704) + (((int)threadIdx.z) * 588)) + (((int)threadIdx.y) * 294)) + (((((int)threadIdx.x) * 13) / 49) * 147)) + (rc_outer * 49)) + ((((int)threadIdx.x) * 13) % 49)))];
    placeholder_shared[(((((((int)threadIdx.z) * 196) + (((int)threadIdx.y) * 98)) + (((int)threadIdx.x) * 13)) + 1))] = ((float*)placeholder1)[((((((((((int)blockIdx.z) & 1) * 4704) + (((int)threadIdx.z) * 588)) + (((int)threadIdx.y) * 294)) + ((((((int)threadIdx.x) * 13) + 1) / 49) * 147)) + (rc_outer * 49)) + (((((int)threadIdx.x) * 13) + 1) % 49)))];
    placeholder_shared[(((((((int)threadIdx.z) * 196) + (((int)threadIdx.y) * 98)) + (((int)threadIdx.x) * 13)) + 2))] = ((float*)placeholder1)[((((((((((int)blockIdx.z) & 1) * 4704) + (((int)threadIdx.z) * 588)) + (((int)threadIdx.y) * 294)) + ((((((int)threadIdx.x) * 13) + 2) / 49) * 147)) + (rc_outer * 49)) + (((((int)threadIdx.x) * 13) + 2) % 49)))];
    placeholder_shared[(((((((int)threadIdx.z) * 196) + (((int)threadIdx.y) * 98)) + (((int)threadIdx.x) * 13)) + 3))] = ((float*)placeholder1)[((((((((((int)blockIdx.z) & 1) * 4704) + (((int)threadIdx.z) * 588)) + (((int)threadIdx.y) * 294)) + ((((((int)threadIdx.x) * 13) + 3) / 49) * 147)) + (rc_outer * 49)) + (((((int)threadIdx.x) * 13) + 3) % 49)))];
    placeholder_shared[(((((((int)threadIdx.z) * 196) + (((int)threadIdx.y) * 98)) + (((int)threadIdx.x) * 13)) + 4))] = ((float*)placeholder1)[((((((((((int)blockIdx.z) & 1) * 4704) + (((int)threadIdx.z) * 588)) + (((int)threadIdx.y) * 294)) + ((((((int)threadIdx.x) * 13) + 4) / 49) * 147)) + (rc_outer * 49)) + (((((int)threadIdx.x) * 13) + 4) % 49)))];
    placeholder_shared[(((((((int)threadIdx.z) * 196) + (((int)threadIdx.y) * 98)) + (((int)threadIdx.x) * 13)) + 5))] = ((float*)placeholder1)[((((((((((int)blockIdx.z) & 1) * 4704) + (((int)threadIdx.z) * 588)) + (((int)threadIdx.y) * 294)) + ((((((int)threadIdx.x) * 13) + 5) / 49) * 147)) + (rc_outer * 49)) + (((((int)threadIdx.x) * 13) + 5) % 49)))];
    placeholder_shared[(((((((int)threadIdx.z) * 196) + (((int)threadIdx.y) * 98)) + (((int)threadIdx.x) * 13)) + 6))] = ((float*)placeholder1)[((((((((((int)blockIdx.z) & 1) * 4704) + (((int)threadIdx.z) * 588)) + (((int)threadIdx.y) * 294)) + ((((((int)threadIdx.x) * 13) + 6) / 49) * 147)) + (rc_outer * 49)) + (((((int)threadIdx.x) * 13) + 6) % 49)))];
    if ((((((int)threadIdx.z) * 4) + (((int)threadIdx.y) * 2)) + (((((int)threadIdx.x) * 13) + 7) / 49)) < 32) {
      if ((((((int)threadIdx.z) * 28) + (((int)threadIdx.y) * 14)) + ((((int)threadIdx.x) * 13) / 7)) < 223) {
        if ((((((int)threadIdx.z) * 196) + (((int)threadIdx.y) * 98)) + (((int)threadIdx.x) * 13)) < 1561) {
          if (((((int)threadIdx.y) * 98) + (((int)threadIdx.x) * 13)) < 189) {
            if (((int)threadIdx.x) < 7) {
              placeholder_shared[(((((((int)threadIdx.z) * 196) + (((int)threadIdx.y) * 98)) + (((int)threadIdx.x) * 13)) + 7))] = ((float*)placeholder1)[((((((((((int)blockIdx.z) & 1) * 4704) + (((int)threadIdx.z) * 588)) + (((int)threadIdx.y) * 294)) + ((((((int)threadIdx.x) * 13) + 7) / 49) * 147)) + (rc_outer * 49)) + (((((int)threadIdx.x) * 13) + 7) % 49)))];
            }
          }
        }
      }
    }
    if ((((((int)threadIdx.z) * 4) + (((int)threadIdx.y) * 2)) + (((((int)threadIdx.x) * 13) + 8) / 49)) < 32) {
      if ((((((int)threadIdx.z) * 28) + (((int)threadIdx.y) * 14)) + (((((int)threadIdx.x) * 13) + 8) / 7)) < 224) {
        if ((((((int)threadIdx.z) * 196) + (((int)threadIdx.y) * 98)) + (((int)threadIdx.x) * 13)) < 1560) {
          if (((((int)threadIdx.y) * 98) + (((int)threadIdx.x) * 13)) < 188) {
            if (((int)threadIdx.x) < 7) {
              placeholder_shared[(((((((int)threadIdx.z) * 196) + (((int)threadIdx.y) * 98)) + (((int)threadIdx.x) * 13)) + 8))] = ((float*)placeholder1)[((((((((((int)blockIdx.z) & 1) * 4704) + (((int)threadIdx.z) * 588)) + (((int)threadIdx.y) * 294)) + ((((((int)threadIdx.x) * 13) + 8) / 49) * 147)) + (rc_outer * 49)) + (((((int)threadIdx.x) * 13) + 8) % 49)))];
            }
          }
        }
      }
    }
    if ((((((int)threadIdx.z) * 4) + (((int)threadIdx.y) * 2)) + (((((int)threadIdx.x) * 13) + 9) / 49)) < 32) {
      if ((((((int)threadIdx.z) * 28) + (((int)threadIdx.y) * 14)) + (((((int)threadIdx.x) * 13) + 9) / 7)) < 224) {
        if ((((((int)threadIdx.z) * 196) + (((int)threadIdx.y) * 98)) + (((int)threadIdx.x) * 13)) < 1559) {
          if (((((int)threadIdx.y) * 98) + (((int)threadIdx.x) * 13)) < 187) {
            if (((int)threadIdx.x) < 7) {
              placeholder_shared[(((((((int)threadIdx.z) * 196) + (((int)threadIdx.y) * 98)) + (((int)threadIdx.x) * 13)) + 9))] = ((float*)placeholder1)[((((((((((int)blockIdx.z) & 1) * 4704) + (((int)threadIdx.z) * 588)) + (((int)threadIdx.y) * 294)) + ((((((int)threadIdx.x) * 13) + 9) / 49) * 147)) + (rc_outer * 49)) + (((((int)threadIdx.x) * 13) + 9) % 49)))];
            }
          }
        }
      }
    }
    if ((((((int)threadIdx.z) * 4) + (((int)threadIdx.y) * 2)) + (((((int)threadIdx.x) * 13) + 10) / 49)) < 32) {
      if ((((((int)threadIdx.z) * 28) + (((int)threadIdx.y) * 14)) + (((((int)threadIdx.x) * 13) + 10) / 7)) < 224) {
        if ((((((int)threadIdx.z) * 196) + (((int)threadIdx.y) * 98)) + (((int)threadIdx.x) * 13)) < 1558) {
          if (((((int)threadIdx.y) * 98) + (((int)threadIdx.x) * 13)) < 186) {
            if (((int)threadIdx.x) < 7) {
              placeholder_shared[(((((((int)threadIdx.z) * 196) + (((int)threadIdx.y) * 98)) + (((int)threadIdx.x) * 13)) + 10))] = ((float*)placeholder1)[((((((((((int)blockIdx.z) & 1) * 4704) + (((int)threadIdx.z) * 588)) + (((int)threadIdx.y) * 294)) + ((((((int)threadIdx.x) * 13) + 10) / 49) * 147)) + (rc_outer * 49)) + (((((int)threadIdx.x) * 13) + 10) % 49)))];
            }
          }
        }
      }
    }
    if ((((((int)threadIdx.z) * 4) + (((int)threadIdx.y) * 2)) + (((((int)threadIdx.x) * 13) + 11) / 49)) < 32) {
      if ((((((int)threadIdx.z) * 28) + (((int)threadIdx.y) * 14)) + (((((int)threadIdx.x) * 13) + 11) / 7)) < 224) {
        if ((((((int)threadIdx.z) * 196) + (((int)threadIdx.y) * 98)) + (((int)threadIdx.x) * 13)) < 1557) {
          if (((((int)threadIdx.y) * 98) + (((int)threadIdx.x) * 13)) < 185) {
            if (((int)threadIdx.x) < 7) {
              placeholder_shared[(((((((int)threadIdx.z) * 196) + (((int)threadIdx.y) * 98)) + (((int)threadIdx.x) * 13)) + 11))] = ((float*)placeholder1)[((((((((((int)blockIdx.z) & 1) * 4704) + (((int)threadIdx.z) * 588)) + (((int)threadIdx.y) * 294)) + ((((((int)threadIdx.x) * 13) + 11) / 49) * 147)) + (rc_outer * 49)) + (((((int)threadIdx.x) * 13) + 11) % 49)))];
            }
          }
        }
      }
    }
    if ((((((int)threadIdx.z) * 4) + (((int)threadIdx.y) * 2)) + (((((int)threadIdx.x) * 13) + 12) / 49)) < 32) {
      if ((((((int)threadIdx.z) * 28) + (((int)threadIdx.y) * 14)) + (((((int)threadIdx.x) * 13) + 12) / 7)) < 224) {
        if ((((((int)threadIdx.z) * 196) + (((int)threadIdx.y) * 98)) + (((int)threadIdx.x) * 13)) < 1556) {
          if (((((int)threadIdx.y) * 98) + (((int)threadIdx.x) * 13)) < 184) {
            if (((int)threadIdx.x) < 7) {
              placeholder_shared[(((((((int)threadIdx.z) * 196) + (((int)threadIdx.y) * 98)) + (((int)threadIdx.x) * 13)) + 12))] = ((float*)placeholder1)[((((((((((int)blockIdx.z) & 1) * 4704) + (((int)threadIdx.z) * 588)) + (((int)threadIdx.y) * 294)) + ((((((int)threadIdx.x) * 13) + 12) / 49) * 147)) + (rc_outer * 49)) + (((((int)threadIdx.x) * 13) + 12) % 49)))];
            }
          }
        }
      }
    }
    __syncthreads();
    for (int ry_inner = 0; ry_inner < 7; ++ry_inner) {
      compute[(0)] = (compute[(0)] + (pad_temp_shared[((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)))] * placeholder_shared[(((((int)threadIdx.z) * 196) + (ry_inner * 7)))]));
      compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 196) + (ry_inner * 7)))]));
      compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 74))] * placeholder_shared[(((((int)threadIdx.z) * 196) + (ry_inner * 7)))]));
      compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 76))] * placeholder_shared[(((((int)threadIdx.z) * 196) + (ry_inner * 7)))]));
      compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 148))] * placeholder_shared[(((((int)threadIdx.z) * 196) + (ry_inner * 7)))]));
      compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 150))] * placeholder_shared[(((((int)threadIdx.z) * 196) + (ry_inner * 7)))]));
      compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 222))] * placeholder_shared[(((((int)threadIdx.z) * 196) + (ry_inner * 7)))]));
      compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 196) + (ry_inner * 7)))]));
      compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 296))] * placeholder_shared[(((((int)threadIdx.z) * 196) + (ry_inner * 7)))]));
      compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 298))] * placeholder_shared[(((((int)threadIdx.z) * 196) + (ry_inner * 7)))]));
      compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 370))] * placeholder_shared[(((((int)threadIdx.z) * 196) + (ry_inner * 7)))]));
      compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 372))] * placeholder_shared[(((((int)threadIdx.z) * 196) + (ry_inner * 7)))]));
      compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 444))] * placeholder_shared[(((((int)threadIdx.z) * 196) + (ry_inner * 7)))]));
      compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 446))] * placeholder_shared[(((((int)threadIdx.z) * 196) + (ry_inner * 7)))]));
      compute[(14)] = (compute[(14)] + (pad_temp_shared[((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 49))]));
      compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 2))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 49))]));
      compute[(16)] = (compute[(16)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 74))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 49))]));
      compute[(17)] = (compute[(17)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 76))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 49))]));
      compute[(18)] = (compute[(18)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 148))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 49))]));
      compute[(19)] = (compute[(19)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 150))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 49))]));
      compute[(20)] = (compute[(20)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 222))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 49))]));
      compute[(21)] = (compute[(21)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 224))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 49))]));
      compute[(22)] = (compute[(22)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 296))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 49))]));
      compute[(23)] = (compute[(23)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 298))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 49))]));
      compute[(24)] = (compute[(24)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 370))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 49))]));
      compute[(25)] = (compute[(25)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 372))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 49))]));
      compute[(26)] = (compute[(26)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 444))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 49))]));
      compute[(27)] = (compute[(27)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 446))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 49))]));
      compute[(28)] = (compute[(28)] + (pad_temp_shared[((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 98))]));
      compute[(29)] = (compute[(29)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 2))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 98))]));
      compute[(30)] = (compute[(30)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 74))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 98))]));
      compute[(31)] = (compute[(31)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 76))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 98))]));
      compute[(32)] = (compute[(32)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 148))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 98))]));
      compute[(33)] = (compute[(33)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 150))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 98))]));
      compute[(34)] = (compute[(34)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 222))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 98))]));
      compute[(35)] = (compute[(35)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 224))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 98))]));
      compute[(36)] = (compute[(36)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 296))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 98))]));
      compute[(37)] = (compute[(37)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 298))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 98))]));
      compute[(38)] = (compute[(38)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 370))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 98))]));
      compute[(39)] = (compute[(39)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 372))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 98))]));
      compute[(40)] = (compute[(40)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 444))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 98))]));
      compute[(41)] = (compute[(41)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 446))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 98))]));
      compute[(42)] = (compute[(42)] + (pad_temp_shared[((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 147))]));
      compute[(43)] = (compute[(43)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 2))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 147))]));
      compute[(44)] = (compute[(44)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 74))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 147))]));
      compute[(45)] = (compute[(45)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 76))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 147))]));
      compute[(46)] = (compute[(46)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 148))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 147))]));
      compute[(47)] = (compute[(47)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 150))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 147))]));
      compute[(48)] = (compute[(48)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 222))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 147))]));
      compute[(49)] = (compute[(49)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 224))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 147))]));
      compute[(50)] = (compute[(50)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 296))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 147))]));
      compute[(51)] = (compute[(51)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 298))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 147))]));
      compute[(52)] = (compute[(52)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 370))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 147))]));
      compute[(53)] = (compute[(53)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 372))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 147))]));
      compute[(54)] = (compute[(54)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 444))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 147))]));
      compute[(55)] = (compute[(55)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 446))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 147))]));
      compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 1))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 1))]));
      compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 3))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 1))]));
      compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 75))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 1))]));
      compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 77))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 1))]));
      compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 149))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 1))]));
      compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 151))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 1))]));
      compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 223))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 1))]));
      compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 225))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 1))]));
      compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 297))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 1))]));
      compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 299))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 1))]));
      compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 371))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 1))]));
      compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 373))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 1))]));
      compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 445))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 1))]));
      compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 447))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 1))]));
      compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 1))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 50))]));
      compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 3))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 50))]));
      compute[(16)] = (compute[(16)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 75))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 50))]));
      compute[(17)] = (compute[(17)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 77))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 50))]));
      compute[(18)] = (compute[(18)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 149))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 50))]));
      compute[(19)] = (compute[(19)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 151))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 50))]));
      compute[(20)] = (compute[(20)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 223))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 50))]));
      compute[(21)] = (compute[(21)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 225))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 50))]));
      compute[(22)] = (compute[(22)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 297))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 50))]));
      compute[(23)] = (compute[(23)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 299))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 50))]));
      compute[(24)] = (compute[(24)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 371))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 50))]));
      compute[(25)] = (compute[(25)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 373))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 50))]));
      compute[(26)] = (compute[(26)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 445))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 50))]));
      compute[(27)] = (compute[(27)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 447))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 50))]));
      compute[(28)] = (compute[(28)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 1))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 99))]));
      compute[(29)] = (compute[(29)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 3))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 99))]));
      compute[(30)] = (compute[(30)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 75))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 99))]));
      compute[(31)] = (compute[(31)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 77))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 99))]));
      compute[(32)] = (compute[(32)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 149))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 99))]));
      compute[(33)] = (compute[(33)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 151))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 99))]));
      compute[(34)] = (compute[(34)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 223))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 99))]));
      compute[(35)] = (compute[(35)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 225))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 99))]));
      compute[(36)] = (compute[(36)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 297))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 99))]));
      compute[(37)] = (compute[(37)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 299))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 99))]));
      compute[(38)] = (compute[(38)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 371))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 99))]));
      compute[(39)] = (compute[(39)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 373))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 99))]));
      compute[(40)] = (compute[(40)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 445))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 99))]));
      compute[(41)] = (compute[(41)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 447))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 99))]));
      compute[(42)] = (compute[(42)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 1))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 148))]));
      compute[(43)] = (compute[(43)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 3))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 148))]));
      compute[(44)] = (compute[(44)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 75))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 148))]));
      compute[(45)] = (compute[(45)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 77))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 148))]));
      compute[(46)] = (compute[(46)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 149))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 148))]));
      compute[(47)] = (compute[(47)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 151))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 148))]));
      compute[(48)] = (compute[(48)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 223))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 148))]));
      compute[(49)] = (compute[(49)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 225))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 148))]));
      compute[(50)] = (compute[(50)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 297))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 148))]));
      compute[(51)] = (compute[(51)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 299))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 148))]));
      compute[(52)] = (compute[(52)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 371))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 148))]));
      compute[(53)] = (compute[(53)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 373))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 148))]));
      compute[(54)] = (compute[(54)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 445))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 148))]));
      compute[(55)] = (compute[(55)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 447))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 148))]));
      compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 2))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 2))]));
      compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 4))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 2))]));
      compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 76))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 2))]));
      compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 78))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 2))]));
      compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 150))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 2))]));
      compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 152))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 2))]));
      compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 224))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 2))]));
      compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 226))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 2))]));
      compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 298))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 2))]));
      compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 300))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 2))]));
      compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 372))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 2))]));
      compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 374))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 2))]));
      compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 446))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 2))]));
      compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 448))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 2))]));
      compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 2))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 51))]));
      compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 4))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 51))]));
      compute[(16)] = (compute[(16)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 76))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 51))]));
      compute[(17)] = (compute[(17)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 78))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 51))]));
      compute[(18)] = (compute[(18)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 150))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 51))]));
      compute[(19)] = (compute[(19)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 152))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 51))]));
      compute[(20)] = (compute[(20)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 224))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 51))]));
      compute[(21)] = (compute[(21)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 226))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 51))]));
      compute[(22)] = (compute[(22)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 298))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 51))]));
      compute[(23)] = (compute[(23)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 300))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 51))]));
      compute[(24)] = (compute[(24)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 372))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 51))]));
      compute[(25)] = (compute[(25)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 374))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 51))]));
      compute[(26)] = (compute[(26)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 446))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 51))]));
      compute[(27)] = (compute[(27)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 448))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 51))]));
      compute[(28)] = (compute[(28)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 2))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 100))]));
      compute[(29)] = (compute[(29)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 4))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 100))]));
      compute[(30)] = (compute[(30)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 76))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 100))]));
      compute[(31)] = (compute[(31)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 78))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 100))]));
      compute[(32)] = (compute[(32)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 150))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 100))]));
      compute[(33)] = (compute[(33)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 152))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 100))]));
      compute[(34)] = (compute[(34)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 224))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 100))]));
      compute[(35)] = (compute[(35)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 226))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 100))]));
      compute[(36)] = (compute[(36)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 298))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 100))]));
      compute[(37)] = (compute[(37)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 300))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 100))]));
      compute[(38)] = (compute[(38)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 372))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 100))]));
      compute[(39)] = (compute[(39)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 374))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 100))]));
      compute[(40)] = (compute[(40)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 446))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 100))]));
      compute[(41)] = (compute[(41)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 448))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 100))]));
      compute[(42)] = (compute[(42)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 2))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 149))]));
      compute[(43)] = (compute[(43)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 4))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 149))]));
      compute[(44)] = (compute[(44)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 76))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 149))]));
      compute[(45)] = (compute[(45)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 78))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 149))]));
      compute[(46)] = (compute[(46)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 150))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 149))]));
      compute[(47)] = (compute[(47)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 152))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 149))]));
      compute[(48)] = (compute[(48)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 224))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 149))]));
      compute[(49)] = (compute[(49)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 226))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 149))]));
      compute[(50)] = (compute[(50)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 298))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 149))]));
      compute[(51)] = (compute[(51)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 300))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 149))]));
      compute[(52)] = (compute[(52)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 372))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 149))]));
      compute[(53)] = (compute[(53)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 374))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 149))]));
      compute[(54)] = (compute[(54)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 446))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 149))]));
      compute[(55)] = (compute[(55)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 448))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 149))]));
      compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 3))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 3))]));
      compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 5))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 3))]));
      compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 77))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 3))]));
      compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 79))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 3))]));
      compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 151))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 3))]));
      compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 153))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 3))]));
      compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 225))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 3))]));
      compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 227))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 3))]));
      compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 299))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 3))]));
      compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 301))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 3))]));
      compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 373))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 3))]));
      compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 375))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 3))]));
      compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 447))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 3))]));
      compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 449))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 3))]));
      compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 3))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 52))]));
      compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 5))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 52))]));
      compute[(16)] = (compute[(16)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 77))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 52))]));
      compute[(17)] = (compute[(17)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 79))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 52))]));
      compute[(18)] = (compute[(18)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 151))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 52))]));
      compute[(19)] = (compute[(19)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 153))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 52))]));
      compute[(20)] = (compute[(20)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 225))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 52))]));
      compute[(21)] = (compute[(21)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 227))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 52))]));
      compute[(22)] = (compute[(22)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 299))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 52))]));
      compute[(23)] = (compute[(23)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 301))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 52))]));
      compute[(24)] = (compute[(24)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 373))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 52))]));
      compute[(25)] = (compute[(25)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 375))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 52))]));
      compute[(26)] = (compute[(26)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 447))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 52))]));
      compute[(27)] = (compute[(27)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 449))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 52))]));
      compute[(28)] = (compute[(28)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 3))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 101))]));
      compute[(29)] = (compute[(29)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 5))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 101))]));
      compute[(30)] = (compute[(30)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 77))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 101))]));
      compute[(31)] = (compute[(31)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 79))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 101))]));
      compute[(32)] = (compute[(32)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 151))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 101))]));
      compute[(33)] = (compute[(33)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 153))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 101))]));
      compute[(34)] = (compute[(34)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 225))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 101))]));
      compute[(35)] = (compute[(35)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 227))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 101))]));
      compute[(36)] = (compute[(36)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 299))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 101))]));
      compute[(37)] = (compute[(37)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 301))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 101))]));
      compute[(38)] = (compute[(38)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 373))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 101))]));
      compute[(39)] = (compute[(39)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 375))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 101))]));
      compute[(40)] = (compute[(40)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 447))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 101))]));
      compute[(41)] = (compute[(41)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 449))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 101))]));
      compute[(42)] = (compute[(42)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 3))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 150))]));
      compute[(43)] = (compute[(43)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 5))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 150))]));
      compute[(44)] = (compute[(44)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 77))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 150))]));
      compute[(45)] = (compute[(45)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 79))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 150))]));
      compute[(46)] = (compute[(46)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 151))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 150))]));
      compute[(47)] = (compute[(47)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 153))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 150))]));
      compute[(48)] = (compute[(48)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 225))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 150))]));
      compute[(49)] = (compute[(49)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 227))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 150))]));
      compute[(50)] = (compute[(50)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 299))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 150))]));
      compute[(51)] = (compute[(51)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 301))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 150))]));
      compute[(52)] = (compute[(52)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 373))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 150))]));
      compute[(53)] = (compute[(53)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 375))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 150))]));
      compute[(54)] = (compute[(54)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 447))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 150))]));
      compute[(55)] = (compute[(55)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 449))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 150))]));
      compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 4))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 4))]));
      compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 6))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 4))]));
      compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 78))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 4))]));
      compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 80))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 4))]));
      compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 152))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 4))]));
      compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 154))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 4))]));
      compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 226))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 4))]));
      compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 228))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 4))]));
      compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 300))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 4))]));
      compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 302))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 4))]));
      compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 374))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 4))]));
      compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 376))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 4))]));
      compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 448))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 4))]));
      compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 450))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 4))]));
      compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 4))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 53))]));
      compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 6))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 53))]));
      compute[(16)] = (compute[(16)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 78))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 53))]));
      compute[(17)] = (compute[(17)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 80))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 53))]));
      compute[(18)] = (compute[(18)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 152))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 53))]));
      compute[(19)] = (compute[(19)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 154))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 53))]));
      compute[(20)] = (compute[(20)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 226))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 53))]));
      compute[(21)] = (compute[(21)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 228))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 53))]));
      compute[(22)] = (compute[(22)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 300))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 53))]));
      compute[(23)] = (compute[(23)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 302))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 53))]));
      compute[(24)] = (compute[(24)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 374))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 53))]));
      compute[(25)] = (compute[(25)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 376))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 53))]));
      compute[(26)] = (compute[(26)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 448))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 53))]));
      compute[(27)] = (compute[(27)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 450))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 53))]));
      compute[(28)] = (compute[(28)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 4))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 102))]));
      compute[(29)] = (compute[(29)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 6))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 102))]));
      compute[(30)] = (compute[(30)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 78))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 102))]));
      compute[(31)] = (compute[(31)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 80))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 102))]));
      compute[(32)] = (compute[(32)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 152))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 102))]));
      compute[(33)] = (compute[(33)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 154))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 102))]));
      compute[(34)] = (compute[(34)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 226))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 102))]));
      compute[(35)] = (compute[(35)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 228))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 102))]));
      compute[(36)] = (compute[(36)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 300))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 102))]));
      compute[(37)] = (compute[(37)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 302))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 102))]));
      compute[(38)] = (compute[(38)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 374))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 102))]));
      compute[(39)] = (compute[(39)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 376))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 102))]));
      compute[(40)] = (compute[(40)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 448))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 102))]));
      compute[(41)] = (compute[(41)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 450))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 102))]));
      compute[(42)] = (compute[(42)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 4))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 151))]));
      compute[(43)] = (compute[(43)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 6))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 151))]));
      compute[(44)] = (compute[(44)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 78))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 151))]));
      compute[(45)] = (compute[(45)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 80))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 151))]));
      compute[(46)] = (compute[(46)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 152))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 151))]));
      compute[(47)] = (compute[(47)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 154))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 151))]));
      compute[(48)] = (compute[(48)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 226))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 151))]));
      compute[(49)] = (compute[(49)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 228))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 151))]));
      compute[(50)] = (compute[(50)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 300))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 151))]));
      compute[(51)] = (compute[(51)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 302))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 151))]));
      compute[(52)] = (compute[(52)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 374))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 151))]));
      compute[(53)] = (compute[(53)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 376))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 151))]));
      compute[(54)] = (compute[(54)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 448))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 151))]));
      compute[(55)] = (compute[(55)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 450))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 151))]));
      compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 5))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 5))]));
      compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 7))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 5))]));
      compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 79))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 5))]));
      compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 81))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 5))]));
      compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 153))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 5))]));
      compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 155))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 5))]));
      compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 227))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 5))]));
      compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 229))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 5))]));
      compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 301))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 5))]));
      compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 303))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 5))]));
      compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 375))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 5))]));
      compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 377))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 5))]));
      compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 449))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 5))]));
      compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 451))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 5))]));
      compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 5))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 54))]));
      compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 7))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 54))]));
      compute[(16)] = (compute[(16)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 79))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 54))]));
      compute[(17)] = (compute[(17)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 81))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 54))]));
      compute[(18)] = (compute[(18)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 153))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 54))]));
      compute[(19)] = (compute[(19)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 155))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 54))]));
      compute[(20)] = (compute[(20)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 227))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 54))]));
      compute[(21)] = (compute[(21)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 229))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 54))]));
      compute[(22)] = (compute[(22)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 301))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 54))]));
      compute[(23)] = (compute[(23)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 303))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 54))]));
      compute[(24)] = (compute[(24)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 375))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 54))]));
      compute[(25)] = (compute[(25)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 377))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 54))]));
      compute[(26)] = (compute[(26)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 449))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 54))]));
      compute[(27)] = (compute[(27)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 451))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 54))]));
      compute[(28)] = (compute[(28)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 5))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 103))]));
      compute[(29)] = (compute[(29)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 7))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 103))]));
      compute[(30)] = (compute[(30)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 79))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 103))]));
      compute[(31)] = (compute[(31)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 81))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 103))]));
      compute[(32)] = (compute[(32)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 153))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 103))]));
      compute[(33)] = (compute[(33)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 155))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 103))]));
      compute[(34)] = (compute[(34)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 227))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 103))]));
      compute[(35)] = (compute[(35)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 229))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 103))]));
      compute[(36)] = (compute[(36)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 301))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 103))]));
      compute[(37)] = (compute[(37)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 303))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 103))]));
      compute[(38)] = (compute[(38)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 375))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 103))]));
      compute[(39)] = (compute[(39)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 377))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 103))]));
      compute[(40)] = (compute[(40)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 449))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 103))]));
      compute[(41)] = (compute[(41)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 451))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 103))]));
      compute[(42)] = (compute[(42)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 5))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 152))]));
      compute[(43)] = (compute[(43)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 7))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 152))]));
      compute[(44)] = (compute[(44)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 79))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 152))]));
      compute[(45)] = (compute[(45)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 81))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 152))]));
      compute[(46)] = (compute[(46)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 153))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 152))]));
      compute[(47)] = (compute[(47)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 155))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 152))]));
      compute[(48)] = (compute[(48)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 227))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 152))]));
      compute[(49)] = (compute[(49)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 229))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 152))]));
      compute[(50)] = (compute[(50)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 301))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 152))]));
      compute[(51)] = (compute[(51)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 303))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 152))]));
      compute[(52)] = (compute[(52)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 375))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 152))]));
      compute[(53)] = (compute[(53)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 377))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 152))]));
      compute[(54)] = (compute[(54)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 449))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 152))]));
      compute[(55)] = (compute[(55)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 451))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 152))]));
      compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 6))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 6))]));
      compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 8))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 6))]));
      compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 80))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 6))]));
      compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 82))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 6))]));
      compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 154))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 6))]));
      compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 156))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 6))]));
      compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 228))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 6))]));
      compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 230))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 6))]));
      compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 302))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 6))]));
      compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 304))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 6))]));
      compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 376))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 6))]));
      compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 378))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 6))]));
      compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 450))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 6))]));
      compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 452))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 6))]));
      compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 6))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 55))]));
      compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 8))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 55))]));
      compute[(16)] = (compute[(16)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 80))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 55))]));
      compute[(17)] = (compute[(17)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 82))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 55))]));
      compute[(18)] = (compute[(18)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 154))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 55))]));
      compute[(19)] = (compute[(19)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 156))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 55))]));
      compute[(20)] = (compute[(20)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 228))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 55))]));
      compute[(21)] = (compute[(21)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 230))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 55))]));
      compute[(22)] = (compute[(22)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 302))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 55))]));
      compute[(23)] = (compute[(23)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 304))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 55))]));
      compute[(24)] = (compute[(24)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 376))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 55))]));
      compute[(25)] = (compute[(25)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 378))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 55))]));
      compute[(26)] = (compute[(26)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 450))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 55))]));
      compute[(27)] = (compute[(27)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 452))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 55))]));
      compute[(28)] = (compute[(28)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 6))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 104))]));
      compute[(29)] = (compute[(29)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 8))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 104))]));
      compute[(30)] = (compute[(30)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 80))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 104))]));
      compute[(31)] = (compute[(31)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 82))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 104))]));
      compute[(32)] = (compute[(32)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 154))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 104))]));
      compute[(33)] = (compute[(33)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 156))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 104))]));
      compute[(34)] = (compute[(34)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 228))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 104))]));
      compute[(35)] = (compute[(35)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 230))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 104))]));
      compute[(36)] = (compute[(36)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 302))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 104))]));
      compute[(37)] = (compute[(37)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 304))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 104))]));
      compute[(38)] = (compute[(38)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 376))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 104))]));
      compute[(39)] = (compute[(39)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 378))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 104))]));
      compute[(40)] = (compute[(40)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 450))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 104))]));
      compute[(41)] = (compute[(41)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 452))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 104))]));
      compute[(42)] = (compute[(42)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 6))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 153))]));
      compute[(43)] = (compute[(43)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 8))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 153))]));
      compute[(44)] = (compute[(44)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 80))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 153))]));
      compute[(45)] = (compute[(45)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 82))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 153))]));
      compute[(46)] = (compute[(46)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 154))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 153))]));
      compute[(47)] = (compute[(47)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 156))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 153))]));
      compute[(48)] = (compute[(48)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 228))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 153))]));
      compute[(49)] = (compute[(49)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 230))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 153))]));
      compute[(50)] = (compute[(50)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 302))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 153))]));
      compute[(51)] = (compute[(51)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 304))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 153))]));
      compute[(52)] = (compute[(52)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 376))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 153))]));
      compute[(53)] = (compute[(53)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 378))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 153))]));
      compute[(54)] = (compute[(54)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 450))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 153))]));
      compute[(55)] = (compute[(55)] + (pad_temp_shared[(((((((int)threadIdx.y) * 518) + (ry_inner * 37)) + (((int)threadIdx.x) * 4)) + 452))] * placeholder_shared[((((((int)threadIdx.z) * 196) + (ry_inner * 7)) + 153))]));
    }
  }
  ((float*)T_relu)[(((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 50176)) + (((int)blockIdx.y) * 1568)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)))] = max((float)((compute[(0)] + ((float*)placeholder2)[((((((int)blockIdx.z) & 1) * 32) + (((int)threadIdx.z) * 4)))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 50176)) + (((int)blockIdx.y) * 1568)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)) + 1))] = max((float)((compute[(1)] + ((float*)placeholder2)[((((((int)blockIdx.z) & 1) * 32) + (((int)threadIdx.z) * 4)))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 50176)) + (((int)blockIdx.y) * 1568)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)) + 112))] = max((float)((compute[(2)] + ((float*)placeholder2)[((((((int)blockIdx.z) & 1) * 32) + (((int)threadIdx.z) * 4)))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 50176)) + (((int)blockIdx.y) * 1568)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)) + 113))] = max((float)((compute[(3)] + ((float*)placeholder2)[((((((int)blockIdx.z) & 1) * 32) + (((int)threadIdx.z) * 4)))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 50176)) + (((int)blockIdx.y) * 1568)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)) + 224))] = max((float)((compute[(4)] + ((float*)placeholder2)[((((((int)blockIdx.z) & 1) * 32) + (((int)threadIdx.z) * 4)))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 50176)) + (((int)blockIdx.y) * 1568)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)) + 225))] = max((float)((compute[(5)] + ((float*)placeholder2)[((((((int)blockIdx.z) & 1) * 32) + (((int)threadIdx.z) * 4)))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 50176)) + (((int)blockIdx.y) * 1568)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)) + 336))] = max((float)((compute[(6)] + ((float*)placeholder2)[((((((int)blockIdx.z) & 1) * 32) + (((int)threadIdx.z) * 4)))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 50176)) + (((int)blockIdx.y) * 1568)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)) + 337))] = max((float)((compute[(7)] + ((float*)placeholder2)[((((((int)blockIdx.z) & 1) * 32) + (((int)threadIdx.z) * 4)))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 50176)) + (((int)blockIdx.y) * 1568)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)) + 448))] = max((float)((compute[(8)] + ((float*)placeholder2)[((((((int)blockIdx.z) & 1) * 32) + (((int)threadIdx.z) * 4)))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 50176)) + (((int)blockIdx.y) * 1568)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)) + 449))] = max((float)((compute[(9)] + ((float*)placeholder2)[((((((int)blockIdx.z) & 1) * 32) + (((int)threadIdx.z) * 4)))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 50176)) + (((int)blockIdx.y) * 1568)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)) + 560))] = max((float)((compute[(10)] + ((float*)placeholder2)[((((((int)blockIdx.z) & 1) * 32) + (((int)threadIdx.z) * 4)))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 50176)) + (((int)blockIdx.y) * 1568)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)) + 561))] = max((float)((compute[(11)] + ((float*)placeholder2)[((((((int)blockIdx.z) & 1) * 32) + (((int)threadIdx.z) * 4)))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 50176)) + (((int)blockIdx.y) * 1568)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)) + 672))] = max((float)((compute[(12)] + ((float*)placeholder2)[((((((int)blockIdx.z) & 1) * 32) + (((int)threadIdx.z) * 4)))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 50176)) + (((int)blockIdx.y) * 1568)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)) + 673))] = max((float)((compute[(13)] + ((float*)placeholder2)[((((((int)blockIdx.z) & 1) * 32) + (((int)threadIdx.z) * 4)))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 50176)) + (((int)blockIdx.y) * 1568)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)) + 12544))] = max((float)((compute[(14)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 32) + (((int)threadIdx.z) * 4)) + 1))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 50176)) + (((int)blockIdx.y) * 1568)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)) + 12545))] = max((float)((compute[(15)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 32) + (((int)threadIdx.z) * 4)) + 1))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 50176)) + (((int)blockIdx.y) * 1568)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)) + 12656))] = max((float)((compute[(16)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 32) + (((int)threadIdx.z) * 4)) + 1))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 50176)) + (((int)blockIdx.y) * 1568)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)) + 12657))] = max((float)((compute[(17)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 32) + (((int)threadIdx.z) * 4)) + 1))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 50176)) + (((int)blockIdx.y) * 1568)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)) + 12768))] = max((float)((compute[(18)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 32) + (((int)threadIdx.z) * 4)) + 1))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 50176)) + (((int)blockIdx.y) * 1568)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)) + 12769))] = max((float)((compute[(19)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 32) + (((int)threadIdx.z) * 4)) + 1))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 50176)) + (((int)blockIdx.y) * 1568)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)) + 12880))] = max((float)((compute[(20)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 32) + (((int)threadIdx.z) * 4)) + 1))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 50176)) + (((int)blockIdx.y) * 1568)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)) + 12881))] = max((float)((compute[(21)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 32) + (((int)threadIdx.z) * 4)) + 1))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 50176)) + (((int)blockIdx.y) * 1568)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)) + 12992))] = max((float)((compute[(22)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 32) + (((int)threadIdx.z) * 4)) + 1))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 50176)) + (((int)blockIdx.y) * 1568)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)) + 12993))] = max((float)((compute[(23)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 32) + (((int)threadIdx.z) * 4)) + 1))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 50176)) + (((int)blockIdx.y) * 1568)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)) + 13104))] = max((float)((compute[(24)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 32) + (((int)threadIdx.z) * 4)) + 1))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 50176)) + (((int)blockIdx.y) * 1568)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)) + 13105))] = max((float)((compute[(25)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 32) + (((int)threadIdx.z) * 4)) + 1))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 50176)) + (((int)blockIdx.y) * 1568)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)) + 13216))] = max((float)((compute[(26)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 32) + (((int)threadIdx.z) * 4)) + 1))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 50176)) + (((int)blockIdx.y) * 1568)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)) + 13217))] = max((float)((compute[(27)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 32) + (((int)threadIdx.z) * 4)) + 1))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 50176)) + (((int)blockIdx.y) * 1568)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)) + 25088))] = max((float)((compute[(28)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 32) + (((int)threadIdx.z) * 4)) + 2))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 50176)) + (((int)blockIdx.y) * 1568)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)) + 25089))] = max((float)((compute[(29)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 32) + (((int)threadIdx.z) * 4)) + 2))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 50176)) + (((int)blockIdx.y) * 1568)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)) + 25200))] = max((float)((compute[(30)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 32) + (((int)threadIdx.z) * 4)) + 2))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 50176)) + (((int)blockIdx.y) * 1568)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)) + 25201))] = max((float)((compute[(31)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 32) + (((int)threadIdx.z) * 4)) + 2))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 50176)) + (((int)blockIdx.y) * 1568)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)) + 25312))] = max((float)((compute[(32)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 32) + (((int)threadIdx.z) * 4)) + 2))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 50176)) + (((int)blockIdx.y) * 1568)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)) + 25313))] = max((float)((compute[(33)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 32) + (((int)threadIdx.z) * 4)) + 2))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 50176)) + (((int)blockIdx.y) * 1568)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)) + 25424))] = max((float)((compute[(34)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 32) + (((int)threadIdx.z) * 4)) + 2))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 50176)) + (((int)blockIdx.y) * 1568)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)) + 25425))] = max((float)((compute[(35)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 32) + (((int)threadIdx.z) * 4)) + 2))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 50176)) + (((int)blockIdx.y) * 1568)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)) + 25536))] = max((float)((compute[(36)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 32) + (((int)threadIdx.z) * 4)) + 2))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 50176)) + (((int)blockIdx.y) * 1568)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)) + 25537))] = max((float)((compute[(37)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 32) + (((int)threadIdx.z) * 4)) + 2))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 50176)) + (((int)blockIdx.y) * 1568)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)) + 25648))] = max((float)((compute[(38)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 32) + (((int)threadIdx.z) * 4)) + 2))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 50176)) + (((int)blockIdx.y) * 1568)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)) + 25649))] = max((float)((compute[(39)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 32) + (((int)threadIdx.z) * 4)) + 2))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 50176)) + (((int)blockIdx.y) * 1568)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)) + 25760))] = max((float)((compute[(40)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 32) + (((int)threadIdx.z) * 4)) + 2))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 50176)) + (((int)blockIdx.y) * 1568)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)) + 25761))] = max((float)((compute[(41)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 32) + (((int)threadIdx.z) * 4)) + 2))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 50176)) + (((int)blockIdx.y) * 1568)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)) + 37632))] = max((float)((compute[(42)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 32) + (((int)threadIdx.z) * 4)) + 3))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 50176)) + (((int)blockIdx.y) * 1568)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)) + 37633))] = max((float)((compute[(43)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 32) + (((int)threadIdx.z) * 4)) + 3))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 50176)) + (((int)blockIdx.y) * 1568)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)) + 37744))] = max((float)((compute[(44)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 32) + (((int)threadIdx.z) * 4)) + 3))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 50176)) + (((int)blockIdx.y) * 1568)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)) + 37745))] = max((float)((compute[(45)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 32) + (((int)threadIdx.z) * 4)) + 3))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 50176)) + (((int)blockIdx.y) * 1568)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)) + 37856))] = max((float)((compute[(46)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 32) + (((int)threadIdx.z) * 4)) + 3))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 50176)) + (((int)blockIdx.y) * 1568)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)) + 37857))] = max((float)((compute[(47)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 32) + (((int)threadIdx.z) * 4)) + 3))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 50176)) + (((int)blockIdx.y) * 1568)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)) + 37968))] = max((float)((compute[(48)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 32) + (((int)threadIdx.z) * 4)) + 3))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 50176)) + (((int)blockIdx.y) * 1568)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)) + 37969))] = max((float)((compute[(49)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 32) + (((int)threadIdx.z) * 4)) + 3))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 50176)) + (((int)blockIdx.y) * 1568)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)) + 38080))] = max((float)((compute[(50)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 32) + (((int)threadIdx.z) * 4)) + 3))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 50176)) + (((int)blockIdx.y) * 1568)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)) + 38081))] = max((float)((compute[(51)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 32) + (((int)threadIdx.z) * 4)) + 3))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 50176)) + (((int)blockIdx.y) * 1568)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)) + 38192))] = max((float)((compute[(52)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 32) + (((int)threadIdx.z) * 4)) + 3))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 50176)) + (((int)blockIdx.y) * 1568)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)) + 38193))] = max((float)((compute[(53)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 32) + (((int)threadIdx.z) * 4)) + 3))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 50176)) + (((int)blockIdx.y) * 1568)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)) + 38304))] = max((float)((compute[(54)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 32) + (((int)threadIdx.z) * 4)) + 3))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((((int)blockIdx.z) * 401408) + (((int)threadIdx.z) * 50176)) + (((int)blockIdx.y) * 1568)) + (((int)threadIdx.y) * 784)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)) + 38305))] = max((float)((compute[(55)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 32) + (((int)threadIdx.z) * 4)) + 3))])), (float)(0.000000e+00f));
}

extern "C" __global__ void fused_nn_global_avg_pool2d_kernel0(void* __restrict__ placeholder, void* __restrict__ tensor) {
  float tensor1[1];
  tensor1[(0)] = 0.000000e+00f;
  for (int rv0 = 0; rv0 < 7; ++rv0) {
    for (int rv1 = 0; rv1 < 7; ++rv1) {
      tensor1[(0)] = (tensor1[(0)] + ((float*)placeholder)[(((((((((int)blockIdx.y) * 200704) + (((int)threadIdx.y) * 25088)) + (((int)blockIdx.x) * 392)) + (((int)threadIdx.x) * 49)) + (rv0 * 7)) + rv1))]);
    }
  }
  ((float*)tensor)[(((((((int)blockIdx.y) * 4096) + (((int)threadIdx.y) * 512)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)))] = (tensor1[(0)] * 2.040816e-02f);
}

extern "C" __global__ void fused_nn_batch_flatten_kernel0(void* __restrict__ tensor, void* __restrict__ placeholder) {
  ((float*)tensor)[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = ((float*)placeholder)[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))];
}

extern "C" __global__ void fused_nn_contrib_conv2d_winograd_without_weight_transform_add_1_kernel1(void* __restrict__ placeholder, float* __restrict__ data_pack, float* __restrict__ bgemm) {
  float bgemm_local[112];
  __shared__ float placeholder_shared[1024];
  __shared__ float data_pack_shared[896];
  #pragma unroll
  for (int co_c_init = 0; co_c_init < 4; ++co_c_init) {
    bgemm_local[(co_c_init)] = 0.000000e+00f;
    bgemm_local[((co_c_init + 28))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 56))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 84))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 4))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 32))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 60))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 88))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 8))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 36))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 64))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 92))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 12))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 40))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 68))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 96))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 16))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 44))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 72))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 100))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 20))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 48))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 76))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 104))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 24))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 52))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 80))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 108))] = 0.000000e+00f;
  }
  for (int ci_outer = 0; ci_outer < 32; ++ci_outer) {
    __syncthreads();
    #pragma unroll
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer = 0; ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer < 8; ++ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer) {
      placeholder_shared[((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 128) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)))] = ((float*)placeholder)[(((((((((int)blockIdx.z) * 65536) + (ci_outer * 2048)) + (ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 256)) + (((int)blockIdx.y) * 128)) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)))];
    }
    #pragma unroll
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer1 < 7; ++ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer1) {
      data_pack_shared[((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer1 * 128) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)))] = data_pack[((((((((int)blockIdx.z) * 401408) + (ci_outer * 12544)) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer1 * 128) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)) / 112) * 1568)) + (((int)blockIdx.x) * 112)) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer1 * 128) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)) % 112)))];
    }
    __syncthreads();
    for (int ci_inner = 0; ci_inner < 8; ++ci_inner) {
      #pragma unroll
      for (int co_c = 0; co_c < 4; ++co_c) {
        bgemm_local[(co_c)] = (bgemm_local[(co_c)] + (placeholder_shared[((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c))] * data_pack_shared[(((ci_inner * 112) + ((int)threadIdx.x)))]));
        bgemm_local[((co_c + 28))] = (bgemm_local[((co_c + 28))] + (placeholder_shared[(((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c) + 32))] * data_pack_shared[(((ci_inner * 112) + ((int)threadIdx.x)))]));
        bgemm_local[((co_c + 56))] = (bgemm_local[((co_c + 56))] + (placeholder_shared[(((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c) + 64))] * data_pack_shared[(((ci_inner * 112) + ((int)threadIdx.x)))]));
        bgemm_local[((co_c + 84))] = (bgemm_local[((co_c + 84))] + (placeholder_shared[(((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c) + 96))] * data_pack_shared[(((ci_inner * 112) + ((int)threadIdx.x)))]));
        bgemm_local[((co_c + 4))] = (bgemm_local[((co_c + 4))] + (placeholder_shared[((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 16))]));
        bgemm_local[((co_c + 32))] = (bgemm_local[((co_c + 32))] + (placeholder_shared[(((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c) + 32))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 16))]));
        bgemm_local[((co_c + 60))] = (bgemm_local[((co_c + 60))] + (placeholder_shared[(((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c) + 64))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 16))]));
        bgemm_local[((co_c + 88))] = (bgemm_local[((co_c + 88))] + (placeholder_shared[(((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c) + 96))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 16))]));
        bgemm_local[((co_c + 8))] = (bgemm_local[((co_c + 8))] + (placeholder_shared[((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 32))]));
        bgemm_local[((co_c + 36))] = (bgemm_local[((co_c + 36))] + (placeholder_shared[(((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c) + 32))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 32))]));
        bgemm_local[((co_c + 64))] = (bgemm_local[((co_c + 64))] + (placeholder_shared[(((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c) + 64))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 32))]));
        bgemm_local[((co_c + 92))] = (bgemm_local[((co_c + 92))] + (placeholder_shared[(((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c) + 96))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 32))]));
        bgemm_local[((co_c + 12))] = (bgemm_local[((co_c + 12))] + (placeholder_shared[((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 48))]));
        bgemm_local[((co_c + 40))] = (bgemm_local[((co_c + 40))] + (placeholder_shared[(((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c) + 32))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 48))]));
        bgemm_local[((co_c + 68))] = (bgemm_local[((co_c + 68))] + (placeholder_shared[(((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c) + 64))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 48))]));
        bgemm_local[((co_c + 96))] = (bgemm_local[((co_c + 96))] + (placeholder_shared[(((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c) + 96))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 48))]));
        bgemm_local[((co_c + 16))] = (bgemm_local[((co_c + 16))] + (placeholder_shared[((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 64))]));
        bgemm_local[((co_c + 44))] = (bgemm_local[((co_c + 44))] + (placeholder_shared[(((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c) + 32))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 64))]));
        bgemm_local[((co_c + 72))] = (bgemm_local[((co_c + 72))] + (placeholder_shared[(((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c) + 64))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 64))]));
        bgemm_local[((co_c + 100))] = (bgemm_local[((co_c + 100))] + (placeholder_shared[(((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c) + 96))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 64))]));
        bgemm_local[((co_c + 20))] = (bgemm_local[((co_c + 20))] + (placeholder_shared[((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 80))]));
        bgemm_local[((co_c + 48))] = (bgemm_local[((co_c + 48))] + (placeholder_shared[(((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c) + 32))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 80))]));
        bgemm_local[((co_c + 76))] = (bgemm_local[((co_c + 76))] + (placeholder_shared[(((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c) + 64))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 80))]));
        bgemm_local[((co_c + 104))] = (bgemm_local[((co_c + 104))] + (placeholder_shared[(((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c) + 96))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 80))]));
        bgemm_local[((co_c + 24))] = (bgemm_local[((co_c + 24))] + (placeholder_shared[((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 96))]));
        bgemm_local[((co_c + 52))] = (bgemm_local[((co_c + 52))] + (placeholder_shared[(((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c) + 32))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 96))]));
        bgemm_local[((co_c + 80))] = (bgemm_local[((co_c + 80))] + (placeholder_shared[(((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c) + 64))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 96))]));
        bgemm_local[((co_c + 108))] = (bgemm_local[((co_c + 108))] + (placeholder_shared[(((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c) + 96))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 96))]));
      }
    }
  }
  #pragma unroll
  for (int co_inner_inner_inner = 0; co_inner_inner_inner < 4; ++co_inner_inner_inner) {
    bgemm[(((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)))] = bgemm_local[(co_inner_inner_inner)];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 50176))] = bgemm_local[((co_inner_inner_inner + 28))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 100352))] = bgemm_local[((co_inner_inner_inner + 56))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 150528))] = bgemm_local[((co_inner_inner_inner + 84))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 16))] = bgemm_local[((co_inner_inner_inner + 4))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 50192))] = bgemm_local[((co_inner_inner_inner + 32))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 100368))] = bgemm_local[((co_inner_inner_inner + 60))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 150544))] = bgemm_local[((co_inner_inner_inner + 88))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 32))] = bgemm_local[((co_inner_inner_inner + 8))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 50208))] = bgemm_local[((co_inner_inner_inner + 36))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 100384))] = bgemm_local[((co_inner_inner_inner + 64))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 150560))] = bgemm_local[((co_inner_inner_inner + 92))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 48))] = bgemm_local[((co_inner_inner_inner + 12))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 50224))] = bgemm_local[((co_inner_inner_inner + 40))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 100400))] = bgemm_local[((co_inner_inner_inner + 68))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 150576))] = bgemm_local[((co_inner_inner_inner + 96))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 64))] = bgemm_local[((co_inner_inner_inner + 16))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 50240))] = bgemm_local[((co_inner_inner_inner + 44))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 100416))] = bgemm_local[((co_inner_inner_inner + 72))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 150592))] = bgemm_local[((co_inner_inner_inner + 100))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 80))] = bgemm_local[((co_inner_inner_inner + 20))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 50256))] = bgemm_local[((co_inner_inner_inner + 48))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 100432))] = bgemm_local[((co_inner_inner_inner + 76))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 150608))] = bgemm_local[((co_inner_inner_inner + 104))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 96))] = bgemm_local[((co_inner_inner_inner + 24))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 50272))] = bgemm_local[((co_inner_inner_inner + 52))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 100448))] = bgemm_local[((co_inner_inner_inner + 80))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 150624))] = bgemm_local[((co_inner_inner_inner + 108))];
  }
}

extern "C" __global__ void fused_nn_conv2d_add_add_nn_relu_kernel0(void* __restrict__ placeholder, void* __restrict__ placeholder1, void* __restrict__ T_relu, void* __restrict__ placeholder2, void* __restrict__ placeholder3) {
  float compute[56];
  __shared__ float pad_temp_shared[2704];
  __shared__ float placeholder_shared[4096];
  compute[(0)] = 0.000000e+00f;
  compute[(7)] = 0.000000e+00f;
  compute[(14)] = 0.000000e+00f;
  compute[(21)] = 0.000000e+00f;
  compute[(28)] = 0.000000e+00f;
  compute[(35)] = 0.000000e+00f;
  compute[(42)] = 0.000000e+00f;
  compute[(49)] = 0.000000e+00f;
  compute[(1)] = 0.000000e+00f;
  compute[(8)] = 0.000000e+00f;
  compute[(15)] = 0.000000e+00f;
  compute[(22)] = 0.000000e+00f;
  compute[(29)] = 0.000000e+00f;
  compute[(36)] = 0.000000e+00f;
  compute[(43)] = 0.000000e+00f;
  compute[(50)] = 0.000000e+00f;
  compute[(2)] = 0.000000e+00f;
  compute[(9)] = 0.000000e+00f;
  compute[(16)] = 0.000000e+00f;
  compute[(23)] = 0.000000e+00f;
  compute[(30)] = 0.000000e+00f;
  compute[(37)] = 0.000000e+00f;
  compute[(44)] = 0.000000e+00f;
  compute[(51)] = 0.000000e+00f;
  compute[(3)] = 0.000000e+00f;
  compute[(10)] = 0.000000e+00f;
  compute[(17)] = 0.000000e+00f;
  compute[(24)] = 0.000000e+00f;
  compute[(31)] = 0.000000e+00f;
  compute[(38)] = 0.000000e+00f;
  compute[(45)] = 0.000000e+00f;
  compute[(52)] = 0.000000e+00f;
  compute[(4)] = 0.000000e+00f;
  compute[(11)] = 0.000000e+00f;
  compute[(18)] = 0.000000e+00f;
  compute[(25)] = 0.000000e+00f;
  compute[(32)] = 0.000000e+00f;
  compute[(39)] = 0.000000e+00f;
  compute[(46)] = 0.000000e+00f;
  compute[(53)] = 0.000000e+00f;
  compute[(5)] = 0.000000e+00f;
  compute[(12)] = 0.000000e+00f;
  compute[(19)] = 0.000000e+00f;
  compute[(26)] = 0.000000e+00f;
  compute[(33)] = 0.000000e+00f;
  compute[(40)] = 0.000000e+00f;
  compute[(47)] = 0.000000e+00f;
  compute[(54)] = 0.000000e+00f;
  compute[(6)] = 0.000000e+00f;
  compute[(13)] = 0.000000e+00f;
  compute[(20)] = 0.000000e+00f;
  compute[(27)] = 0.000000e+00f;
  compute[(34)] = 0.000000e+00f;
  compute[(41)] = 0.000000e+00f;
  compute[(48)] = 0.000000e+00f;
  compute[(55)] = 0.000000e+00f;
  for (int rc_outer = 0; rc_outer < 16; ++rc_outer) {
    __syncthreads();
    if ((((((int)threadIdx.z) * 85) / 13) + ((int)threadIdx.x)) < 208) {
      if (((((int)threadIdx.z) * 85) + (((int)threadIdx.x) * 13)) < 2704) {
        pad_temp_shared[(((((int)threadIdx.z) * 85) + (((int)threadIdx.x) * 13)))] = ((float*)placeholder)[(((((((((int)blockIdx.z) >> 1) * 50176) + (rc_outer * 3136)) + (((((((int)threadIdx.z) * 85) / 13) + ((int)threadIdx.x)) / 13) * 196)) + (((((((int)threadIdx.z) * 85) / 13) + ((int)threadIdx.x)) % 13) * 14)) + ((((int)threadIdx.z) * 85) % 13)))];
      }
    }
    if (((((((int)threadIdx.z) * 85) + 1) / 13) + ((int)threadIdx.x)) < 208) {
      if (((((int)threadIdx.z) * 85) + (((int)threadIdx.x) * 13)) < 2703) {
        pad_temp_shared[((((((int)threadIdx.z) * 85) + (((int)threadIdx.x) * 13)) + 1))] = ((float*)placeholder)[(((((((((int)blockIdx.z) >> 1) * 50176) + (rc_outer * 3136)) + ((((((((int)threadIdx.z) * 85) + 1) / 13) + ((int)threadIdx.x)) / 13) * 196)) + ((((((((int)threadIdx.z) * 85) + 1) / 13) + ((int)threadIdx.x)) % 13) * 14)) + (((((int)threadIdx.z) * 85) + 1) % 13)))];
      }
    }
    if (((((((int)threadIdx.z) * 85) + 2) / 13) + ((int)threadIdx.x)) < 208) {
      if (((((int)threadIdx.z) * 85) + (((int)threadIdx.x) * 13)) < 2702) {
        pad_temp_shared[((((((int)threadIdx.z) * 85) + (((int)threadIdx.x) * 13)) + 2))] = ((float*)placeholder)[(((((((((int)blockIdx.z) >> 1) * 50176) + (rc_outer * 3136)) + ((((((((int)threadIdx.z) * 85) + 2) / 13) + ((int)threadIdx.x)) / 13) * 196)) + ((((((((int)threadIdx.z) * 85) + 2) / 13) + ((int)threadIdx.x)) % 13) * 14)) + (((((int)threadIdx.z) * 85) + 2) % 13)))];
      }
    }
    if (((((((int)threadIdx.z) * 85) + 3) / 13) + ((int)threadIdx.x)) < 208) {
      if (((((int)threadIdx.z) * 85) + (((int)threadIdx.x) * 13)) < 2701) {
        pad_temp_shared[((((((int)threadIdx.z) * 85) + (((int)threadIdx.x) * 13)) + 3))] = ((float*)placeholder)[(((((((((int)blockIdx.z) >> 1) * 50176) + (rc_outer * 3136)) + ((((((((int)threadIdx.z) * 85) + 3) / 13) + ((int)threadIdx.x)) / 13) * 196)) + ((((((((int)threadIdx.z) * 85) + 3) / 13) + ((int)threadIdx.x)) % 13) * 14)) + (((((int)threadIdx.z) * 85) + 3) % 13)))];
      }
    }
    if (((((((int)threadIdx.z) * 85) + 4) / 13) + ((int)threadIdx.x)) < 208) {
      if (((((int)threadIdx.z) * 85) + (((int)threadIdx.x) * 13)) < 2700) {
        pad_temp_shared[((((((int)threadIdx.z) * 85) + (((int)threadIdx.x) * 13)) + 4))] = ((float*)placeholder)[(((((((((int)blockIdx.z) >> 1) * 50176) + (rc_outer * 3136)) + ((((((((int)threadIdx.z) * 85) + 4) / 13) + ((int)threadIdx.x)) / 13) * 196)) + ((((((((int)threadIdx.z) * 85) + 4) / 13) + ((int)threadIdx.x)) % 13) * 14)) + (((((int)threadIdx.z) * 85) + 4) % 13)))];
      }
    }
    if (((((((int)threadIdx.z) * 85) + 5) / 13) + ((int)threadIdx.x)) < 208) {
      if (((((int)threadIdx.z) * 85) + (((int)threadIdx.x) * 13)) < 2699) {
        pad_temp_shared[((((((int)threadIdx.z) * 85) + (((int)threadIdx.x) * 13)) + 5))] = ((float*)placeholder)[(((((((((int)blockIdx.z) >> 1) * 50176) + (rc_outer * 3136)) + ((((((((int)threadIdx.z) * 85) + 5) / 13) + ((int)threadIdx.x)) / 13) * 196)) + ((((((((int)threadIdx.z) * 85) + 5) / 13) + ((int)threadIdx.x)) % 13) * 14)) + (((((int)threadIdx.z) * 85) + 5) % 13)))];
      }
    }
    if (((((((int)threadIdx.z) * 85) + 6) / 13) + ((int)threadIdx.x)) < 208) {
      if (((((int)threadIdx.z) * 85) + (((int)threadIdx.x) * 13)) < 2698) {
        pad_temp_shared[((((((int)threadIdx.z) * 85) + (((int)threadIdx.x) * 13)) + 6))] = ((float*)placeholder)[(((((((((int)blockIdx.z) >> 1) * 50176) + (rc_outer * 3136)) + ((((((((int)threadIdx.z) * 85) + 6) / 13) + ((int)threadIdx.x)) / 13) * 196)) + ((((((((int)threadIdx.z) * 85) + 6) / 13) + ((int)threadIdx.x)) % 13) * 14)) + (((((int)threadIdx.z) * 85) + 6) % 13)))];
      }
    }
    if (((((((int)threadIdx.z) * 85) + 7) / 13) + ((int)threadIdx.x)) < 208) {
      if (((((int)threadIdx.z) * 85) + (((int)threadIdx.x) * 13)) < 2697) {
        if (((int)threadIdx.x) < 6) {
          pad_temp_shared[((((((int)threadIdx.z) * 85) + (((int)threadIdx.x) * 13)) + 7))] = ((float*)placeholder)[(((((((((int)blockIdx.z) >> 1) * 50176) + (rc_outer * 3136)) + ((((((((int)threadIdx.z) * 85) + 7) / 13) + ((int)threadIdx.x)) / 13) * 196)) + ((((((((int)threadIdx.z) * 85) + 7) / 13) + ((int)threadIdx.x)) % 13) * 14)) + (((((int)threadIdx.z) * 85) + 7) % 13)))];
        }
      }
    }
    if (((((((int)threadIdx.z) * 85) + 8) / 13) + ((int)threadIdx.x)) < 208) {
      if (((((int)threadIdx.z) * 85) + (((int)threadIdx.x) * 13)) < 2696) {
        if (((int)threadIdx.x) < 6) {
          pad_temp_shared[((((((int)threadIdx.z) * 85) + (((int)threadIdx.x) * 13)) + 8))] = ((float*)placeholder)[(((((((((int)blockIdx.z) >> 1) * 50176) + (rc_outer * 3136)) + ((((((((int)threadIdx.z) * 85) + 8) / 13) + ((int)threadIdx.x)) / 13) * 196)) + ((((((((int)threadIdx.z) * 85) + 8) / 13) + ((int)threadIdx.x)) % 13) * 14)) + (((((int)threadIdx.z) * 85) + 8) % 13)))];
        }
      }
    }
    if (((((((int)threadIdx.z) * 85) + 9) / 13) + ((int)threadIdx.x)) < 208) {
      if (((((int)threadIdx.z) * 85) + (((int)threadIdx.x) * 13)) < 2695) {
        if (((int)threadIdx.x) < 6) {
          pad_temp_shared[((((((int)threadIdx.z) * 85) + (((int)threadIdx.x) * 13)) + 9))] = ((float*)placeholder)[(((((((((int)blockIdx.z) >> 1) * 50176) + (rc_outer * 3136)) + ((((((((int)threadIdx.z) * 85) + 9) / 13) + ((int)threadIdx.x)) / 13) * 196)) + ((((((((int)threadIdx.z) * 85) + 9) / 13) + ((int)threadIdx.x)) % 13) * 14)) + (((((int)threadIdx.z) * 85) + 9) % 13)))];
        }
      }
    }
    if (((((((int)threadIdx.z) * 85) + 10) / 13) + ((int)threadIdx.x)) < 208) {
      if (((((int)threadIdx.z) * 85) + (((int)threadIdx.x) * 13)) < 2694) {
        if (((int)threadIdx.x) < 6) {
          pad_temp_shared[((((((int)threadIdx.z) * 85) + (((int)threadIdx.x) * 13)) + 10))] = ((float*)placeholder)[(((((((((int)blockIdx.z) >> 1) * 50176) + (rc_outer * 3136)) + ((((((((int)threadIdx.z) * 85) + 10) / 13) + ((int)threadIdx.x)) / 13) * 196)) + ((((((((int)threadIdx.z) * 85) + 10) / 13) + ((int)threadIdx.x)) % 13) * 14)) + (((((int)threadIdx.z) * 85) + 10) % 13)))];
        }
      }
    }
    if (((((((int)threadIdx.z) * 85) + 11) / 13) + ((int)threadIdx.x)) < 208) {
      if (((((int)threadIdx.z) * 85) + (((int)threadIdx.x) * 13)) < 2693) {
        if (((int)threadIdx.x) < 6) {
          pad_temp_shared[((((((int)threadIdx.z) * 85) + (((int)threadIdx.x) * 13)) + 11))] = ((float*)placeholder)[(((((((((int)blockIdx.z) >> 1) * 50176) + (rc_outer * 3136)) + ((((((((int)threadIdx.z) * 85) + 11) / 13) + ((int)threadIdx.x)) / 13) * 196)) + ((((((((int)threadIdx.z) * 85) + 11) / 13) + ((int)threadIdx.x)) % 13) * 14)) + (((((int)threadIdx.z) * 85) + 11) % 13)))];
        }
      }
    }
    if (((((((int)threadIdx.z) * 85) + 12) / 13) + ((int)threadIdx.x)) < 208) {
      if (((((int)threadIdx.z) * 85) + (((int)threadIdx.x) * 13)) < 2692) {
        if (((int)threadIdx.x) < 6) {
          pad_temp_shared[((((((int)threadIdx.z) * 85) + (((int)threadIdx.x) * 13)) + 12))] = ((float*)placeholder)[(((((((((int)blockIdx.z) >> 1) * 50176) + (rc_outer * 3136)) + ((((((((int)threadIdx.z) * 85) + 12) / 13) + ((int)threadIdx.x)) / 13) * 196)) + ((((((((int)threadIdx.z) * 85) + 12) / 13) + ((int)threadIdx.x)) % 13) * 14)) + (((((int)threadIdx.z) * 85) + 12) % 13)))];
        }
      }
    }
    placeholder_shared[(((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)))] = ((float*)placeholder1)[(((((((((int)blockIdx.z) & 1) * 65536) + (((int)threadIdx.z) * 2048)) + (((((int)threadIdx.x) * 19) >> 4) * 256)) + (rc_outer * 16)) + ((((int)threadIdx.x) * 19) & 15)))];
    placeholder_shared[((((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 1))] = ((float*)placeholder1)[(((((((((int)blockIdx.z) & 1) * 65536) + (((int)threadIdx.z) * 2048)) + ((((((int)threadIdx.x) * 19) + 1) >> 4) * 256)) + (rc_outer * 16)) + (((((int)threadIdx.x) * 19) + 1) & 15)))];
    placeholder_shared[((((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 2))] = ((float*)placeholder1)[(((((((((int)blockIdx.z) & 1) * 65536) + (((int)threadIdx.z) * 2048)) + ((((((int)threadIdx.x) * 19) + 2) >> 4) * 256)) + (rc_outer * 16)) + (((((int)threadIdx.x) * 19) + 2) & 15)))];
    placeholder_shared[((((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 3))] = ((float*)placeholder1)[(((((((((int)blockIdx.z) & 1) * 65536) + (((int)threadIdx.z) * 2048)) + ((((((int)threadIdx.x) * 19) + 3) >> 4) * 256)) + (rc_outer * 16)) + (((((int)threadIdx.x) * 19) + 3) & 15)))];
    placeholder_shared[((((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 4))] = ((float*)placeholder1)[(((((((((int)blockIdx.z) & 1) * 65536) + (((int)threadIdx.z) * 2048)) + ((((((int)threadIdx.x) * 19) + 4) >> 4) * 256)) + (rc_outer * 16)) + (((((int)threadIdx.x) * 19) + 4) & 15)))];
    placeholder_shared[((((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 5))] = ((float*)placeholder1)[(((((((((int)blockIdx.z) & 1) * 65536) + (((int)threadIdx.z) * 2048)) + ((((((int)threadIdx.x) * 19) + 5) >> 4) * 256)) + (rc_outer * 16)) + (((((int)threadIdx.x) * 19) + 5) & 15)))];
    placeholder_shared[((((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 6))] = ((float*)placeholder1)[(((((((((int)blockIdx.z) & 1) * 65536) + (((int)threadIdx.z) * 2048)) + ((((((int)threadIdx.x) * 19) + 6) >> 4) * 256)) + (rc_outer * 16)) + (((((int)threadIdx.x) * 19) + 6) & 15)))];
    placeholder_shared[((((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 7))] = ((float*)placeholder1)[(((((((((int)blockIdx.z) & 1) * 65536) + (((int)threadIdx.z) * 2048)) + ((((((int)threadIdx.x) * 19) + 7) >> 4) * 256)) + (rc_outer * 16)) + (((((int)threadIdx.x) * 19) + 7) & 15)))];
    placeholder_shared[((((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 8))] = ((float*)placeholder1)[(((((((((int)blockIdx.z) & 1) * 65536) + (((int)threadIdx.z) * 2048)) + ((((((int)threadIdx.x) * 19) + 8) >> 4) * 256)) + (rc_outer * 16)) + (((((int)threadIdx.x) * 19) + 8) & 15)))];
    placeholder_shared[((((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 9))] = ((float*)placeholder1)[(((((((((int)blockIdx.z) & 1) * 65536) + (((int)threadIdx.z) * 2048)) + ((((((int)threadIdx.x) * 19) + 9) >> 4) * 256)) + (rc_outer * 16)) + (((((int)threadIdx.x) * 19) + 9) & 15)))];
    placeholder_shared[((((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 10))] = ((float*)placeholder1)[(((((((((int)blockIdx.z) & 1) * 65536) + (((int)threadIdx.z) * 2048)) + ((((((int)threadIdx.x) * 19) + 10) >> 4) * 256)) + (rc_outer * 16)) + (((((int)threadIdx.x) * 19) + 10) & 15)))];
    placeholder_shared[((((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 11))] = ((float*)placeholder1)[(((((((((int)blockIdx.z) & 1) * 65536) + (((int)threadIdx.z) * 2048)) + ((((((int)threadIdx.x) * 19) + 11) >> 4) * 256)) + (rc_outer * 16)) + (((((int)threadIdx.x) * 19) + 11) & 15)))];
    placeholder_shared[((((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 12))] = ((float*)placeholder1)[(((((((((int)blockIdx.z) & 1) * 65536) + (((int)threadIdx.z) * 2048)) + ((((((int)threadIdx.x) * 19) + 12) >> 4) * 256)) + (rc_outer * 16)) + (((((int)threadIdx.x) * 19) + 12) & 15)))];
    placeholder_shared[((((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 13))] = ((float*)placeholder1)[(((((((((int)blockIdx.z) & 1) * 65536) + (((int)threadIdx.z) * 2048)) + ((((((int)threadIdx.x) * 19) + 13) >> 4) * 256)) + (rc_outer * 16)) + (((((int)threadIdx.x) * 19) + 13) & 15)))];
    if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 19) + 14) >> 4)) < 256) {
      if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) < 4082) {
        if (((int)threadIdx.x) < 6) {
          placeholder_shared[((((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 14))] = ((float*)placeholder1)[(((((((((int)blockIdx.z) & 1) * 65536) + (((int)threadIdx.z) * 2048)) + ((((((int)threadIdx.x) * 19) + 14) >> 4) * 256)) + (rc_outer * 16)) + (((((int)threadIdx.x) * 19) + 14) & 15)))];
        }
      }
    }
    if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 19) + 15) >> 4)) < 256) {
      if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) < 4081) {
        if (((int)threadIdx.x) < 6) {
          placeholder_shared[((((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 15))] = ((float*)placeholder1)[(((((((((int)blockIdx.z) & 1) * 65536) + (((int)threadIdx.z) * 2048)) + ((((((int)threadIdx.x) * 19) + 15) >> 4) * 256)) + (rc_outer * 16)) + (((((int)threadIdx.x) * 19) + 15) & 15)))];
        }
      }
    }
    if (((((int)threadIdx.z) * 8) + ((((int)threadIdx.x) * 19) >> 4)) < 255) {
      if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) < 4080) {
        if (((int)threadIdx.x) < 6) {
          placeholder_shared[((((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 16))] = ((float*)placeholder1)[((((((((((int)blockIdx.z) & 1) * 65536) + (((int)threadIdx.z) * 2048)) + (((((int)threadIdx.x) * 19) >> 4) * 256)) + (rc_outer * 16)) + ((((int)threadIdx.x) * 19) & 15)) + 256))];
        }
      }
    }
    if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 19) + 17) >> 4)) < 256) {
      if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) < 4079) {
        if (((int)threadIdx.x) < 6) {
          placeholder_shared[((((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 17))] = ((float*)placeholder1)[(((((((((int)blockIdx.z) & 1) * 65536) + (((int)threadIdx.z) * 2048)) + ((((((int)threadIdx.x) * 19) + 17) >> 4) * 256)) + (rc_outer * 16)) + (((((int)threadIdx.x) * 19) + 1) & 15)))];
        }
      }
    }
    if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 19) + 18) >> 4)) < 256) {
      if (((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) < 4078) {
        if (((int)threadIdx.x) < 6) {
          placeholder_shared[((((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 19)) + 18))] = ((float*)placeholder1)[(((((((((int)blockIdx.z) & 1) * 65536) + (((int)threadIdx.z) * 2048)) + ((((((int)threadIdx.x) * 19) + 18) >> 4) * 256)) + (rc_outer * 16)) + (((((int)threadIdx.x) * 19) + 2) & 15)))];
        }
      }
    }
    __syncthreads();
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[((((int)threadIdx.z) * 16))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 512))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1024))]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1536))]));
    compute[(28)] = (compute[(28)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2048))]));
    compute[(35)] = (compute[(35)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2560))]));
    compute[(42)] = (compute[(42)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3072))]));
    compute[(49)] = (compute[(49)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3584))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 26))] * placeholder_shared[((((int)threadIdx.z) * 16))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 26))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 512))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 26))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1024))]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 26))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1536))]));
    compute[(29)] = (compute[(29)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 26))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2048))]));
    compute[(36)] = (compute[(36)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 26))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2560))]));
    compute[(43)] = (compute[(43)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 26))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3072))]));
    compute[(50)] = (compute[(50)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 26))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3584))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 52))] * placeholder_shared[((((int)threadIdx.z) * 16))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 52))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 512))]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 52))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1024))]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 52))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1536))]));
    compute[(30)] = (compute[(30)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 52))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2048))]));
    compute[(37)] = (compute[(37)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 52))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2560))]));
    compute[(44)] = (compute[(44)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 52))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3072))]));
    compute[(51)] = (compute[(51)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 52))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3584))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 78))] * placeholder_shared[((((int)threadIdx.z) * 16))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 78))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 512))]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 78))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1024))]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 78))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1536))]));
    compute[(31)] = (compute[(31)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 78))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2048))]));
    compute[(38)] = (compute[(38)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 78))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2560))]));
    compute[(45)] = (compute[(45)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 78))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3072))]));
    compute[(52)] = (compute[(52)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 78))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3584))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 104))] * placeholder_shared[((((int)threadIdx.z) * 16))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 104))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 512))]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 104))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1024))]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 104))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1536))]));
    compute[(32)] = (compute[(32)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 104))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2048))]));
    compute[(39)] = (compute[(39)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 104))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2560))]));
    compute[(46)] = (compute[(46)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 104))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3072))]));
    compute[(53)] = (compute[(53)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 104))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3584))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 130))] * placeholder_shared[((((int)threadIdx.z) * 16))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 130))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 512))]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 130))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1024))]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 130))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1536))]));
    compute[(33)] = (compute[(33)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 130))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2048))]));
    compute[(40)] = (compute[(40)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 130))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2560))]));
    compute[(47)] = (compute[(47)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 130))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3072))]));
    compute[(54)] = (compute[(54)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 130))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3584))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 156))] * placeholder_shared[((((int)threadIdx.z) * 16))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 156))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 512))]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 156))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1024))]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 156))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1536))]));
    compute[(34)] = (compute[(34)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 156))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2048))]));
    compute[(41)] = (compute[(41)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 156))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2560))]));
    compute[(48)] = (compute[(48)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 156))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3072))]));
    compute[(55)] = (compute[(55)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 156))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3584))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 169))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 169))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 513))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 169))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1025))]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 169))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1537))]));
    compute[(28)] = (compute[(28)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 169))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2049))]));
    compute[(35)] = (compute[(35)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 169))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2561))]));
    compute[(42)] = (compute[(42)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 169))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3073))]));
    compute[(49)] = (compute[(49)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 169))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3585))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 195))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 195))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 513))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 195))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1025))]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 195))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1537))]));
    compute[(29)] = (compute[(29)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 195))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2049))]));
    compute[(36)] = (compute[(36)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 195))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2561))]));
    compute[(43)] = (compute[(43)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 195))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3073))]));
    compute[(50)] = (compute[(50)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 195))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3585))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 221))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 221))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 513))]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 221))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1025))]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 221))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1537))]));
    compute[(30)] = (compute[(30)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 221))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2049))]));
    compute[(37)] = (compute[(37)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 221))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2561))]));
    compute[(44)] = (compute[(44)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 221))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3073))]));
    compute[(51)] = (compute[(51)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 221))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3585))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 247))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 247))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 513))]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 247))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1025))]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 247))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1537))]));
    compute[(31)] = (compute[(31)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 247))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2049))]));
    compute[(38)] = (compute[(38)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 247))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2561))]));
    compute[(45)] = (compute[(45)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 247))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3073))]));
    compute[(52)] = (compute[(52)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 247))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3585))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 273))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 273))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 513))]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 273))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1025))]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 273))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1537))]));
    compute[(32)] = (compute[(32)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 273))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2049))]));
    compute[(39)] = (compute[(39)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 273))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2561))]));
    compute[(46)] = (compute[(46)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 273))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3073))]));
    compute[(53)] = (compute[(53)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 273))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3585))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 299))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 299))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 513))]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 299))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1025))]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 299))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1537))]));
    compute[(33)] = (compute[(33)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 299))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2049))]));
    compute[(40)] = (compute[(40)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 299))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2561))]));
    compute[(47)] = (compute[(47)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 299))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3073))]));
    compute[(54)] = (compute[(54)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 299))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3585))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 325))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 325))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 513))]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 325))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1025))]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 325))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1537))]));
    compute[(34)] = (compute[(34)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 325))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2049))]));
    compute[(41)] = (compute[(41)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 325))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2561))]));
    compute[(48)] = (compute[(48)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 325))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3073))]));
    compute[(55)] = (compute[(55)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 325))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3585))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 338))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 338))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 514))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 338))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1026))]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 338))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1538))]));
    compute[(28)] = (compute[(28)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 338))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2050))]));
    compute[(35)] = (compute[(35)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 338))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2562))]));
    compute[(42)] = (compute[(42)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 338))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3074))]));
    compute[(49)] = (compute[(49)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 338))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3586))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 364))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 364))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 514))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 364))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1026))]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 364))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1538))]));
    compute[(29)] = (compute[(29)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 364))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2050))]));
    compute[(36)] = (compute[(36)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 364))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2562))]));
    compute[(43)] = (compute[(43)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 364))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3074))]));
    compute[(50)] = (compute[(50)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 364))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3586))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 390))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 390))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 514))]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 390))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1026))]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 390))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1538))]));
    compute[(30)] = (compute[(30)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 390))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2050))]));
    compute[(37)] = (compute[(37)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 390))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2562))]));
    compute[(44)] = (compute[(44)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 390))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3074))]));
    compute[(51)] = (compute[(51)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 390))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3586))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 416))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 416))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 514))]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 416))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1026))]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 416))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1538))]));
    compute[(31)] = (compute[(31)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 416))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2050))]));
    compute[(38)] = (compute[(38)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 416))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2562))]));
    compute[(45)] = (compute[(45)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 416))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3074))]));
    compute[(52)] = (compute[(52)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 416))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3586))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 442))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 442))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 514))]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 442))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1026))]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 442))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1538))]));
    compute[(32)] = (compute[(32)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 442))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2050))]));
    compute[(39)] = (compute[(39)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 442))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2562))]));
    compute[(46)] = (compute[(46)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 442))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3074))]));
    compute[(53)] = (compute[(53)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 442))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3586))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 468))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 468))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 514))]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 468))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1026))]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 468))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1538))]));
    compute[(33)] = (compute[(33)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 468))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2050))]));
    compute[(40)] = (compute[(40)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 468))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2562))]));
    compute[(47)] = (compute[(47)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 468))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3074))]));
    compute[(54)] = (compute[(54)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 468))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3586))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 494))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 494))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 514))]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 494))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1026))]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 494))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1538))]));
    compute[(34)] = (compute[(34)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 494))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2050))]));
    compute[(41)] = (compute[(41)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 494))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2562))]));
    compute[(48)] = (compute[(48)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 494))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3074))]));
    compute[(55)] = (compute[(55)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 494))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3586))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 507))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 507))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 515))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 507))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1027))]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 507))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1539))]));
    compute[(28)] = (compute[(28)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 507))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2051))]));
    compute[(35)] = (compute[(35)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 507))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2563))]));
    compute[(42)] = (compute[(42)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 507))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3075))]));
    compute[(49)] = (compute[(49)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 507))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3587))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 533))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 533))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 515))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 533))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1027))]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 533))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1539))]));
    compute[(29)] = (compute[(29)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 533))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2051))]));
    compute[(36)] = (compute[(36)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 533))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2563))]));
    compute[(43)] = (compute[(43)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 533))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3075))]));
    compute[(50)] = (compute[(50)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 533))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3587))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 559))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 559))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 515))]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 559))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1027))]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 559))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1539))]));
    compute[(30)] = (compute[(30)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 559))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2051))]));
    compute[(37)] = (compute[(37)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 559))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2563))]));
    compute[(44)] = (compute[(44)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 559))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3075))]));
    compute[(51)] = (compute[(51)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 559))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3587))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 585))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 585))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 515))]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 585))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1027))]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 585))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1539))]));
    compute[(31)] = (compute[(31)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 585))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2051))]));
    compute[(38)] = (compute[(38)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 585))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2563))]));
    compute[(45)] = (compute[(45)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 585))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3075))]));
    compute[(52)] = (compute[(52)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 585))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3587))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 611))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 611))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 515))]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 611))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1027))]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 611))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1539))]));
    compute[(32)] = (compute[(32)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 611))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2051))]));
    compute[(39)] = (compute[(39)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 611))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2563))]));
    compute[(46)] = (compute[(46)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 611))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3075))]));
    compute[(53)] = (compute[(53)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 611))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3587))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 637))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 637))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 515))]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 637))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1027))]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 637))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1539))]));
    compute[(33)] = (compute[(33)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 637))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2051))]));
    compute[(40)] = (compute[(40)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 637))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2563))]));
    compute[(47)] = (compute[(47)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 637))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3075))]));
    compute[(54)] = (compute[(54)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 637))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3587))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 663))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 663))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 515))]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 663))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1027))]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 663))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1539))]));
    compute[(34)] = (compute[(34)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 663))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2051))]));
    compute[(41)] = (compute[(41)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 663))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2563))]));
    compute[(48)] = (compute[(48)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 663))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3075))]));
    compute[(55)] = (compute[(55)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 663))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3587))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 676))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 4))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 676))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 516))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 676))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1028))]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 676))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1540))]));
    compute[(28)] = (compute[(28)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 676))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2052))]));
    compute[(35)] = (compute[(35)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 676))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2564))]));
    compute[(42)] = (compute[(42)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 676))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3076))]));
    compute[(49)] = (compute[(49)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 676))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3588))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 702))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 4))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 702))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 516))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 702))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1028))]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 702))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1540))]));
    compute[(29)] = (compute[(29)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 702))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2052))]));
    compute[(36)] = (compute[(36)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 702))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2564))]));
    compute[(43)] = (compute[(43)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 702))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3076))]));
    compute[(50)] = (compute[(50)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 702))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3588))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 4))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 516))]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1028))]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1540))]));
    compute[(30)] = (compute[(30)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2052))]));
    compute[(37)] = (compute[(37)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2564))]));
    compute[(44)] = (compute[(44)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3076))]));
    compute[(51)] = (compute[(51)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 728))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3588))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 754))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 4))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 754))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 516))]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 754))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1028))]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 754))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1540))]));
    compute[(31)] = (compute[(31)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 754))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2052))]));
    compute[(38)] = (compute[(38)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 754))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2564))]));
    compute[(45)] = (compute[(45)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 754))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3076))]));
    compute[(52)] = (compute[(52)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 754))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3588))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 780))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 4))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 780))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 516))]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 780))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1028))]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 780))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1540))]));
    compute[(32)] = (compute[(32)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 780))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2052))]));
    compute[(39)] = (compute[(39)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 780))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2564))]));
    compute[(46)] = (compute[(46)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 780))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3076))]));
    compute[(53)] = (compute[(53)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 780))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3588))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 806))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 4))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 806))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 516))]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 806))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1028))]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 806))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1540))]));
    compute[(33)] = (compute[(33)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 806))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2052))]));
    compute[(40)] = (compute[(40)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 806))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2564))]));
    compute[(47)] = (compute[(47)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 806))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3076))]));
    compute[(54)] = (compute[(54)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 806))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3588))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 832))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 4))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 832))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 516))]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 832))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1028))]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 832))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1540))]));
    compute[(34)] = (compute[(34)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 832))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2052))]));
    compute[(41)] = (compute[(41)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 832))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2564))]));
    compute[(48)] = (compute[(48)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 832))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3076))]));
    compute[(55)] = (compute[(55)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 832))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3588))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 845))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 5))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 845))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 517))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 845))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1029))]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 845))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1541))]));
    compute[(28)] = (compute[(28)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 845))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2053))]));
    compute[(35)] = (compute[(35)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 845))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2565))]));
    compute[(42)] = (compute[(42)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 845))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3077))]));
    compute[(49)] = (compute[(49)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 845))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3589))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 871))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 5))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 871))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 517))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 871))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1029))]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 871))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1541))]));
    compute[(29)] = (compute[(29)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 871))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2053))]));
    compute[(36)] = (compute[(36)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 871))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2565))]));
    compute[(43)] = (compute[(43)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 871))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3077))]));
    compute[(50)] = (compute[(50)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 871))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3589))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 897))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 5))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 897))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 517))]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 897))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1029))]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 897))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1541))]));
    compute[(30)] = (compute[(30)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 897))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2053))]));
    compute[(37)] = (compute[(37)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 897))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2565))]));
    compute[(44)] = (compute[(44)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 897))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3077))]));
    compute[(51)] = (compute[(51)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 897))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3589))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 923))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 5))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 923))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 517))]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 923))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1029))]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 923))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1541))]));
    compute[(31)] = (compute[(31)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 923))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2053))]));
    compute[(38)] = (compute[(38)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 923))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2565))]));
    compute[(45)] = (compute[(45)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 923))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3077))]));
    compute[(52)] = (compute[(52)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 923))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3589))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 949))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 5))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 949))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 517))]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 949))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1029))]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 949))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1541))]));
    compute[(32)] = (compute[(32)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 949))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2053))]));
    compute[(39)] = (compute[(39)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 949))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2565))]));
    compute[(46)] = (compute[(46)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 949))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3077))]));
    compute[(53)] = (compute[(53)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 949))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3589))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 975))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 5))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 975))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 517))]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 975))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1029))]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 975))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1541))]));
    compute[(33)] = (compute[(33)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 975))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2053))]));
    compute[(40)] = (compute[(40)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 975))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2565))]));
    compute[(47)] = (compute[(47)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 975))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3077))]));
    compute[(54)] = (compute[(54)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 975))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3589))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1001))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 5))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1001))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 517))]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1001))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1029))]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1001))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1541))]));
    compute[(34)] = (compute[(34)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1001))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2053))]));
    compute[(41)] = (compute[(41)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1001))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2565))]));
    compute[(48)] = (compute[(48)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1001))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3077))]));
    compute[(55)] = (compute[(55)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1001))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3589))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1014))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 6))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1014))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 518))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1014))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1030))]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1014))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1542))]));
    compute[(28)] = (compute[(28)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1014))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2054))]));
    compute[(35)] = (compute[(35)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1014))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2566))]));
    compute[(42)] = (compute[(42)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1014))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3078))]));
    compute[(49)] = (compute[(49)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1014))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3590))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1040))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 6))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1040))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 518))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1040))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1030))]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1040))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1542))]));
    compute[(29)] = (compute[(29)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1040))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2054))]));
    compute[(36)] = (compute[(36)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1040))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2566))]));
    compute[(43)] = (compute[(43)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1040))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3078))]));
    compute[(50)] = (compute[(50)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1040))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3590))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1066))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 6))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1066))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 518))]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1066))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1030))]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1066))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1542))]));
    compute[(30)] = (compute[(30)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1066))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2054))]));
    compute[(37)] = (compute[(37)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1066))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2566))]));
    compute[(44)] = (compute[(44)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1066))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3078))]));
    compute[(51)] = (compute[(51)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1066))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3590))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1092))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 6))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1092))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 518))]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1092))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1030))]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1092))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1542))]));
    compute[(31)] = (compute[(31)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1092))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2054))]));
    compute[(38)] = (compute[(38)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1092))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2566))]));
    compute[(45)] = (compute[(45)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1092))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3078))]));
    compute[(52)] = (compute[(52)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1092))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3590))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1118))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 6))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1118))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 518))]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1118))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1030))]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1118))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1542))]));
    compute[(32)] = (compute[(32)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1118))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2054))]));
    compute[(39)] = (compute[(39)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1118))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2566))]));
    compute[(46)] = (compute[(46)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1118))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3078))]));
    compute[(53)] = (compute[(53)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1118))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3590))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1144))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 6))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1144))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 518))]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1144))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1030))]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1144))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1542))]));
    compute[(33)] = (compute[(33)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1144))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2054))]));
    compute[(40)] = (compute[(40)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1144))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2566))]));
    compute[(47)] = (compute[(47)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1144))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3078))]));
    compute[(54)] = (compute[(54)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1144))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3590))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1170))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 6))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1170))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 518))]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1170))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1030))]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1170))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1542))]));
    compute[(34)] = (compute[(34)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1170))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2054))]));
    compute[(41)] = (compute[(41)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1170))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2566))]));
    compute[(48)] = (compute[(48)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1170))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3078))]));
    compute[(55)] = (compute[(55)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1170))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3590))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1183))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 7))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1183))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 519))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1183))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1031))]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1183))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1543))]));
    compute[(28)] = (compute[(28)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1183))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2055))]));
    compute[(35)] = (compute[(35)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1183))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2567))]));
    compute[(42)] = (compute[(42)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1183))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3079))]));
    compute[(49)] = (compute[(49)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1183))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3591))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1209))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 7))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1209))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 519))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1209))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1031))]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1209))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1543))]));
    compute[(29)] = (compute[(29)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1209))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2055))]));
    compute[(36)] = (compute[(36)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1209))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2567))]));
    compute[(43)] = (compute[(43)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1209))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3079))]));
    compute[(50)] = (compute[(50)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1209))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3591))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1235))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 7))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1235))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 519))]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1235))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1031))]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1235))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1543))]));
    compute[(30)] = (compute[(30)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1235))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2055))]));
    compute[(37)] = (compute[(37)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1235))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2567))]));
    compute[(44)] = (compute[(44)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1235))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3079))]));
    compute[(51)] = (compute[(51)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1235))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3591))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1261))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 7))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1261))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 519))]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1261))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1031))]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1261))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1543))]));
    compute[(31)] = (compute[(31)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1261))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2055))]));
    compute[(38)] = (compute[(38)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1261))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2567))]));
    compute[(45)] = (compute[(45)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1261))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3079))]));
    compute[(52)] = (compute[(52)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1261))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3591))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1287))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 7))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1287))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 519))]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1287))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1031))]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1287))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1543))]));
    compute[(32)] = (compute[(32)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1287))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2055))]));
    compute[(39)] = (compute[(39)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1287))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2567))]));
    compute[(46)] = (compute[(46)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1287))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3079))]));
    compute[(53)] = (compute[(53)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1287))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3591))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1313))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 7))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1313))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 519))]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1313))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1031))]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1313))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1543))]));
    compute[(33)] = (compute[(33)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1313))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2055))]));
    compute[(40)] = (compute[(40)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1313))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2567))]));
    compute[(47)] = (compute[(47)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1313))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3079))]));
    compute[(54)] = (compute[(54)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1313))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3591))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1339))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 7))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1339))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 519))]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1339))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1031))]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1339))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1543))]));
    compute[(34)] = (compute[(34)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1339))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2055))]));
    compute[(41)] = (compute[(41)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1339))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2567))]));
    compute[(48)] = (compute[(48)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1339))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3079))]));
    compute[(55)] = (compute[(55)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1339))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3591))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1352))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 8))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1352))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 520))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1352))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1032))]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1352))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1544))]));
    compute[(28)] = (compute[(28)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1352))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2056))]));
    compute[(35)] = (compute[(35)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1352))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2568))]));
    compute[(42)] = (compute[(42)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1352))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3080))]));
    compute[(49)] = (compute[(49)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1352))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3592))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1378))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 8))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1378))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 520))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1378))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1032))]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1378))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1544))]));
    compute[(29)] = (compute[(29)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1378))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2056))]));
    compute[(36)] = (compute[(36)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1378))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2568))]));
    compute[(43)] = (compute[(43)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1378))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3080))]));
    compute[(50)] = (compute[(50)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1378))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3592))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1404))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 8))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1404))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 520))]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1404))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1032))]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1404))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1544))]));
    compute[(30)] = (compute[(30)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1404))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2056))]));
    compute[(37)] = (compute[(37)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1404))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2568))]));
    compute[(44)] = (compute[(44)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1404))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3080))]));
    compute[(51)] = (compute[(51)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1404))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3592))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1430))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 8))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1430))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 520))]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1430))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1032))]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1430))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1544))]));
    compute[(31)] = (compute[(31)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1430))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2056))]));
    compute[(38)] = (compute[(38)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1430))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2568))]));
    compute[(45)] = (compute[(45)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1430))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3080))]));
    compute[(52)] = (compute[(52)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1430))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3592))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 8))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 520))]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1032))]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1544))]));
    compute[(32)] = (compute[(32)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2056))]));
    compute[(39)] = (compute[(39)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2568))]));
    compute[(46)] = (compute[(46)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3080))]));
    compute[(53)] = (compute[(53)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1456))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3592))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1482))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 8))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1482))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 520))]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1482))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1032))]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1482))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1544))]));
    compute[(33)] = (compute[(33)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1482))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2056))]));
    compute[(40)] = (compute[(40)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1482))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2568))]));
    compute[(47)] = (compute[(47)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1482))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3080))]));
    compute[(54)] = (compute[(54)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1482))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3592))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1508))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 8))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1508))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 520))]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1508))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1032))]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1508))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1544))]));
    compute[(34)] = (compute[(34)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1508))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2056))]));
    compute[(41)] = (compute[(41)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1508))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2568))]));
    compute[(48)] = (compute[(48)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1508))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3080))]));
    compute[(55)] = (compute[(55)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1508))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3592))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1521))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 9))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1521))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 521))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1521))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1033))]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1521))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1545))]));
    compute[(28)] = (compute[(28)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1521))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2057))]));
    compute[(35)] = (compute[(35)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1521))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2569))]));
    compute[(42)] = (compute[(42)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1521))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3081))]));
    compute[(49)] = (compute[(49)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1521))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3593))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1547))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 9))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1547))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 521))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1547))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1033))]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1547))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1545))]));
    compute[(29)] = (compute[(29)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1547))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2057))]));
    compute[(36)] = (compute[(36)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1547))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2569))]));
    compute[(43)] = (compute[(43)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1547))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3081))]));
    compute[(50)] = (compute[(50)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1547))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3593))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1573))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 9))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1573))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 521))]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1573))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1033))]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1573))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1545))]));
    compute[(30)] = (compute[(30)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1573))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2057))]));
    compute[(37)] = (compute[(37)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1573))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2569))]));
    compute[(44)] = (compute[(44)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1573))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3081))]));
    compute[(51)] = (compute[(51)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1573))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3593))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1599))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 9))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1599))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 521))]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1599))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1033))]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1599))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1545))]));
    compute[(31)] = (compute[(31)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1599))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2057))]));
    compute[(38)] = (compute[(38)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1599))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2569))]));
    compute[(45)] = (compute[(45)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1599))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3081))]));
    compute[(52)] = (compute[(52)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1599))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3593))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1625))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 9))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1625))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 521))]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1625))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1033))]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1625))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1545))]));
    compute[(32)] = (compute[(32)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1625))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2057))]));
    compute[(39)] = (compute[(39)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1625))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2569))]));
    compute[(46)] = (compute[(46)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1625))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3081))]));
    compute[(53)] = (compute[(53)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1625))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3593))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1651))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 9))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1651))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 521))]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1651))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1033))]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1651))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1545))]));
    compute[(33)] = (compute[(33)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1651))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2057))]));
    compute[(40)] = (compute[(40)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1651))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2569))]));
    compute[(47)] = (compute[(47)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1651))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3081))]));
    compute[(54)] = (compute[(54)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1651))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3593))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1677))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 9))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1677))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 521))]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1677))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1033))]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1677))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1545))]));
    compute[(34)] = (compute[(34)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1677))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2057))]));
    compute[(41)] = (compute[(41)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1677))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2569))]));
    compute[(48)] = (compute[(48)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1677))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3081))]));
    compute[(55)] = (compute[(55)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1677))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3593))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1690))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 10))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1690))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 522))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1690))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1034))]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1690))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1546))]));
    compute[(28)] = (compute[(28)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1690))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2058))]));
    compute[(35)] = (compute[(35)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1690))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2570))]));
    compute[(42)] = (compute[(42)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1690))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3082))]));
    compute[(49)] = (compute[(49)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1690))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3594))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1716))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 10))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1716))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 522))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1716))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1034))]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1716))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1546))]));
    compute[(29)] = (compute[(29)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1716))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2058))]));
    compute[(36)] = (compute[(36)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1716))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2570))]));
    compute[(43)] = (compute[(43)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1716))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3082))]));
    compute[(50)] = (compute[(50)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1716))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3594))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1742))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 10))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1742))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 522))]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1742))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1034))]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1742))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1546))]));
    compute[(30)] = (compute[(30)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1742))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2058))]));
    compute[(37)] = (compute[(37)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1742))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2570))]));
    compute[(44)] = (compute[(44)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1742))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3082))]));
    compute[(51)] = (compute[(51)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1742))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3594))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1768))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 10))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1768))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 522))]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1768))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1034))]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1768))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1546))]));
    compute[(31)] = (compute[(31)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1768))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2058))]));
    compute[(38)] = (compute[(38)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1768))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2570))]));
    compute[(45)] = (compute[(45)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1768))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3082))]));
    compute[(52)] = (compute[(52)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1768))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3594))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1794))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 10))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1794))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 522))]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1794))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1034))]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1794))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1546))]));
    compute[(32)] = (compute[(32)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1794))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2058))]));
    compute[(39)] = (compute[(39)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1794))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2570))]));
    compute[(46)] = (compute[(46)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1794))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3082))]));
    compute[(53)] = (compute[(53)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1794))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3594))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1820))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 10))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1820))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 522))]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1820))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1034))]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1820))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1546))]));
    compute[(33)] = (compute[(33)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1820))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2058))]));
    compute[(40)] = (compute[(40)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1820))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2570))]));
    compute[(47)] = (compute[(47)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1820))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3082))]));
    compute[(54)] = (compute[(54)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1820))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3594))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1846))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 10))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1846))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 522))]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1846))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1034))]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1846))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1546))]));
    compute[(34)] = (compute[(34)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1846))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2058))]));
    compute[(41)] = (compute[(41)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1846))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2570))]));
    compute[(48)] = (compute[(48)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1846))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3082))]));
    compute[(55)] = (compute[(55)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1846))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3594))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1859))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 11))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1859))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 523))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1859))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1035))]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1859))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1547))]));
    compute[(28)] = (compute[(28)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1859))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2059))]));
    compute[(35)] = (compute[(35)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1859))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2571))]));
    compute[(42)] = (compute[(42)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1859))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3083))]));
    compute[(49)] = (compute[(49)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1859))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3595))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1885))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 11))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1885))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 523))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1885))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1035))]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1885))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1547))]));
    compute[(29)] = (compute[(29)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1885))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2059))]));
    compute[(36)] = (compute[(36)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1885))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2571))]));
    compute[(43)] = (compute[(43)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1885))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3083))]));
    compute[(50)] = (compute[(50)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1885))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3595))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1911))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 11))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1911))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 523))]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1911))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1035))]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1911))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1547))]));
    compute[(30)] = (compute[(30)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1911))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2059))]));
    compute[(37)] = (compute[(37)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1911))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2571))]));
    compute[(44)] = (compute[(44)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1911))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3083))]));
    compute[(51)] = (compute[(51)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1911))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3595))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1937))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 11))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1937))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 523))]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1937))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1035))]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1937))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1547))]));
    compute[(31)] = (compute[(31)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1937))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2059))]));
    compute[(38)] = (compute[(38)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1937))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2571))]));
    compute[(45)] = (compute[(45)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1937))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3083))]));
    compute[(52)] = (compute[(52)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1937))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3595))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1963))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 11))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1963))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 523))]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1963))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1035))]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1963))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1547))]));
    compute[(32)] = (compute[(32)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1963))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2059))]));
    compute[(39)] = (compute[(39)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1963))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2571))]));
    compute[(46)] = (compute[(46)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1963))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3083))]));
    compute[(53)] = (compute[(53)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1963))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3595))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1989))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 11))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1989))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 523))]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1989))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1035))]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1989))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1547))]));
    compute[(33)] = (compute[(33)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1989))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2059))]));
    compute[(40)] = (compute[(40)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1989))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2571))]));
    compute[(47)] = (compute[(47)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1989))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3083))]));
    compute[(54)] = (compute[(54)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 1989))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3595))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2015))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 11))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2015))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 523))]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2015))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1035))]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2015))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1547))]));
    compute[(34)] = (compute[(34)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2015))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2059))]));
    compute[(41)] = (compute[(41)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2015))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2571))]));
    compute[(48)] = (compute[(48)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2015))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3083))]));
    compute[(55)] = (compute[(55)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2015))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3595))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2028))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 12))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2028))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 524))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2028))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1036))]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2028))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1548))]));
    compute[(28)] = (compute[(28)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2028))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2060))]));
    compute[(35)] = (compute[(35)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2028))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2572))]));
    compute[(42)] = (compute[(42)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2028))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3084))]));
    compute[(49)] = (compute[(49)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2028))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3596))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2054))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 12))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2054))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 524))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2054))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1036))]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2054))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1548))]));
    compute[(29)] = (compute[(29)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2054))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2060))]));
    compute[(36)] = (compute[(36)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2054))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2572))]));
    compute[(43)] = (compute[(43)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2054))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3084))]));
    compute[(50)] = (compute[(50)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2054))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3596))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2080))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 12))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2080))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 524))]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2080))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1036))]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2080))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1548))]));
    compute[(30)] = (compute[(30)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2080))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2060))]));
    compute[(37)] = (compute[(37)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2080))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2572))]));
    compute[(44)] = (compute[(44)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2080))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3084))]));
    compute[(51)] = (compute[(51)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2080))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3596))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2106))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 12))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2106))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 524))]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2106))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1036))]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2106))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1548))]));
    compute[(31)] = (compute[(31)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2106))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2060))]));
    compute[(38)] = (compute[(38)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2106))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2572))]));
    compute[(45)] = (compute[(45)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2106))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3084))]));
    compute[(52)] = (compute[(52)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2106))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3596))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2132))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 12))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2132))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 524))]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2132))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1036))]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2132))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1548))]));
    compute[(32)] = (compute[(32)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2132))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2060))]));
    compute[(39)] = (compute[(39)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2132))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2572))]));
    compute[(46)] = (compute[(46)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2132))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3084))]));
    compute[(53)] = (compute[(53)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2132))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3596))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2158))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 12))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2158))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 524))]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2158))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1036))]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2158))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1548))]));
    compute[(33)] = (compute[(33)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2158))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2060))]));
    compute[(40)] = (compute[(40)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2158))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2572))]));
    compute[(47)] = (compute[(47)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2158))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3084))]));
    compute[(54)] = (compute[(54)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2158))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3596))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2184))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 12))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2184))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 524))]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2184))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1036))]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2184))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1548))]));
    compute[(34)] = (compute[(34)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2184))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2060))]));
    compute[(41)] = (compute[(41)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2184))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2572))]));
    compute[(48)] = (compute[(48)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2184))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3084))]));
    compute[(55)] = (compute[(55)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2184))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3596))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2197))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 13))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2197))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 525))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2197))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1037))]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2197))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1549))]));
    compute[(28)] = (compute[(28)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2197))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2061))]));
    compute[(35)] = (compute[(35)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2197))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2573))]));
    compute[(42)] = (compute[(42)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2197))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3085))]));
    compute[(49)] = (compute[(49)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2197))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3597))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2223))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 13))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2223))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 525))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2223))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1037))]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2223))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1549))]));
    compute[(29)] = (compute[(29)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2223))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2061))]));
    compute[(36)] = (compute[(36)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2223))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2573))]));
    compute[(43)] = (compute[(43)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2223))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3085))]));
    compute[(50)] = (compute[(50)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2223))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3597))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2249))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 13))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2249))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 525))]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2249))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1037))]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2249))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1549))]));
    compute[(30)] = (compute[(30)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2249))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2061))]));
    compute[(37)] = (compute[(37)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2249))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2573))]));
    compute[(44)] = (compute[(44)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2249))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3085))]));
    compute[(51)] = (compute[(51)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2249))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3597))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2275))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 13))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2275))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 525))]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2275))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1037))]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2275))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1549))]));
    compute[(31)] = (compute[(31)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2275))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2061))]));
    compute[(38)] = (compute[(38)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2275))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2573))]));
    compute[(45)] = (compute[(45)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2275))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3085))]));
    compute[(52)] = (compute[(52)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2275))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3597))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2301))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 13))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2301))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 525))]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2301))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1037))]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2301))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1549))]));
    compute[(32)] = (compute[(32)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2301))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2061))]));
    compute[(39)] = (compute[(39)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2301))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2573))]));
    compute[(46)] = (compute[(46)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2301))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3085))]));
    compute[(53)] = (compute[(53)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2301))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3597))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2327))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 13))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2327))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 525))]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2327))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1037))]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2327))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1549))]));
    compute[(33)] = (compute[(33)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2327))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2061))]));
    compute[(40)] = (compute[(40)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2327))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2573))]));
    compute[(47)] = (compute[(47)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2327))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3085))]));
    compute[(54)] = (compute[(54)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2327))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3597))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2353))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 13))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2353))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 525))]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2353))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1037))]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2353))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1549))]));
    compute[(34)] = (compute[(34)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2353))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2061))]));
    compute[(41)] = (compute[(41)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2353))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2573))]));
    compute[(48)] = (compute[(48)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2353))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3085))]));
    compute[(55)] = (compute[(55)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2353))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3597))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2366))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 14))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2366))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 526))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2366))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1038))]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2366))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1550))]));
    compute[(28)] = (compute[(28)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2366))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2062))]));
    compute[(35)] = (compute[(35)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2366))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2574))]));
    compute[(42)] = (compute[(42)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2366))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3086))]));
    compute[(49)] = (compute[(49)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2366))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3598))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 14))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 526))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1038))]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1550))]));
    compute[(29)] = (compute[(29)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2062))]));
    compute[(36)] = (compute[(36)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2574))]));
    compute[(43)] = (compute[(43)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3086))]));
    compute[(50)] = (compute[(50)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2392))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3598))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2418))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 14))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2418))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 526))]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2418))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1038))]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2418))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1550))]));
    compute[(30)] = (compute[(30)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2418))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2062))]));
    compute[(37)] = (compute[(37)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2418))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2574))]));
    compute[(44)] = (compute[(44)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2418))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3086))]));
    compute[(51)] = (compute[(51)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2418))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3598))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2444))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 14))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2444))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 526))]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2444))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1038))]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2444))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1550))]));
    compute[(31)] = (compute[(31)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2444))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2062))]));
    compute[(38)] = (compute[(38)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2444))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2574))]));
    compute[(45)] = (compute[(45)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2444))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3086))]));
    compute[(52)] = (compute[(52)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2444))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3598))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2470))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 14))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2470))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 526))]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2470))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1038))]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2470))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1550))]));
    compute[(32)] = (compute[(32)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2470))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2062))]));
    compute[(39)] = (compute[(39)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2470))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2574))]));
    compute[(46)] = (compute[(46)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2470))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3086))]));
    compute[(53)] = (compute[(53)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2470))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3598))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2496))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 14))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2496))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 526))]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2496))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1038))]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2496))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1550))]));
    compute[(33)] = (compute[(33)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2496))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2062))]));
    compute[(40)] = (compute[(40)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2496))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2574))]));
    compute[(47)] = (compute[(47)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2496))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3086))]));
    compute[(54)] = (compute[(54)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2496))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3598))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2522))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 14))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2522))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 526))]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2522))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1038))]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2522))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1550))]));
    compute[(34)] = (compute[(34)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2522))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2062))]));
    compute[(41)] = (compute[(41)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2522))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2574))]));
    compute[(48)] = (compute[(48)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2522))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3086))]));
    compute[(55)] = (compute[(55)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2522))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3598))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2535))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 15))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2535))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 527))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2535))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1039))]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2535))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1551))]));
    compute[(28)] = (compute[(28)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2535))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2063))]));
    compute[(35)] = (compute[(35)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2535))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2575))]));
    compute[(42)] = (compute[(42)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2535))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3087))]));
    compute[(49)] = (compute[(49)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2535))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3599))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2561))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 15))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2561))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 527))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2561))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1039))]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2561))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1551))]));
    compute[(29)] = (compute[(29)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2561))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2063))]));
    compute[(36)] = (compute[(36)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2561))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2575))]));
    compute[(43)] = (compute[(43)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2561))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3087))]));
    compute[(50)] = (compute[(50)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2561))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3599))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2587))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 15))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2587))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 527))]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2587))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1039))]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2587))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1551))]));
    compute[(30)] = (compute[(30)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2587))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2063))]));
    compute[(37)] = (compute[(37)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2587))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2575))]));
    compute[(44)] = (compute[(44)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2587))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3087))]));
    compute[(51)] = (compute[(51)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2587))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3599))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2613))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 15))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2613))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 527))]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2613))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1039))]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2613))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1551))]));
    compute[(31)] = (compute[(31)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2613))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2063))]));
    compute[(38)] = (compute[(38)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2613))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2575))]));
    compute[(45)] = (compute[(45)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2613))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3087))]));
    compute[(52)] = (compute[(52)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2613))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3599))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2639))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 15))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2639))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 527))]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2639))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1039))]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2639))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1551))]));
    compute[(32)] = (compute[(32)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2639))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2063))]));
    compute[(39)] = (compute[(39)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2639))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2575))]));
    compute[(46)] = (compute[(46)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2639))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3087))]));
    compute[(53)] = (compute[(53)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2639))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3599))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2665))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 15))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2665))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 527))]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2665))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1039))]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2665))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1551))]));
    compute[(33)] = (compute[(33)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2665))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2063))]));
    compute[(40)] = (compute[(40)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2665))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2575))]));
    compute[(47)] = (compute[(47)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2665))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3087))]));
    compute[(54)] = (compute[(54)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2665))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3599))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2691))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 15))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2691))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 527))]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2691))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1039))]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2691))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 1551))]));
    compute[(34)] = (compute[(34)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2691))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2063))]));
    compute[(41)] = (compute[(41)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2691))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 2575))]));
    compute[(48)] = (compute[(48)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2691))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3087))]));
    compute[(55)] = (compute[(55)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 2691))] * placeholder_shared[(((((int)threadIdx.z) * 16) + 3599))]));
  }
  ((float*)T_relu)[((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)))] = max((float)(((compute[(0)] + ((float*)placeholder2)[((((((int)blockIdx.z) & 1) * 256) + ((int)threadIdx.z)))]) + ((float*)placeholder3)[((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 1568))] = max((float)(((compute[(7)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 256) + ((int)threadIdx.z)) + 32))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 1568))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 3136))] = max((float)(((compute[(14)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 256) + ((int)threadIdx.z)) + 64))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 3136))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 4704))] = max((float)(((compute[(21)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 256) + ((int)threadIdx.z)) + 96))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 4704))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 6272))] = max((float)(((compute[(28)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 256) + ((int)threadIdx.z)) + 128))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 6272))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 7840))] = max((float)(((compute[(35)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 256) + ((int)threadIdx.z)) + 160))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 7840))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 9408))] = max((float)(((compute[(42)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 256) + ((int)threadIdx.z)) + 192))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 9408))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 10976))] = max((float)(((compute[(49)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 256) + ((int)threadIdx.z)) + 224))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 10976))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 7))] = max((float)(((compute[(1)] + ((float*)placeholder2)[((((((int)blockIdx.z) & 1) * 256) + ((int)threadIdx.z)))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 7))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 1575))] = max((float)(((compute[(8)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 256) + ((int)threadIdx.z)) + 32))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 1575))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 3143))] = max((float)(((compute[(15)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 256) + ((int)threadIdx.z)) + 64))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 3143))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 4711))] = max((float)(((compute[(22)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 256) + ((int)threadIdx.z)) + 96))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 4711))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 6279))] = max((float)(((compute[(29)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 256) + ((int)threadIdx.z)) + 128))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 6279))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 7847))] = max((float)(((compute[(36)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 256) + ((int)threadIdx.z)) + 160))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 7847))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 9415))] = max((float)(((compute[(43)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 256) + ((int)threadIdx.z)) + 192))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 9415))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 10983))] = max((float)(((compute[(50)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 256) + ((int)threadIdx.z)) + 224))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 10983))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 14))] = max((float)(((compute[(2)] + ((float*)placeholder2)[((((((int)blockIdx.z) & 1) * 256) + ((int)threadIdx.z)))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 14))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 1582))] = max((float)(((compute[(9)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 256) + ((int)threadIdx.z)) + 32))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 1582))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 3150))] = max((float)(((compute[(16)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 256) + ((int)threadIdx.z)) + 64))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 3150))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 4718))] = max((float)(((compute[(23)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 256) + ((int)threadIdx.z)) + 96))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 4718))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 6286))] = max((float)(((compute[(30)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 256) + ((int)threadIdx.z)) + 128))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 6286))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 7854))] = max((float)(((compute[(37)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 256) + ((int)threadIdx.z)) + 160))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 7854))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 9422))] = max((float)(((compute[(44)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 256) + ((int)threadIdx.z)) + 192))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 9422))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 10990))] = max((float)(((compute[(51)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 256) + ((int)threadIdx.z)) + 224))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 10990))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 21))] = max((float)(((compute[(3)] + ((float*)placeholder2)[((((((int)blockIdx.z) & 1) * 256) + ((int)threadIdx.z)))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 21))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 1589))] = max((float)(((compute[(10)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 256) + ((int)threadIdx.z)) + 32))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 1589))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 3157))] = max((float)(((compute[(17)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 256) + ((int)threadIdx.z)) + 64))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 3157))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 4725))] = max((float)(((compute[(24)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 256) + ((int)threadIdx.z)) + 96))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 4725))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 6293))] = max((float)(((compute[(31)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 256) + ((int)threadIdx.z)) + 128))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 6293))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 7861))] = max((float)(((compute[(38)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 256) + ((int)threadIdx.z)) + 160))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 7861))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 9429))] = max((float)(((compute[(45)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 256) + ((int)threadIdx.z)) + 192))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 9429))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 10997))] = max((float)(((compute[(52)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 256) + ((int)threadIdx.z)) + 224))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 10997))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 28))] = max((float)(((compute[(4)] + ((float*)placeholder2)[((((((int)blockIdx.z) & 1) * 256) + ((int)threadIdx.z)))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 28))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 1596))] = max((float)(((compute[(11)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 256) + ((int)threadIdx.z)) + 32))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 1596))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 3164))] = max((float)(((compute[(18)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 256) + ((int)threadIdx.z)) + 64))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 3164))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 4732))] = max((float)(((compute[(25)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 256) + ((int)threadIdx.z)) + 96))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 4732))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 6300))] = max((float)(((compute[(32)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 256) + ((int)threadIdx.z)) + 128))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 6300))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 7868))] = max((float)(((compute[(39)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 256) + ((int)threadIdx.z)) + 160))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 7868))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 9436))] = max((float)(((compute[(46)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 256) + ((int)threadIdx.z)) + 192))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 9436))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 11004))] = max((float)(((compute[(53)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 256) + ((int)threadIdx.z)) + 224))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 11004))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 35))] = max((float)(((compute[(5)] + ((float*)placeholder2)[((((((int)blockIdx.z) & 1) * 256) + ((int)threadIdx.z)))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 35))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 1603))] = max((float)(((compute[(12)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 256) + ((int)threadIdx.z)) + 32))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 1603))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 3171))] = max((float)(((compute[(19)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 256) + ((int)threadIdx.z)) + 64))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 3171))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 4739))] = max((float)(((compute[(26)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 256) + ((int)threadIdx.z)) + 96))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 4739))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 6307))] = max((float)(((compute[(33)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 256) + ((int)threadIdx.z)) + 128))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 6307))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 7875))] = max((float)(((compute[(40)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 256) + ((int)threadIdx.z)) + 160))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 7875))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 9443))] = max((float)(((compute[(47)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 256) + ((int)threadIdx.z)) + 192))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 9443))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 11011))] = max((float)(((compute[(54)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 256) + ((int)threadIdx.z)) + 224))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 11011))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 42))] = max((float)(((compute[(6)] + ((float*)placeholder2)[((((((int)blockIdx.z) & 1) * 256) + ((int)threadIdx.z)))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 42))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 1610))] = max((float)(((compute[(13)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 256) + ((int)threadIdx.z)) + 32))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 1610))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 3178))] = max((float)(((compute[(20)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 256) + ((int)threadIdx.z)) + 64))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 3178))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 4746))] = max((float)(((compute[(27)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 256) + ((int)threadIdx.z)) + 96))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 4746))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 6314))] = max((float)(((compute[(34)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 256) + ((int)threadIdx.z)) + 128))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 6314))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 7882))] = max((float)(((compute[(41)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 256) + ((int)threadIdx.z)) + 160))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 7882))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 9450))] = max((float)(((compute[(48)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 256) + ((int)threadIdx.z)) + 192))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 9450))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 11018))] = max((float)(((compute[(55)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 256) + ((int)threadIdx.z)) + 224))]) + ((float*)placeholder3)[(((((((int)blockIdx.z) * 12544) + (((int)threadIdx.z) * 49)) + ((int)threadIdx.x)) + 11018))])), (float)(0.000000e+00f));
}

extern "C" __global__ void fused_nn_contrib_conv2d_winograd_without_weight_transform_add_add_nn_relu_kernel0(void* __restrict__ placeholder, float* __restrict__ data_pack) {
  float d[16];
  float data_pack_local[16];
  for (int eps = 0; eps < 4; ++eps) {
    for (int nu = 0; nu < 4; ++nu) {
      d[(((eps * 4) + nu))] = (((((1 <= ((((((int)threadIdx.x) & 15) >> 2) * 2) + eps)) && (((((((int)threadIdx.x) & 15) >> 2) * 2) + eps) < 8)) && (1 <= (((((int)threadIdx.x) & 3) * 2) + nu))) && ((((((int)threadIdx.x) & 3) * 2) + nu) < 8)) ? (float)((float*)placeholder)[((((((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) & 511) >> 4) * 25088) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) >> 9) * 49)) + (((((int)threadIdx.x) & 15) >> 2) * 14)) + (eps * 7)) + ((((int)threadIdx.x) & 3) * 2)) + nu) - 8))] : (float)0.000000e+00f);
    }
  }
  data_pack_local[(0)] = 0.000000e+00f;
  data_pack_local[(0)] = (data_pack_local[(0)] + d[(0)]);
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(2)] * -1.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(8)] * -1.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(10)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(1)] = 0.000000e+00f;
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(1)] * -1.000000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + d[(2)]);
  data_pack_local[(1)] = (data_pack_local[(1)] + ((d[(9)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(2)] = 0.000000e+00f;
  data_pack_local[(2)] = (data_pack_local[(2)] + d[(1)]);
  data_pack_local[(2)] = (data_pack_local[(2)] + d[(2)]);
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(9)] * -1.000000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(3)] = 0.000000e+00f;
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(1)] * -1.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + d[(3)]);
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(9)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(11)] * -1.000000e+00f));
  data_pack_local[(4)] = 0.000000e+00f;
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(4)] * -1.000000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(6)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + d[(8)]);
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(5)] = 0.000000e+00f;
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(5)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(6)] * -1.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(9)] * -1.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + d[(10)]);
  data_pack_local[(6)] = 0.000000e+00f;
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(5)] * -1.000000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(6)] * -1.000000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + d[(9)]);
  data_pack_local[(6)] = (data_pack_local[(6)] + d[(10)]);
  data_pack_local[(7)] = 0.000000e+00f;
  data_pack_local[(7)] = (data_pack_local[(7)] + ((d[(5)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(7)] * -1.000000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(9)] * -1.000000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + d[(11)]);
  data_pack_local[(8)] = 0.000000e+00f;
  data_pack_local[(8)] = (data_pack_local[(8)] + d[(4)]);
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(6)] * -1.000000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + d[(8)]);
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(9)] = 0.000000e+00f;
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(5)] * -1.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + d[(6)]);
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(9)] * -1.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + d[(10)]);
  data_pack_local[(10)] = 0.000000e+00f;
  data_pack_local[(10)] = (data_pack_local[(10)] + d[(5)]);
  data_pack_local[(10)] = (data_pack_local[(10)] + d[(6)]);
  data_pack_local[(10)] = (data_pack_local[(10)] + d[(9)]);
  data_pack_local[(10)] = (data_pack_local[(10)] + d[(10)]);
  data_pack_local[(11)] = 0.000000e+00f;
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(5)] * -1.000000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + d[(7)]);
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(9)] * -1.000000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + d[(11)]);
  data_pack_local[(12)] = 0.000000e+00f;
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(4)] * -1.000000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(6)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + d[(12)]);
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(14)] * -1.000000e+00f));
  data_pack_local[(13)] = 0.000000e+00f;
  data_pack_local[(13)] = (data_pack_local[(13)] + ((d[(5)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(6)] * -1.000000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(13)] * -1.000000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + d[(14)]);
  data_pack_local[(14)] = 0.000000e+00f;
  data_pack_local[(14)] = (data_pack_local[(14)] + (d[(5)] * -1.000000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + (d[(6)] * -1.000000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + d[(13)]);
  data_pack_local[(14)] = (data_pack_local[(14)] + d[(14)]);
  data_pack_local[(15)] = 0.000000e+00f;
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(5)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + (d[(7)] * -1.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + (d[(13)] * -1.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + d[(15)]);
  for (int eps1 = 0; eps1 < 4; ++eps1) {
    for (int nu1 = 0; nu1 < 4; ++nu1) {
      data_pack[(((((eps1 * 1048576) + (nu1 * 262144)) + (((int)blockIdx.x) * 128)) + ((int)threadIdx.x)))] = data_pack_local[(((eps1 * 4) + nu1))];
    }
  }
}

extern "C" __global__ void fused_nn_contrib_conv2d_winograd_without_weight_transform_add_2_kernel0(void* __restrict__ placeholder, float* __restrict__ data_pack) {
  float d[16];
  float data_pack_local[16];
  for (int eps = 0; eps < 4; ++eps) {
    for (int nu = 0; nu < 4; ++nu) {
      d[(((eps * 4) + nu))] = (((((1 <= ((((((int)threadIdx.x) & 15) >> 2) * 2) + eps)) && (((((((int)threadIdx.x) & 15) >> 2) * 2) + eps) < 8)) && (1 <= (((((int)threadIdx.x) & 3) * 2) + nu))) && ((((((int)threadIdx.x) & 3) * 2) + nu) < 8)) ? (float)((float*)placeholder)[((((((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) & 511) >> 4) * 25088) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) >> 9) * 49)) + (((((int)threadIdx.x) & 15) >> 2) * 14)) + (eps * 7)) + ((((int)threadIdx.x) & 3) * 2)) + nu) - 8))] : (float)0.000000e+00f);
    }
  }
  data_pack_local[(0)] = 0.000000e+00f;
  data_pack_local[(0)] = (data_pack_local[(0)] + d[(0)]);
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(2)] * -1.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(8)] * -1.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(10)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(1)] = 0.000000e+00f;
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(1)] * -1.000000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + d[(2)]);
  data_pack_local[(1)] = (data_pack_local[(1)] + ((d[(9)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(2)] = 0.000000e+00f;
  data_pack_local[(2)] = (data_pack_local[(2)] + d[(1)]);
  data_pack_local[(2)] = (data_pack_local[(2)] + d[(2)]);
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(9)] * -1.000000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(3)] = 0.000000e+00f;
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(1)] * -1.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + d[(3)]);
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(9)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(11)] * -1.000000e+00f));
  data_pack_local[(4)] = 0.000000e+00f;
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(4)] * -1.000000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(6)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + d[(8)]);
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(5)] = 0.000000e+00f;
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(5)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(6)] * -1.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(9)] * -1.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + d[(10)]);
  data_pack_local[(6)] = 0.000000e+00f;
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(5)] * -1.000000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(6)] * -1.000000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + d[(9)]);
  data_pack_local[(6)] = (data_pack_local[(6)] + d[(10)]);
  data_pack_local[(7)] = 0.000000e+00f;
  data_pack_local[(7)] = (data_pack_local[(7)] + ((d[(5)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(7)] * -1.000000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(9)] * -1.000000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + d[(11)]);
  data_pack_local[(8)] = 0.000000e+00f;
  data_pack_local[(8)] = (data_pack_local[(8)] + d[(4)]);
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(6)] * -1.000000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + d[(8)]);
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(9)] = 0.000000e+00f;
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(5)] * -1.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + d[(6)]);
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(9)] * -1.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + d[(10)]);
  data_pack_local[(10)] = 0.000000e+00f;
  data_pack_local[(10)] = (data_pack_local[(10)] + d[(5)]);
  data_pack_local[(10)] = (data_pack_local[(10)] + d[(6)]);
  data_pack_local[(10)] = (data_pack_local[(10)] + d[(9)]);
  data_pack_local[(10)] = (data_pack_local[(10)] + d[(10)]);
  data_pack_local[(11)] = 0.000000e+00f;
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(5)] * -1.000000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + d[(7)]);
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(9)] * -1.000000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + d[(11)]);
  data_pack_local[(12)] = 0.000000e+00f;
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(4)] * -1.000000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(6)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + d[(12)]);
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(14)] * -1.000000e+00f));
  data_pack_local[(13)] = 0.000000e+00f;
  data_pack_local[(13)] = (data_pack_local[(13)] + ((d[(5)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(6)] * -1.000000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(13)] * -1.000000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + d[(14)]);
  data_pack_local[(14)] = 0.000000e+00f;
  data_pack_local[(14)] = (data_pack_local[(14)] + (d[(5)] * -1.000000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + (d[(6)] * -1.000000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + d[(13)]);
  data_pack_local[(14)] = (data_pack_local[(14)] + d[(14)]);
  data_pack_local[(15)] = 0.000000e+00f;
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(5)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + (d[(7)] * -1.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + (d[(13)] * -1.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + d[(15)]);
  for (int eps1 = 0; eps1 < 4; ++eps1) {
    for (int nu1 = 0; nu1 < 4; ++nu1) {
      data_pack[(((((eps1 * 1048576) + (nu1 * 262144)) + (((int)blockIdx.x) * 128)) + ((int)threadIdx.x)))] = data_pack_local[(((eps1 * 4) + nu1))];
    }
  }
}

extern "C" __global__ void fused_nn_contrib_conv2d_winograd_without_weight_transform_add_2_kernel1(void* __restrict__ placeholder, float* __restrict__ data_pack, float* __restrict__ bgemm) {
  float bgemm_local[128];
  __shared__ float placeholder_shared[1024];
  __shared__ float data_pack_shared[1024];
  #pragma unroll
  for (int co_c_init = 0; co_c_init < 32; ++co_c_init) {
    #pragma unroll
    for (int p_c_init = 0; p_c_init < 4; ++p_c_init) {
      bgemm_local[(((co_c_init * 4) + p_c_init))] = 0.000000e+00f;
    }
  }
  for (int ci_outer = 0; ci_outer < 64; ++ci_outer) {
    __syncthreads();
    #pragma unroll
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer = 0; ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer < 8; ++ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer) {
      placeholder_shared[((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 128) + (((int)threadIdx.y) * 32)) + ((int)threadIdx.x)))] = ((float*)placeholder)[(((((((((int)blockIdx.z) * 262144) + (ci_outer * 4096)) + (ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 512)) + (((int)blockIdx.y) * 128)) + (((int)threadIdx.y) * 32)) + ((int)threadIdx.x)))];
    }
    #pragma unroll
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer1 < 8; ++ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer1) {
      data_pack_shared[((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer1 * 128) + (((int)threadIdx.y) * 32)) + ((int)threadIdx.x)))] = data_pack[(((((((((int)blockIdx.z) * 262144) + (ci_outer * 4096)) + (ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer1 * 512)) + (((int)blockIdx.x) * 128)) + (((int)threadIdx.y) * 32)) + ((int)threadIdx.x)))];
    }
    __syncthreads();
    #pragma unroll
    for (int ci_inner = 0; ci_inner < 8; ++ci_inner) {
      #pragma unroll
      for (int co_c = 0; co_c < 32; ++co_c) {
        #pragma unroll
        for (int p_c = 0; p_c < 4; ++p_c) {
          bgemm_local[(((co_c * 4) + p_c))] = (bgemm_local[(((co_c * 4) + p_c))] + (placeholder_shared[((((ci_inner * 128) + (((int)threadIdx.y) * 32)) + co_c))] * data_pack_shared[((((ci_inner * 128) + (((int)threadIdx.x) * 4)) + p_c))]));
        }
      }
    }
  }
  #pragma unroll
  for (int co_inner_inner_inner = 0; co_inner_inner_inner < 32; ++co_inner_inner_inner) {
    #pragma unroll
    for (int p_inner_inner_inner = 0; p_inner_inner_inner < 4; ++p_inner_inner_inner) {
      bgemm[((((((((((int)blockIdx.z) * 262144) + (((int)blockIdx.y) * 65536)) + (((int)threadIdx.y) * 16384)) + (co_inner_inner_inner * 512)) + (((int)blockIdx.x) * 128)) + (((int)threadIdx.x) * 4)) + p_inner_inner_inner))] = bgemm_local[(((co_inner_inner_inner * 4) + p_inner_inner_inner))];
    }
  }
}

extern "C" __global__ void fused_nn_dense_add_kernel0(void* __restrict__ placeholder, void* __restrict__ placeholder1, void* __restrict__ T_add, void* __restrict__ placeholder2) {
  nvcuda::wmma::fragment<nvcuda::wmma::accumulator, 32, 8, 16, float> T_dense_wmma_accumulator[1];
  __shared__ half compute_shared[512];
  __shared__ half compute_shared1[128];
  nvcuda::wmma::fragment<nvcuda::wmma::matrix_a, 32, 8, 16, half, nvcuda::wmma::row_major> compute_shared_wmma_matrix_a[1];
  nvcuda::wmma::fragment<nvcuda::wmma::matrix_b, 32, 8, 16, half, nvcuda::wmma::col_major> compute_shared_wmma_matrix_b[1];
  (void)nvcuda::wmma::fill_fragment(T_dense_wmma_accumulator[0], 0.000000e+00f);
  for (int k_outer_outer = 0; k_outer_outer < 32; ++k_outer_outer) {
    __syncthreads();
    for (int ax0_ax1_fused_outer_outer_outer_outer = 0; ax0_ax1_fused_outer_outer_outer_outer < 16; ++ax0_ax1_fused_outer_outer_outer_outer) {
      compute_shared[(((ax0_ax1_fused_outer_outer_outer_outer * 32) + ((int)threadIdx.x)))] = ((half)((float*)placeholder)[(((((ax0_ax1_fused_outer_outer_outer_outer * 1024) + ((((int)threadIdx.x) >> 4) * 512)) + (k_outer_outer * 16)) + (((int)threadIdx.x) & 15)))]);
    }
    for (int ax0_ax1_fused_outer_outer_outer_outer1 = 0; ax0_ax1_fused_outer_outer_outer_outer1 < 4; ++ax0_ax1_fused_outer_outer_outer_outer1) {
      compute_shared1[(((ax0_ax1_fused_outer_outer_outer_outer1 * 32) + ((int)threadIdx.x)))] = ((half)((float*)placeholder1)[((((((((int)blockIdx.y) * 4096) + (ax0_ax1_fused_outer_outer_outer_outer1 * 1024)) + ((((int)threadIdx.x) >> 4) * 512)) + (k_outer_outer * 16)) + (((int)threadIdx.x) & 15)))]);
    }
    __syncthreads();
    (void)nvcuda::wmma::load_matrix_sync(compute_shared_wmma_matrix_a[0], ((half *)compute_shared + 0), 16);
    (void)nvcuda::wmma::load_matrix_sync(compute_shared_wmma_matrix_b[0], ((half *)compute_shared1 + 0), 16);
    (void)nvcuda::wmma::mma_sync(T_dense_wmma_accumulator[0], compute_shared_wmma_matrix_a[0], compute_shared_wmma_matrix_b[0], T_dense_wmma_accumulator[0]);
  }
  __syncthreads();
  (void)nvcuda::wmma::store_matrix_sync(((float *)compute_shared + 0), T_dense_wmma_accumulator[0], 8, nvcuda::wmma::mem_row_major);
  __syncthreads();
  for (int ax0_inner_ax1_inner_fused_outer_outer_outer_outer = 0; ax0_inner_ax1_inner_fused_outer_outer_outer_outer < 8; ++ax0_inner_ax1_inner_fused_outer_outer_outer_outer) {
    ((float*)T_add)[(((((ax0_inner_ax1_inner_fused_outer_outer_outer_outer * 4000) + ((((int)threadIdx.x) >> 3) * 1000)) + (((int)blockIdx.y) * 8)) + (((int)threadIdx.x) & 7)))] = (((float*)compute_shared)[(((ax0_inner_ax1_inner_fused_outer_outer_outer_outer * 32) + ((int)threadIdx.x)))] + ((float*)placeholder2)[(((((int)blockIdx.y) * 8) + (((int)threadIdx.x) & 7)))]);
  }
}

extern "C" __global__ void fused_nn_contrib_conv2d_winograd_without_weight_transform_add_add_nn_relu_3_kernel0(void* __restrict__ placeholder, float* __restrict__ data_pack) {
  float d[36];
  float data_pack_local[36];
  for (int eps = 0; eps < 6; ++eps) {
    for (int nu = 0; nu < 6; ++nu) {
      d[(((eps * 6) + nu))] = (((((1 <= ((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196) / 14) * 4) + eps)) && (((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196) / 14) * 4) + eps) < 57)) && (1 <= (((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 14) * 4) + nu))) && ((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 14) * 4) + nu) < 57)) ? (float)((float*)placeholder)[((((((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 6272) / 196) * 200704) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 6272) * 3136)) + (((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196) / 14) * 224)) + (eps * 56)) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 14) * 4)) + nu) - 57))] : (float)0.000000e+00f);
    }
  }
  data_pack_local[(0)] = 0.000000e+00f;
  data_pack_local[(0)] = (data_pack_local[(0)] + d[(0)]);
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(1)] * -1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(2)] * -2.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(3)] * 1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + d[(4)]);
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(6)] * -1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(7)] * -1.500000e+00f) * -1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(8)] * -1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(9)] * -1.500000e+00f) * 1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(10)] * -1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(12)] * -2.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(13)] * -2.000000e+00f) * -1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(14)] * -2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(15)] * -2.000000e+00f) * 1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(16)] * -2.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(18)] * 1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(19)] * 1.500000e+00f) * -1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(20)] * 1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(21)] * 1.500000e+00f) * 1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(22)] * 1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + d[(24)]);
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(25)] * -1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(26)] * -2.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(27)] * 1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + d[(28)]);
  data_pack_local[(1)] = 0.000000e+00f;
  data_pack_local[(1)] = (data_pack_local[(1)] + d[(1)]);
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(2)] * -2.500000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(3)] * 5.000000e-01f));
  data_pack_local[(1)] = (data_pack_local[(1)] + d[(4)]);
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(7)] * -1.500000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + ((d[(8)] * -1.500000e+00f) * -2.500000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + ((d[(9)] * -1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(10)] * -1.500000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(13)] * -2.000000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + ((d[(14)] * -2.000000e+00f) * -2.500000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + ((d[(15)] * -2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(16)] * -2.000000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(19)] * 1.500000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + ((d[(20)] * 1.500000e+00f) * -2.500000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + ((d[(21)] * 1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(22)] * 1.500000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + d[(25)]);
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(26)] * -2.500000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(27)] * 5.000000e-01f));
  data_pack_local[(1)] = (data_pack_local[(1)] + d[(28)]);
  data_pack_local[(2)] = 0.000000e+00f;
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(1)] * -1.000000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(2)] * 5.000000e-01f));
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(3)] * 2.500000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + d[(4)]);
  data_pack_local[(2)] = (data_pack_local[(2)] + ((d[(7)] * -1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + ((d[(8)] * -1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(2)] = (data_pack_local[(2)] + ((d[(9)] * -1.500000e+00f) * 2.500000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(10)] * -1.500000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + ((d[(13)] * -2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + ((d[(14)] * -2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(2)] = (data_pack_local[(2)] + ((d[(15)] * -2.000000e+00f) * 2.500000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(16)] * -2.000000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + ((d[(19)] * 1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + ((d[(20)] * 1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(2)] = (data_pack_local[(2)] + ((d[(21)] * 1.500000e+00f) * 2.500000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(22)] * 1.500000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(25)] * -1.000000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(26)] * 5.000000e-01f));
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(27)] * 2.500000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + d[(28)]);
  data_pack_local[(3)] = 0.000000e+00f;
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(1)] * -2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(2)] * -1.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(3)] * 2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + d[(4)]);
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(7)] * -1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(8)] * -1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(9)] * -1.500000e+00f) * 2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(10)] * -1.500000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(13)] * -2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(14)] * -2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(15)] * -2.000000e+00f) * 2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(16)] * -2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(19)] * 1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(20)] * 1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(21)] * 1.500000e+00f) * 2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(22)] * 1.500000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(25)] * -2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(26)] * -1.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(27)] * 2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + d[(28)]);
  data_pack_local[(4)] = 0.000000e+00f;
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(1)] * 5.000000e-01f));
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(2)] * -1.000000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(3)] * -5.000000e-01f));
  data_pack_local[(4)] = (data_pack_local[(4)] + d[(4)]);
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(7)] * -1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(8)] * -1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(9)] * -1.500000e+00f) * -5.000000e-01f));
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(10)] * -1.500000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(13)] * -2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(14)] * -2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(15)] * -2.000000e+00f) * -5.000000e-01f));
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(16)] * -2.000000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(19)] * 1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(20)] * 1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(21)] * 1.500000e+00f) * -5.000000e-01f));
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(22)] * 1.500000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(25)] * 5.000000e-01f));
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(26)] * -1.000000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(27)] * -5.000000e-01f));
  data_pack_local[(4)] = (data_pack_local[(4)] + d[(28)]);
  data_pack_local[(5)] = 0.000000e+00f;
  data_pack_local[(5)] = (data_pack_local[(5)] + d[(1)]);
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(2)] * -1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(3)] * -2.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(4)] * 1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + d[(5)]);
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(7)] * -1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(8)] * -1.500000e+00f) * -1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(9)] * -1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(10)] * -1.500000e+00f) * 1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(11)] * -1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(13)] * -2.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(14)] * -2.000000e+00f) * -1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(15)] * -2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(16)] * -2.000000e+00f) * 1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(17)] * -2.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(19)] * 1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(20)] * 1.500000e+00f) * -1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(21)] * 1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(22)] * 1.500000e+00f) * 1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(23)] * 1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + d[(25)]);
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(26)] * -1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(27)] * -2.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(28)] * 1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + d[(29)]);
  data_pack_local[(6)] = 0.000000e+00f;
  data_pack_local[(6)] = (data_pack_local[(6)] + d[(6)]);
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(7)] * -1.500000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(8)] * -2.000000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(9)] * 1.500000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + d[(10)]);
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(12)] * -2.500000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + ((d[(13)] * -2.500000e+00f) * -1.500000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + ((d[(14)] * -2.500000e+00f) * -2.000000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + ((d[(15)] * -2.500000e+00f) * 1.500000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(16)] * -2.500000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(18)] * 5.000000e-01f));
  data_pack_local[(6)] = (data_pack_local[(6)] + ((d[(19)] * 5.000000e-01f) * -1.500000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + ((d[(20)] * 5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + ((d[(21)] * 5.000000e-01f) * 1.500000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(22)] * 5.000000e-01f));
  data_pack_local[(6)] = (data_pack_local[(6)] + d[(24)]);
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(25)] * -1.500000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(26)] * -2.000000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(27)] * 1.500000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + d[(28)]);
  data_pack_local[(7)] = 0.000000e+00f;
  data_pack_local[(7)] = (data_pack_local[(7)] + d[(7)]);
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(8)] * -2.500000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(9)] * 5.000000e-01f));
  data_pack_local[(7)] = (data_pack_local[(7)] + d[(10)]);
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(13)] * -2.500000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + ((d[(14)] * -2.500000e+00f) * -2.500000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + ((d[(15)] * -2.500000e+00f) * 5.000000e-01f));
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(16)] * -2.500000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(19)] * 5.000000e-01f));
  data_pack_local[(7)] = (data_pack_local[(7)] + ((d[(20)] * 5.000000e-01f) * -2.500000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + ((d[(21)] * 5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(22)] * 5.000000e-01f));
  data_pack_local[(7)] = (data_pack_local[(7)] + d[(25)]);
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(26)] * -2.500000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(27)] * 5.000000e-01f));
  data_pack_local[(7)] = (data_pack_local[(7)] + d[(28)]);
  data_pack_local[(8)] = 0.000000e+00f;
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(7)] * -1.000000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(8)] * 5.000000e-01f));
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(9)] * 2.500000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + d[(10)]);
  data_pack_local[(8)] = (data_pack_local[(8)] + ((d[(13)] * -2.500000e+00f) * -1.000000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + ((d[(14)] * -2.500000e+00f) * 5.000000e-01f));
  data_pack_local[(8)] = (data_pack_local[(8)] + ((d[(15)] * -2.500000e+00f) * 2.500000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(16)] * -2.500000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + ((d[(19)] * 5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + ((d[(20)] * 5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(8)] = (data_pack_local[(8)] + ((d[(21)] * 5.000000e-01f) * 2.500000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(22)] * 5.000000e-01f));
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(25)] * -1.000000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(26)] * 5.000000e-01f));
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(27)] * 2.500000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + d[(28)]);
  data_pack_local[(9)] = 0.000000e+00f;
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(7)] * -2.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(8)] * -1.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(9)] * 2.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + d[(10)]);
  data_pack_local[(9)] = (data_pack_local[(9)] + ((d[(13)] * -2.500000e+00f) * -2.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + ((d[(14)] * -2.500000e+00f) * -1.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + ((d[(15)] * -2.500000e+00f) * 2.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(16)] * -2.500000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + ((d[(19)] * 5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + ((d[(20)] * 5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + ((d[(21)] * 5.000000e-01f) * 2.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(22)] * 5.000000e-01f));
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(25)] * -2.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(26)] * -1.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(27)] * 2.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + d[(28)]);
  data_pack_local[(10)] = 0.000000e+00f;
  data_pack_local[(10)] = (data_pack_local[(10)] + (d[(7)] * 5.000000e-01f));
  data_pack_local[(10)] = (data_pack_local[(10)] + (d[(8)] * -1.000000e+00f));
  data_pack_local[(10)] = (data_pack_local[(10)] + (d[(9)] * -5.000000e-01f));
  data_pack_local[(10)] = (data_pack_local[(10)] + d[(10)]);
  data_pack_local[(10)] = (data_pack_local[(10)] + ((d[(13)] * -2.500000e+00f) * 5.000000e-01f));
  data_pack_local[(10)] = (data_pack_local[(10)] + ((d[(14)] * -2.500000e+00f) * -1.000000e+00f));
  data_pack_local[(10)] = (data_pack_local[(10)] + ((d[(15)] * -2.500000e+00f) * -5.000000e-01f));
  data_pack_local[(10)] = (data_pack_local[(10)] + (d[(16)] * -2.500000e+00f));
  data_pack_local[(10)] = (data_pack_local[(10)] + ((d[(19)] * 5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(10)] = (data_pack_local[(10)] + ((d[(20)] * 5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(10)] = (data_pack_local[(10)] + ((d[(21)] * 5.000000e-01f) * -5.000000e-01f));
  data_pack_local[(10)] = (data_pack_local[(10)] + (d[(22)] * 5.000000e-01f));
  data_pack_local[(10)] = (data_pack_local[(10)] + (d[(25)] * 5.000000e-01f));
  data_pack_local[(10)] = (data_pack_local[(10)] + (d[(26)] * -1.000000e+00f));
  data_pack_local[(10)] = (data_pack_local[(10)] + (d[(27)] * -5.000000e-01f));
  data_pack_local[(10)] = (data_pack_local[(10)] + d[(28)]);
  data_pack_local[(11)] = 0.000000e+00f;
  data_pack_local[(11)] = (data_pack_local[(11)] + d[(7)]);
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(8)] * -1.500000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(9)] * -2.000000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(10)] * 1.500000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + d[(11)]);
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(13)] * -2.500000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + ((d[(14)] * -2.500000e+00f) * -1.500000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + ((d[(15)] * -2.500000e+00f) * -2.000000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + ((d[(16)] * -2.500000e+00f) * 1.500000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(17)] * -2.500000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(19)] * 5.000000e-01f));
  data_pack_local[(11)] = (data_pack_local[(11)] + ((d[(20)] * 5.000000e-01f) * -1.500000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + ((d[(21)] * 5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + ((d[(22)] * 5.000000e-01f) * 1.500000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(23)] * 5.000000e-01f));
  data_pack_local[(11)] = (data_pack_local[(11)] + d[(25)]);
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(26)] * -1.500000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(27)] * -2.000000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(28)] * 1.500000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + d[(29)]);
  data_pack_local[(12)] = 0.000000e+00f;
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(6)] * -1.000000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(7)] * -1.000000e+00f) * -1.500000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(8)] * -1.000000e+00f) * -2.000000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(9)] * -1.000000e+00f) * 1.500000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(12)] * 5.000000e-01f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(13)] * 5.000000e-01f) * -1.500000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(14)] * 5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(15)] * 5.000000e-01f) * 1.500000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(16)] * 5.000000e-01f));
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(18)] * 2.500000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(19)] * 2.500000e+00f) * -1.500000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(20)] * 2.500000e+00f) * -2.000000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(21)] * 2.500000e+00f) * 1.500000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(22)] * 2.500000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + d[(24)]);
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(25)] * -1.500000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(26)] * -2.000000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(27)] * 1.500000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + d[(28)]);
  data_pack_local[(13)] = 0.000000e+00f;
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(7)] * -1.000000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + ((d[(8)] * -1.000000e+00f) * -2.500000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + ((d[(9)] * -1.000000e+00f) * 5.000000e-01f));
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(13)] * 5.000000e-01f));
  data_pack_local[(13)] = (data_pack_local[(13)] + ((d[(14)] * 5.000000e-01f) * -2.500000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + ((d[(15)] * 5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(16)] * 5.000000e-01f));
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(19)] * 2.500000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + ((d[(20)] * 2.500000e+00f) * -2.500000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + ((d[(21)] * 2.500000e+00f) * 5.000000e-01f));
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(22)] * 2.500000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + d[(25)]);
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(26)] * -2.500000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(27)] * 5.000000e-01f));
  data_pack_local[(13)] = (data_pack_local[(13)] + d[(28)]);
  data_pack_local[(14)] = 0.000000e+00f;
  data_pack_local[(14)] = (data_pack_local[(14)] + ((d[(7)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + ((d[(8)] * -1.000000e+00f) * 5.000000e-01f));
  data_pack_local[(14)] = (data_pack_local[(14)] + ((d[(9)] * -1.000000e+00f) * 2.500000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + ((d[(13)] * 5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + ((d[(14)] * 5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(14)] = (data_pack_local[(14)] + ((d[(15)] * 5.000000e-01f) * 2.500000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + (d[(16)] * 5.000000e-01f));
  data_pack_local[(14)] = (data_pack_local[(14)] + ((d[(19)] * 2.500000e+00f) * -1.000000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + ((d[(20)] * 2.500000e+00f) * 5.000000e-01f));
  data_pack_local[(14)] = (data_pack_local[(14)] + ((d[(21)] * 2.500000e+00f) * 2.500000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + (d[(22)] * 2.500000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + (d[(25)] * -1.000000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + (d[(26)] * 5.000000e-01f));
  data_pack_local[(14)] = (data_pack_local[(14)] + (d[(27)] * 2.500000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + d[(28)]);
  data_pack_local[(15)] = 0.000000e+00f;
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(7)] * -1.000000e+00f) * -2.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(8)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(9)] * -1.000000e+00f) * 2.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(13)] * 5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(14)] * 5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(15)] * 5.000000e-01f) * 2.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + (d[(16)] * 5.000000e-01f));
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(19)] * 2.500000e+00f) * -2.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(20)] * 2.500000e+00f) * -1.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(21)] * 2.500000e+00f) * 2.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + (d[(22)] * 2.500000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + (d[(25)] * -2.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + (d[(26)] * -1.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + (d[(27)] * 2.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + d[(28)]);
  data_pack_local[(16)] = 0.000000e+00f;
  data_pack_local[(16)] = (data_pack_local[(16)] + ((d[(7)] * -1.000000e+00f) * 5.000000e-01f));
  data_pack_local[(16)] = (data_pack_local[(16)] + ((d[(8)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(16)] = (data_pack_local[(16)] + ((d[(9)] * -1.000000e+00f) * -5.000000e-01f));
  data_pack_local[(16)] = (data_pack_local[(16)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(16)] = (data_pack_local[(16)] + ((d[(13)] * 5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(16)] = (data_pack_local[(16)] + ((d[(14)] * 5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(16)] = (data_pack_local[(16)] + ((d[(15)] * 5.000000e-01f) * -5.000000e-01f));
  data_pack_local[(16)] = (data_pack_local[(16)] + (d[(16)] * 5.000000e-01f));
  data_pack_local[(16)] = (data_pack_local[(16)] + ((d[(19)] * 2.500000e+00f) * 5.000000e-01f));
  data_pack_local[(16)] = (data_pack_local[(16)] + ((d[(20)] * 2.500000e+00f) * -1.000000e+00f));
  data_pack_local[(16)] = (data_pack_local[(16)] + ((d[(21)] * 2.500000e+00f) * -5.000000e-01f));
  data_pack_local[(16)] = (data_pack_local[(16)] + (d[(22)] * 2.500000e+00f));
  data_pack_local[(16)] = (data_pack_local[(16)] + (d[(25)] * 5.000000e-01f));
  data_pack_local[(16)] = (data_pack_local[(16)] + (d[(26)] * -1.000000e+00f));
  data_pack_local[(16)] = (data_pack_local[(16)] + (d[(27)] * -5.000000e-01f));
  data_pack_local[(16)] = (data_pack_local[(16)] + d[(28)]);
  data_pack_local[(17)] = 0.000000e+00f;
  data_pack_local[(17)] = (data_pack_local[(17)] + (d[(7)] * -1.000000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + ((d[(8)] * -1.000000e+00f) * -1.500000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + ((d[(9)] * -1.000000e+00f) * -2.000000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + ((d[(10)] * -1.000000e+00f) * 1.500000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + (d[(11)] * -1.000000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + (d[(13)] * 5.000000e-01f));
  data_pack_local[(17)] = (data_pack_local[(17)] + ((d[(14)] * 5.000000e-01f) * -1.500000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + ((d[(15)] * 5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + ((d[(16)] * 5.000000e-01f) * 1.500000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + (d[(17)] * 5.000000e-01f));
  data_pack_local[(17)] = (data_pack_local[(17)] + (d[(19)] * 2.500000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + ((d[(20)] * 2.500000e+00f) * -1.500000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + ((d[(21)] * 2.500000e+00f) * -2.000000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + ((d[(22)] * 2.500000e+00f) * 1.500000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + (d[(23)] * 2.500000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + d[(25)]);
  data_pack_local[(17)] = (data_pack_local[(17)] + (d[(26)] * -1.500000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + (d[(27)] * -2.000000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + (d[(28)] * 1.500000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + d[(29)]);
  data_pack_local[(18)] = 0.000000e+00f;
  data_pack_local[(18)] = (data_pack_local[(18)] + (d[(6)] * -2.000000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + ((d[(7)] * -2.000000e+00f) * -1.500000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + ((d[(8)] * -2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + ((d[(9)] * -2.000000e+00f) * 1.500000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + (d[(10)] * -2.000000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + (d[(12)] * -1.000000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + ((d[(13)] * -1.000000e+00f) * -1.500000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + ((d[(14)] * -1.000000e+00f) * -2.000000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + ((d[(15)] * -1.000000e+00f) * 1.500000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + (d[(16)] * -1.000000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + (d[(18)] * 2.000000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + ((d[(19)] * 2.000000e+00f) * -1.500000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + ((d[(20)] * 2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + ((d[(21)] * 2.000000e+00f) * 1.500000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + (d[(22)] * 2.000000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + d[(24)]);
  data_pack_local[(18)] = (data_pack_local[(18)] + (d[(25)] * -1.500000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + (d[(26)] * -2.000000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + (d[(27)] * 1.500000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + d[(28)]);
  data_pack_local[(19)] = 0.000000e+00f;
  data_pack_local[(19)] = (data_pack_local[(19)] + (d[(7)] * -2.000000e+00f));
  data_pack_local[(19)] = (data_pack_local[(19)] + ((d[(8)] * -2.000000e+00f) * -2.500000e+00f));
  data_pack_local[(19)] = (data_pack_local[(19)] + ((d[(9)] * -2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(19)] = (data_pack_local[(19)] + (d[(10)] * -2.000000e+00f));
  data_pack_local[(19)] = (data_pack_local[(19)] + (d[(13)] * -1.000000e+00f));
  data_pack_local[(19)] = (data_pack_local[(19)] + ((d[(14)] * -1.000000e+00f) * -2.500000e+00f));
  data_pack_local[(19)] = (data_pack_local[(19)] + ((d[(15)] * -1.000000e+00f) * 5.000000e-01f));
  data_pack_local[(19)] = (data_pack_local[(19)] + (d[(16)] * -1.000000e+00f));
  data_pack_local[(19)] = (data_pack_local[(19)] + (d[(19)] * 2.000000e+00f));
  data_pack_local[(19)] = (data_pack_local[(19)] + ((d[(20)] * 2.000000e+00f) * -2.500000e+00f));
  data_pack_local[(19)] = (data_pack_local[(19)] + ((d[(21)] * 2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(19)] = (data_pack_local[(19)] + (d[(22)] * 2.000000e+00f));
  data_pack_local[(19)] = (data_pack_local[(19)] + d[(25)]);
  data_pack_local[(19)] = (data_pack_local[(19)] + (d[(26)] * -2.500000e+00f));
  data_pack_local[(19)] = (data_pack_local[(19)] + (d[(27)] * 5.000000e-01f));
  data_pack_local[(19)] = (data_pack_local[(19)] + d[(28)]);
  data_pack_local[(20)] = 0.000000e+00f;
  data_pack_local[(20)] = (data_pack_local[(20)] + ((d[(7)] * -2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + ((d[(8)] * -2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(20)] = (data_pack_local[(20)] + ((d[(9)] * -2.000000e+00f) * 2.500000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + (d[(10)] * -2.000000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + ((d[(13)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + ((d[(14)] * -1.000000e+00f) * 5.000000e-01f));
  data_pack_local[(20)] = (data_pack_local[(20)] + ((d[(15)] * -1.000000e+00f) * 2.500000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + (d[(16)] * -1.000000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + ((d[(19)] * 2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + ((d[(20)] * 2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(20)] = (data_pack_local[(20)] + ((d[(21)] * 2.000000e+00f) * 2.500000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + (d[(22)] * 2.000000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + (d[(25)] * -1.000000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + (d[(26)] * 5.000000e-01f));
  data_pack_local[(20)] = (data_pack_local[(20)] + (d[(27)] * 2.500000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + d[(28)]);
  data_pack_local[(21)] = 0.000000e+00f;
  data_pack_local[(21)] = (data_pack_local[(21)] + ((d[(7)] * -2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + ((d[(8)] * -2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + ((d[(9)] * -2.000000e+00f) * 2.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + (d[(10)] * -2.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + ((d[(13)] * -1.000000e+00f) * -2.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + ((d[(14)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + ((d[(15)] * -1.000000e+00f) * 2.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + (d[(16)] * -1.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + ((d[(19)] * 2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + ((d[(20)] * 2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + ((d[(21)] * 2.000000e+00f) * 2.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + (d[(22)] * 2.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + (d[(25)] * -2.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + (d[(26)] * -1.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + (d[(27)] * 2.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + d[(28)]);
  data_pack_local[(22)] = 0.000000e+00f;
  data_pack_local[(22)] = (data_pack_local[(22)] + ((d[(7)] * -2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(22)] = (data_pack_local[(22)] + ((d[(8)] * -2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(22)] = (data_pack_local[(22)] + ((d[(9)] * -2.000000e+00f) * -5.000000e-01f));
  data_pack_local[(22)] = (data_pack_local[(22)] + (d[(10)] * -2.000000e+00f));
  data_pack_local[(22)] = (data_pack_local[(22)] + ((d[(13)] * -1.000000e+00f) * 5.000000e-01f));
  data_pack_local[(22)] = (data_pack_local[(22)] + ((d[(14)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(22)] = (data_pack_local[(22)] + ((d[(15)] * -1.000000e+00f) * -5.000000e-01f));
  data_pack_local[(22)] = (data_pack_local[(22)] + (d[(16)] * -1.000000e+00f));
  data_pack_local[(22)] = (data_pack_local[(22)] + ((d[(19)] * 2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(22)] = (data_pack_local[(22)] + ((d[(20)] * 2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(22)] = (data_pack_local[(22)] + ((d[(21)] * 2.000000e+00f) * -5.000000e-01f));
  data_pack_local[(22)] = (data_pack_local[(22)] + (d[(22)] * 2.000000e+00f));
  data_pack_local[(22)] = (data_pack_local[(22)] + (d[(25)] * 5.000000e-01f));
  data_pack_local[(22)] = (data_pack_local[(22)] + (d[(26)] * -1.000000e+00f));
  data_pack_local[(22)] = (data_pack_local[(22)] + (d[(27)] * -5.000000e-01f));
  data_pack_local[(22)] = (data_pack_local[(22)] + d[(28)]);
  data_pack_local[(23)] = 0.000000e+00f;
  data_pack_local[(23)] = (data_pack_local[(23)] + (d[(7)] * -2.000000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + ((d[(8)] * -2.000000e+00f) * -1.500000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + ((d[(9)] * -2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + ((d[(10)] * -2.000000e+00f) * 1.500000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + (d[(11)] * -2.000000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + (d[(13)] * -1.000000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + ((d[(14)] * -1.000000e+00f) * -1.500000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + ((d[(15)] * -1.000000e+00f) * -2.000000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + ((d[(16)] * -1.000000e+00f) * 1.500000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + (d[(17)] * -1.000000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + (d[(19)] * 2.000000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + ((d[(20)] * 2.000000e+00f) * -1.500000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + ((d[(21)] * 2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + ((d[(22)] * 2.000000e+00f) * 1.500000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + (d[(23)] * 2.000000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + d[(25)]);
  data_pack_local[(23)] = (data_pack_local[(23)] + (d[(26)] * -1.500000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + (d[(27)] * -2.000000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + (d[(28)] * 1.500000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + d[(29)]);
  data_pack_local[(24)] = 0.000000e+00f;
  data_pack_local[(24)] = (data_pack_local[(24)] + (d[(6)] * 5.000000e-01f));
  data_pack_local[(24)] = (data_pack_local[(24)] + ((d[(7)] * 5.000000e-01f) * -1.500000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + ((d[(8)] * 5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + ((d[(9)] * 5.000000e-01f) * 1.500000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + (d[(10)] * 5.000000e-01f));
  data_pack_local[(24)] = (data_pack_local[(24)] + (d[(12)] * -1.000000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + ((d[(13)] * -1.000000e+00f) * -1.500000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + ((d[(14)] * -1.000000e+00f) * -2.000000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + ((d[(15)] * -1.000000e+00f) * 1.500000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + (d[(16)] * -1.000000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + (d[(18)] * -5.000000e-01f));
  data_pack_local[(24)] = (data_pack_local[(24)] + ((d[(19)] * -5.000000e-01f) * -1.500000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + ((d[(20)] * -5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + ((d[(21)] * -5.000000e-01f) * 1.500000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + (d[(22)] * -5.000000e-01f));
  data_pack_local[(24)] = (data_pack_local[(24)] + d[(24)]);
  data_pack_local[(24)] = (data_pack_local[(24)] + (d[(25)] * -1.500000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + (d[(26)] * -2.000000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + (d[(27)] * 1.500000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + d[(28)]);
  data_pack_local[(25)] = 0.000000e+00f;
  data_pack_local[(25)] = (data_pack_local[(25)] + (d[(7)] * 5.000000e-01f));
  data_pack_local[(25)] = (data_pack_local[(25)] + ((d[(8)] * 5.000000e-01f) * -2.500000e+00f));
  data_pack_local[(25)] = (data_pack_local[(25)] + ((d[(9)] * 5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(25)] = (data_pack_local[(25)] + (d[(10)] * 5.000000e-01f));
  data_pack_local[(25)] = (data_pack_local[(25)] + (d[(13)] * -1.000000e+00f));
  data_pack_local[(25)] = (data_pack_local[(25)] + ((d[(14)] * -1.000000e+00f) * -2.500000e+00f));
  data_pack_local[(25)] = (data_pack_local[(25)] + ((d[(15)] * -1.000000e+00f) * 5.000000e-01f));
  data_pack_local[(25)] = (data_pack_local[(25)] + (d[(16)] * -1.000000e+00f));
  data_pack_local[(25)] = (data_pack_local[(25)] + (d[(19)] * -5.000000e-01f));
  data_pack_local[(25)] = (data_pack_local[(25)] + ((d[(20)] * -5.000000e-01f) * -2.500000e+00f));
  data_pack_local[(25)] = (data_pack_local[(25)] + ((d[(21)] * -5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(25)] = (data_pack_local[(25)] + (d[(22)] * -5.000000e-01f));
  data_pack_local[(25)] = (data_pack_local[(25)] + d[(25)]);
  data_pack_local[(25)] = (data_pack_local[(25)] + (d[(26)] * -2.500000e+00f));
  data_pack_local[(25)] = (data_pack_local[(25)] + (d[(27)] * 5.000000e-01f));
  data_pack_local[(25)] = (data_pack_local[(25)] + d[(28)]);
  data_pack_local[(26)] = 0.000000e+00f;
  data_pack_local[(26)] = (data_pack_local[(26)] + ((d[(7)] * 5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(26)] = (data_pack_local[(26)] + ((d[(8)] * 5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(26)] = (data_pack_local[(26)] + ((d[(9)] * 5.000000e-01f) * 2.500000e+00f));
  data_pack_local[(26)] = (data_pack_local[(26)] + (d[(10)] * 5.000000e-01f));
  data_pack_local[(26)] = (data_pack_local[(26)] + ((d[(13)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(26)] = (data_pack_local[(26)] + ((d[(14)] * -1.000000e+00f) * 5.000000e-01f));
  data_pack_local[(26)] = (data_pack_local[(26)] + ((d[(15)] * -1.000000e+00f) * 2.500000e+00f));
  data_pack_local[(26)] = (data_pack_local[(26)] + (d[(16)] * -1.000000e+00f));
  data_pack_local[(26)] = (data_pack_local[(26)] + ((d[(19)] * -5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(26)] = (data_pack_local[(26)] + ((d[(20)] * -5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(26)] = (data_pack_local[(26)] + ((d[(21)] * -5.000000e-01f) * 2.500000e+00f));
  data_pack_local[(26)] = (data_pack_local[(26)] + (d[(22)] * -5.000000e-01f));
  data_pack_local[(26)] = (data_pack_local[(26)] + (d[(25)] * -1.000000e+00f));
  data_pack_local[(26)] = (data_pack_local[(26)] + (d[(26)] * 5.000000e-01f));
  data_pack_local[(26)] = (data_pack_local[(26)] + (d[(27)] * 2.500000e+00f));
  data_pack_local[(26)] = (data_pack_local[(26)] + d[(28)]);
  data_pack_local[(27)] = 0.000000e+00f;
  data_pack_local[(27)] = (data_pack_local[(27)] + ((d[(7)] * 5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + ((d[(8)] * 5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + ((d[(9)] * 5.000000e-01f) * 2.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + (d[(10)] * 5.000000e-01f));
  data_pack_local[(27)] = (data_pack_local[(27)] + ((d[(13)] * -1.000000e+00f) * -2.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + ((d[(14)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + ((d[(15)] * -1.000000e+00f) * 2.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + (d[(16)] * -1.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + ((d[(19)] * -5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + ((d[(20)] * -5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + ((d[(21)] * -5.000000e-01f) * 2.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + (d[(22)] * -5.000000e-01f));
  data_pack_local[(27)] = (data_pack_local[(27)] + (d[(25)] * -2.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + (d[(26)] * -1.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + (d[(27)] * 2.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + d[(28)]);
  data_pack_local[(28)] = 0.000000e+00f;
  data_pack_local[(28)] = (data_pack_local[(28)] + ((d[(7)] * 5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(28)] = (data_pack_local[(28)] + ((d[(8)] * 5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(28)] = (data_pack_local[(28)] + ((d[(9)] * 5.000000e-01f) * -5.000000e-01f));
  data_pack_local[(28)] = (data_pack_local[(28)] + (d[(10)] * 5.000000e-01f));
  data_pack_local[(28)] = (data_pack_local[(28)] + ((d[(13)] * -1.000000e+00f) * 5.000000e-01f));
  data_pack_local[(28)] = (data_pack_local[(28)] + ((d[(14)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(28)] = (data_pack_local[(28)] + ((d[(15)] * -1.000000e+00f) * -5.000000e-01f));
  data_pack_local[(28)] = (data_pack_local[(28)] + (d[(16)] * -1.000000e+00f));
  data_pack_local[(28)] = (data_pack_local[(28)] + ((d[(19)] * -5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(28)] = (data_pack_local[(28)] + ((d[(20)] * -5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(28)] = (data_pack_local[(28)] + ((d[(21)] * -5.000000e-01f) * -5.000000e-01f));
  data_pack_local[(28)] = (data_pack_local[(28)] + (d[(22)] * -5.000000e-01f));
  data_pack_local[(28)] = (data_pack_local[(28)] + (d[(25)] * 5.000000e-01f));
  data_pack_local[(28)] = (data_pack_local[(28)] + (d[(26)] * -1.000000e+00f));
  data_pack_local[(28)] = (data_pack_local[(28)] + (d[(27)] * -5.000000e-01f));
  data_pack_local[(28)] = (data_pack_local[(28)] + d[(28)]);
  data_pack_local[(29)] = 0.000000e+00f;
  data_pack_local[(29)] = (data_pack_local[(29)] + (d[(7)] * 5.000000e-01f));
  data_pack_local[(29)] = (data_pack_local[(29)] + ((d[(8)] * 5.000000e-01f) * -1.500000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + ((d[(9)] * 5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + ((d[(10)] * 5.000000e-01f) * 1.500000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + (d[(11)] * 5.000000e-01f));
  data_pack_local[(29)] = (data_pack_local[(29)] + (d[(13)] * -1.000000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + ((d[(14)] * -1.000000e+00f) * -1.500000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + ((d[(15)] * -1.000000e+00f) * -2.000000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + ((d[(16)] * -1.000000e+00f) * 1.500000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + (d[(17)] * -1.000000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + (d[(19)] * -5.000000e-01f));
  data_pack_local[(29)] = (data_pack_local[(29)] + ((d[(20)] * -5.000000e-01f) * -1.500000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + ((d[(21)] * -5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + ((d[(22)] * -5.000000e-01f) * 1.500000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + (d[(23)] * -5.000000e-01f));
  data_pack_local[(29)] = (data_pack_local[(29)] + d[(25)]);
  data_pack_local[(29)] = (data_pack_local[(29)] + (d[(26)] * -1.500000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + (d[(27)] * -2.000000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + (d[(28)] * 1.500000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + d[(29)]);
  data_pack_local[(30)] = 0.000000e+00f;
  data_pack_local[(30)] = (data_pack_local[(30)] + d[(6)]);
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(7)] * -1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(8)] * -2.000000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(9)] * 1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + d[(10)]);
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(12)] * -1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + ((d[(13)] * -1.500000e+00f) * -1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + ((d[(14)] * -1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + ((d[(15)] * -1.500000e+00f) * 1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(16)] * -1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(18)] * -2.000000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + ((d[(19)] * -2.000000e+00f) * -1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + ((d[(20)] * -2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + ((d[(21)] * -2.000000e+00f) * 1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(22)] * -2.000000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(24)] * 1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + ((d[(25)] * 1.500000e+00f) * -1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + ((d[(26)] * 1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + ((d[(27)] * 1.500000e+00f) * 1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(28)] * 1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + d[(30)]);
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(31)] * -1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(32)] * -2.000000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(33)] * 1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + d[(34)]);
  data_pack_local[(31)] = 0.000000e+00f;
  data_pack_local[(31)] = (data_pack_local[(31)] + d[(7)]);
  data_pack_local[(31)] = (data_pack_local[(31)] + (d[(8)] * -2.500000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + (d[(9)] * 5.000000e-01f));
  data_pack_local[(31)] = (data_pack_local[(31)] + d[(10)]);
  data_pack_local[(31)] = (data_pack_local[(31)] + (d[(13)] * -1.500000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + ((d[(14)] * -1.500000e+00f) * -2.500000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + ((d[(15)] * -1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(31)] = (data_pack_local[(31)] + (d[(16)] * -1.500000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + (d[(19)] * -2.000000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + ((d[(20)] * -2.000000e+00f) * -2.500000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + ((d[(21)] * -2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(31)] = (data_pack_local[(31)] + (d[(22)] * -2.000000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + (d[(25)] * 1.500000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + ((d[(26)] * 1.500000e+00f) * -2.500000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + ((d[(27)] * 1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(31)] = (data_pack_local[(31)] + (d[(28)] * 1.500000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + d[(31)]);
  data_pack_local[(31)] = (data_pack_local[(31)] + (d[(32)] * -2.500000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + (d[(33)] * 5.000000e-01f));
  data_pack_local[(31)] = (data_pack_local[(31)] + d[(34)]);
  data_pack_local[(32)] = 0.000000e+00f;
  data_pack_local[(32)] = (data_pack_local[(32)] + (d[(7)] * -1.000000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + (d[(8)] * 5.000000e-01f));
  data_pack_local[(32)] = (data_pack_local[(32)] + (d[(9)] * 2.500000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + d[(10)]);
  data_pack_local[(32)] = (data_pack_local[(32)] + ((d[(13)] * -1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + ((d[(14)] * -1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(32)] = (data_pack_local[(32)] + ((d[(15)] * -1.500000e+00f) * 2.500000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + (d[(16)] * -1.500000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + ((d[(19)] * -2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + ((d[(20)] * -2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(32)] = (data_pack_local[(32)] + ((d[(21)] * -2.000000e+00f) * 2.500000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + (d[(22)] * -2.000000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + ((d[(25)] * 1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + ((d[(26)] * 1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(32)] = (data_pack_local[(32)] + ((d[(27)] * 1.500000e+00f) * 2.500000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + (d[(28)] * 1.500000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + (d[(31)] * -1.000000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + (d[(32)] * 5.000000e-01f));
  data_pack_local[(32)] = (data_pack_local[(32)] + (d[(33)] * 2.500000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + d[(34)]);
  data_pack_local[(33)] = 0.000000e+00f;
  data_pack_local[(33)] = (data_pack_local[(33)] + (d[(7)] * -2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + (d[(8)] * -1.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + (d[(9)] * 2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + d[(10)]);
  data_pack_local[(33)] = (data_pack_local[(33)] + ((d[(13)] * -1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + ((d[(14)] * -1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + ((d[(15)] * -1.500000e+00f) * 2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + (d[(16)] * -1.500000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + ((d[(19)] * -2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + ((d[(20)] * -2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + ((d[(21)] * -2.000000e+00f) * 2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + (d[(22)] * -2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + ((d[(25)] * 1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + ((d[(26)] * 1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + ((d[(27)] * 1.500000e+00f) * 2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + (d[(28)] * 1.500000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + (d[(31)] * -2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + (d[(32)] * -1.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + (d[(33)] * 2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + d[(34)]);
  data_pack_local[(34)] = 0.000000e+00f;
  data_pack_local[(34)] = (data_pack_local[(34)] + (d[(7)] * 5.000000e-01f));
  data_pack_local[(34)] = (data_pack_local[(34)] + (d[(8)] * -1.000000e+00f));
  data_pack_local[(34)] = (data_pack_local[(34)] + (d[(9)] * -5.000000e-01f));
  data_pack_local[(34)] = (data_pack_local[(34)] + d[(10)]);
  data_pack_local[(34)] = (data_pack_local[(34)] + ((d[(13)] * -1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(34)] = (data_pack_local[(34)] + ((d[(14)] * -1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(34)] = (data_pack_local[(34)] + ((d[(15)] * -1.500000e+00f) * -5.000000e-01f));
  data_pack_local[(34)] = (data_pack_local[(34)] + (d[(16)] * -1.500000e+00f));
  data_pack_local[(34)] = (data_pack_local[(34)] + ((d[(19)] * -2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(34)] = (data_pack_local[(34)] + ((d[(20)] * -2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(34)] = (data_pack_local[(34)] + ((d[(21)] * -2.000000e+00f) * -5.000000e-01f));
  data_pack_local[(34)] = (data_pack_local[(34)] + (d[(22)] * -2.000000e+00f));
  data_pack_local[(34)] = (data_pack_local[(34)] + ((d[(25)] * 1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(34)] = (data_pack_local[(34)] + ((d[(26)] * 1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(34)] = (data_pack_local[(34)] + ((d[(27)] * 1.500000e+00f) * -5.000000e-01f));
  data_pack_local[(34)] = (data_pack_local[(34)] + (d[(28)] * 1.500000e+00f));
  data_pack_local[(34)] = (data_pack_local[(34)] + (d[(31)] * 5.000000e-01f));
  data_pack_local[(34)] = (data_pack_local[(34)] + (d[(32)] * -1.000000e+00f));
  data_pack_local[(34)] = (data_pack_local[(34)] + (d[(33)] * -5.000000e-01f));
  data_pack_local[(34)] = (data_pack_local[(34)] + d[(34)]);
  data_pack_local[(35)] = 0.000000e+00f;
  data_pack_local[(35)] = (data_pack_local[(35)] + d[(7)]);
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(8)] * -1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(9)] * -2.000000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(10)] * 1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + d[(11)]);
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(13)] * -1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + ((d[(14)] * -1.500000e+00f) * -1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + ((d[(15)] * -1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + ((d[(16)] * -1.500000e+00f) * 1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(17)] * -1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(19)] * -2.000000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + ((d[(20)] * -2.000000e+00f) * -1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + ((d[(21)] * -2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + ((d[(22)] * -2.000000e+00f) * 1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(23)] * -2.000000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(25)] * 1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + ((d[(26)] * 1.500000e+00f) * -1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + ((d[(27)] * 1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + ((d[(28)] * 1.500000e+00f) * 1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(29)] * 1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + d[(31)]);
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(32)] * -1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(33)] * -2.000000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(34)] * 1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + d[(35)]);
  for (int eps1 = 0; eps1 < 6; ++eps1) {
    for (int nu1 = 0; nu1 < 6; ++nu1) {
      data_pack[(((((eps1 * 2408448) + (nu1 * 401408)) + (((int)blockIdx.x) * 128)) + ((int)threadIdx.x)))] = data_pack_local[(((eps1 * 6) + nu1))];
    }
  }
}

extern "C" __global__ void fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_kernel2(float* __restrict__ bgemm, void* __restrict__ T_relu, void* __restrict__ placeholder) {
  float inverse[4];
  inverse[(0)] = 0.000000e+00f;
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 262144))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 524288))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 1048576))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 1310720))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 1572864))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 2097152))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 2359296))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 2621440))]);
  inverse[(1)] = 0.000000e+00f;
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 262144))] * -1.000000e+00f));
  inverse[(1)] = (inverse[(1)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 524288))]);
  inverse[(1)] = (inverse[(1)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 786432))]);
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 1310720))] * -1.000000e+00f));
  inverse[(1)] = (inverse[(1)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 1572864))]);
  inverse[(1)] = (inverse[(1)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 1835008))]);
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 2359296))] * -1.000000e+00f));
  inverse[(1)] = (inverse[(1)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 2621440))]);
  inverse[(1)] = (inverse[(1)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 2883584))]);
  inverse[(2)] = 0.000000e+00f;
  inverse[(2)] = (inverse[(2)] + (bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 1048576))] * -1.000000e+00f));
  inverse[(2)] = (inverse[(2)] + (bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 1310720))] * -1.000000e+00f));
  inverse[(2)] = (inverse[(2)] + (bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 1572864))] * -1.000000e+00f));
  inverse[(2)] = (inverse[(2)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 2097152))]);
  inverse[(2)] = (inverse[(2)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 2359296))]);
  inverse[(2)] = (inverse[(2)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 2621440))]);
  inverse[(2)] = (inverse[(2)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 3145728))]);
  inverse[(2)] = (inverse[(2)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 3407872))]);
  inverse[(2)] = (inverse[(2)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 3670016))]);
  inverse[(3)] = 0.000000e+00f;
  inverse[(3)] = (inverse[(3)] + ((bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 1310720))] * -1.000000e+00f) * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 1572864))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 1835008))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 2359296))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 2621440))]);
  inverse[(3)] = (inverse[(3)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 2883584))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 3407872))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 3670016))]);
  inverse[(3)] = (inverse[(3)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 3932160))]);
  for (int ax2_inner = 0; ax2_inner < 2; ++ax2_inner) {
    for (int ax3_inner = 0; ax3_inner < 2; ++ax3_inner) {
      if (((((((int)threadIdx.x) & 15) >> 2) * 2) + ax2_inner) < 7) {
        if ((((((int)threadIdx.x) & 3) * 2) + ax3_inner) < 7) {
          ((float*)T_relu)[(((((((((int)blockIdx.x) * 392) + ((((int)threadIdx.x) >> 4) * 49)) + (((((int)threadIdx.x) & 15) >> 2) * 14)) + (ax2_inner * 7)) + ((((int)threadIdx.x) & 3) * 2)) + ax3_inner))] = max((float)((inverse[(((ax2_inner * 2) + ax3_inner))] + ((float*)placeholder)[((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511))])), (float)(0.000000e+00f));
        }
      }
    }
  }
}

extern "C" __global__ void fused_nn_conv2d_add_add_nn_relu_1_kernel0(void* __restrict__ placeholder, void* __restrict__ placeholder1, void* __restrict__ T_relu, void* __restrict__ placeholder2, void* __restrict__ placeholder3) {
  float compute[112];
  __shared__ float pad_temp_shared[2808];
  __shared__ float placeholder_shared[2048];
  #pragma unroll
  for (int ff_init = 0; ff_init < 16; ++ff_init) {
    #pragma unroll
    for (int yy_init = 0; yy_init < 7; ++yy_init) {
      compute[(((ff_init * 7) + yy_init))] = 0.000000e+00f;
    }
  }
  for (int rc_outer = 0; rc_outer < 16; ++rc_outer) {
    __syncthreads();
    #pragma unroll
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 13; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {
      if ((((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) < 2808) {
        if (((((int)threadIdx.x) * 13) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) < 176) {
          pad_temp_shared[((((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner))] = ((float*)placeholder)[(((((((((int)blockIdx.z) * 100352) + (rc_outer * 6272)) + (((((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) / 351) * 784)) + (((int)blockIdx.y) * 392)) + ((((((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) % 351) / 27) * 28)) + ((((((int)threadIdx.z) * 176) + (((int)threadIdx.x) * 13)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) % 27)))];
        }
      }
    }
    #pragma unroll
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 < 10; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) {
      if (((((int)threadIdx.z) * 16) + (((((int)threadIdx.x) * 10) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) >> 3)) < 256) {
        if ((((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 10)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 2048) {
          if (((((int)threadIdx.x) * 10) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 128) {
            placeholder_shared[((((((int)threadIdx.z) * 128) + (((int)threadIdx.x) * 10)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1))] = ((float*)placeholder1)[(((((((int)threadIdx.z) * 2048) + ((((((int)threadIdx.x) * 10) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) >> 3) * 128)) + (rc_outer * 8)) + (((((int)threadIdx.x) * 10) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) & 7)))];
          }
        }
      }
    }
    __syncthreads();
    #pragma unroll
    for (int rc_inner = 0; rc_inner < 8; ++rc_inner) {
      #pragma unroll
      for (int ff = 0; ff < 16; ++ff) {
        #pragma unroll
        for (int yy = 0; yy < 7; ++yy) {
          compute[(((ff * 7) + yy))] = (compute[(((ff * 7) + yy))] + (pad_temp_shared[((((rc_inner * 351) + (yy * 54)) + (((int)threadIdx.x) * 2)))] * placeholder_shared[((((((int)threadIdx.z) * 128) + (ff * 8)) + rc_inner))]));
        }
      }
    }
  }
  #pragma unroll
  for (int ax1_inner_inner_inner = 0; ax1_inner_inner_inner < 16; ++ax1_inner_inner_inner) {
    #pragma unroll
    for (int ax2_inner_inner_inner = 0; ax2_inner_inner_inner < 7; ++ax2_inner_inner_inner) {
      ((float*)T_relu)[(((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 3136)) + (ax1_inner_inner_inner * 196)) + (((int)blockIdx.y) * 98)) + (ax2_inner_inner_inner * 14)) + ((int)threadIdx.x)))] = max((float)(((compute[(((ax1_inner_inner_inner * 7) + ax2_inner_inner_inner))] + ((float*)placeholder2)[(((((int)threadIdx.z) * 16) + ax1_inner_inner_inner))]) + ((float*)placeholder3)[(((((((((int)blockIdx.z) * 50176) + (((int)threadIdx.z) * 3136)) + (ax1_inner_inner_inner * 196)) + (((int)blockIdx.y) * 98)) + (ax2_inner_inner_inner * 14)) + ((int)threadIdx.x)))])), (float)(0.000000e+00f));
    }
  }
}

extern "C" __global__ void fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_kernel0(void* __restrict__ placeholder, float* __restrict__ data_pack) {
  float d[16];
  float data_pack_local[16];
  for (int eps = 0; eps < 4; ++eps) {
    for (int nu = 0; nu < 4; ++nu) {
      d[(((eps * 4) + nu))] = (((((1 <= ((((((int)threadIdx.x) & 15) >> 2) * 2) + eps)) && (((((((int)threadIdx.x) & 15) >> 2) * 2) + eps) < 8)) && (1 <= (((((int)threadIdx.x) & 3) * 2) + nu))) && ((((((int)threadIdx.x) & 3) * 2) + nu) < 8)) ? (float)((float*)placeholder)[((((((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) & 511) >> 4) * 25088) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) >> 9) * 49)) + (((((int)threadIdx.x) & 15) >> 2) * 14)) + (eps * 7)) + ((((int)threadIdx.x) & 3) * 2)) + nu) - 8))] : (float)0.000000e+00f);
    }
  }
  data_pack_local[(0)] = 0.000000e+00f;
  data_pack_local[(0)] = (data_pack_local[(0)] + d[(0)]);
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(2)] * -1.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(8)] * -1.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(10)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(1)] = 0.000000e+00f;
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(1)] * -1.000000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + d[(2)]);
  data_pack_local[(1)] = (data_pack_local[(1)] + ((d[(9)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(2)] = 0.000000e+00f;
  data_pack_local[(2)] = (data_pack_local[(2)] + d[(1)]);
  data_pack_local[(2)] = (data_pack_local[(2)] + d[(2)]);
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(9)] * -1.000000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(3)] = 0.000000e+00f;
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(1)] * -1.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + d[(3)]);
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(9)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(11)] * -1.000000e+00f));
  data_pack_local[(4)] = 0.000000e+00f;
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(4)] * -1.000000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(6)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + d[(8)]);
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(5)] = 0.000000e+00f;
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(5)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(6)] * -1.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(9)] * -1.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + d[(10)]);
  data_pack_local[(6)] = 0.000000e+00f;
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(5)] * -1.000000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(6)] * -1.000000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + d[(9)]);
  data_pack_local[(6)] = (data_pack_local[(6)] + d[(10)]);
  data_pack_local[(7)] = 0.000000e+00f;
  data_pack_local[(7)] = (data_pack_local[(7)] + ((d[(5)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(7)] * -1.000000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(9)] * -1.000000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + d[(11)]);
  data_pack_local[(8)] = 0.000000e+00f;
  data_pack_local[(8)] = (data_pack_local[(8)] + d[(4)]);
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(6)] * -1.000000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + d[(8)]);
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(9)] = 0.000000e+00f;
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(5)] * -1.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + d[(6)]);
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(9)] * -1.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + d[(10)]);
  data_pack_local[(10)] = 0.000000e+00f;
  data_pack_local[(10)] = (data_pack_local[(10)] + d[(5)]);
  data_pack_local[(10)] = (data_pack_local[(10)] + d[(6)]);
  data_pack_local[(10)] = (data_pack_local[(10)] + d[(9)]);
  data_pack_local[(10)] = (data_pack_local[(10)] + d[(10)]);
  data_pack_local[(11)] = 0.000000e+00f;
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(5)] * -1.000000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + d[(7)]);
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(9)] * -1.000000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + d[(11)]);
  data_pack_local[(12)] = 0.000000e+00f;
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(4)] * -1.000000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(6)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + d[(12)]);
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(14)] * -1.000000e+00f));
  data_pack_local[(13)] = 0.000000e+00f;
  data_pack_local[(13)] = (data_pack_local[(13)] + ((d[(5)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(6)] * -1.000000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(13)] * -1.000000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + d[(14)]);
  data_pack_local[(14)] = 0.000000e+00f;
  data_pack_local[(14)] = (data_pack_local[(14)] + (d[(5)] * -1.000000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + (d[(6)] * -1.000000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + d[(13)]);
  data_pack_local[(14)] = (data_pack_local[(14)] + d[(14)]);
  data_pack_local[(15)] = 0.000000e+00f;
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(5)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + (d[(7)] * -1.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + (d[(13)] * -1.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + d[(15)]);
  for (int eps1 = 0; eps1 < 4; ++eps1) {
    for (int nu1 = 0; nu1 < 4; ++nu1) {
      data_pack[(((((eps1 * 1048576) + (nu1 * 262144)) + (((int)blockIdx.x) * 128)) + ((int)threadIdx.x)))] = data_pack_local[(((eps1 * 4) + nu1))];
    }
  }
}

extern "C" __global__ void fused_nn_contrib_conv2d_winograd_without_weight_transform_add_add_nn_relu_2_kernel1(void* __restrict__ placeholder, float* __restrict__ data_pack, float* __restrict__ bgemm) {
  float bgemm_local[64];
  __shared__ float placeholder_shared[2048];
  __shared__ float data_pack_shared[1024];
  for (int co_c_init = 0; co_c_init < 16; ++co_c_init) {
    for (int p_c_init = 0; p_c_init < 2; ++p_c_init) {
      bgemm_local[(((co_c_init * 2) + p_c_init))] = 0.000000e+00f;
      bgemm_local[((((co_c_init * 2) + p_c_init) + 32))] = 0.000000e+00f;
    }
  }
  for (int ci_outer = 0; ci_outer < 8; ++ci_outer) {
    __syncthreads();
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer = 0; ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer < 16; ++ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer) {
      placeholder_shared[((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 128) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)))] = ((float*)placeholder)[((((((((int)blockIdx.z) * 16384) + (ci_outer * 2048)) + (ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 128)) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)))];
    }
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer1 < 8; ++ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer1) {
      data_pack_shared[((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer1 * 128) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)))] = data_pack[(((((((((int)blockIdx.z) * 802816) + (ci_outer * 100352)) + (ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer1 * 12544)) + ((((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) >> 6) * 6272)) + (((int)blockIdx.x) * 64)) + (((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) & 63)))];
    }
    __syncthreads();
    for (int ci_inner = 0; ci_inner < 16; ++ci_inner) {
      for (int co_c = 0; co_c < 16; ++co_c) {
        for (int p_c = 0; p_c < 2; ++p_c) {
          bgemm_local[(((co_c * 2) + p_c))] = (bgemm_local[(((co_c * 2) + p_c))] + (placeholder_shared[((((ci_inner * 128) + (((int)threadIdx.y) * 16)) + co_c))] * data_pack_shared[((((ci_inner * 64) + (((int)threadIdx.x) * 2)) + p_c))]));
          bgemm_local[((((co_c * 2) + p_c) + 32))] = (bgemm_local[((((co_c * 2) + p_c) + 32))] + (placeholder_shared[((((ci_inner * 128) + (((int)threadIdx.y) * 16)) + co_c))] * data_pack_shared[(((((ci_inner * 64) + (((int)threadIdx.x) * 2)) + p_c) + 32))]));
        }
      }
    }
  }
  for (int co_inner_inner_inner = 0; co_inner_inner_inner < 16; ++co_inner_inner_inner) {
    for (int p_inner_inner_inner = 0; p_inner_inner_inner < 2; ++p_inner_inner_inner) {
      bgemm[(((((((((int)blockIdx.z) * 802816) + (((int)threadIdx.y) * 100352)) + (co_inner_inner_inner * 6272)) + (((int)blockIdx.x) * 64)) + (((int)threadIdx.x) * 2)) + p_inner_inner_inner))] = bgemm_local[(((co_inner_inner_inner * 2) + p_inner_inner_inner))];
      bgemm[((((((((((int)blockIdx.z) * 802816) + (((int)threadIdx.y) * 100352)) + (co_inner_inner_inner * 6272)) + (((int)blockIdx.x) * 64)) + (((int)threadIdx.x) * 2)) + p_inner_inner_inner) + 32))] = bgemm_local[((((co_inner_inner_inner * 2) + p_inner_inner_inner) + 32))];
    }
  }
}

extern "C" __global__ void fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_kernel2(float* __restrict__ bgemm, void* __restrict__ T_relu, void* __restrict__ placeholder) {
  float inverse[4];
  inverse[(0)] = 0.000000e+00f;
  inverse[(0)] = (inverse[(0)] + bgemm[((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 401408))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 802816))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 1605632))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 2007040))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 2408448))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 3211264))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 3612672))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 4014080))]);
  inverse[(1)] = 0.000000e+00f;
  inverse[(1)] = (inverse[(1)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 401408))] * -1.000000e+00f));
  inverse[(1)] = (inverse[(1)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 802816))]);
  inverse[(1)] = (inverse[(1)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 1204224))]);
  inverse[(1)] = (inverse[(1)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 2007040))] * -1.000000e+00f));
  inverse[(1)] = (inverse[(1)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 2408448))]);
  inverse[(1)] = (inverse[(1)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 2809856))]);
  inverse[(1)] = (inverse[(1)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 3612672))] * -1.000000e+00f));
  inverse[(1)] = (inverse[(1)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 4014080))]);
  inverse[(1)] = (inverse[(1)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 4415488))]);
  inverse[(2)] = 0.000000e+00f;
  inverse[(2)] = (inverse[(2)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 1605632))] * -1.000000e+00f));
  inverse[(2)] = (inverse[(2)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 2007040))] * -1.000000e+00f));
  inverse[(2)] = (inverse[(2)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 2408448))] * -1.000000e+00f));
  inverse[(2)] = (inverse[(2)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 3211264))]);
  inverse[(2)] = (inverse[(2)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 3612672))]);
  inverse[(2)] = (inverse[(2)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 4014080))]);
  inverse[(2)] = (inverse[(2)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 4816896))]);
  inverse[(2)] = (inverse[(2)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 5218304))]);
  inverse[(2)] = (inverse[(2)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 5619712))]);
  inverse[(3)] = 0.000000e+00f;
  inverse[(3)] = (inverse[(3)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 2007040))] * -1.000000e+00f) * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 2408448))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 2809856))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 3612672))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 4014080))]);
  inverse[(3)] = (inverse[(3)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 4415488))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 5218304))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 5619712))]);
  inverse[(3)] = (inverse[(3)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 6021120))]);
  for (int ax2_inner = 0; ax2_inner < 2; ++ax2_inner) {
    for (int ax3_inner = 0; ax3_inner < 2; ++ax3_inner) {
      ((float*)T_relu)[((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 7) * 28) + (ax2_inner * 14)) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 7) * 2)) + ax3_inner))] = max((float)((inverse[(((ax2_inner * 2) + ax3_inner))] + ((float*)placeholder)[(((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49))])), (float)(0.000000e+00f));
    }
  }
}

extern "C" __global__ void fused_nn_contrib_conv2d_winograd_without_weight_transform_add_kernel2(float* __restrict__ bgemm, void* __restrict__ T_add, void* __restrict__ placeholder) {
  float inverse[4];
  inverse[(0)] = 0.000000e+00f;
  inverse[(0)] = (inverse[(0)] + bgemm[((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 802816))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 1605632))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 3211264))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4014080))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4816896))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6422528))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 7225344))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8028160))]);
  inverse[(1)] = 0.000000e+00f;
  inverse[(1)] = (inverse[(1)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 802816))] * -1.000000e+00f));
  inverse[(1)] = (inverse[(1)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 1605632))]);
  inverse[(1)] = (inverse[(1)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 2408448))]);
  inverse[(1)] = (inverse[(1)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4014080))] * -1.000000e+00f));
  inverse[(1)] = (inverse[(1)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4816896))]);
  inverse[(1)] = (inverse[(1)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 5619712))]);
  inverse[(1)] = (inverse[(1)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 7225344))] * -1.000000e+00f));
  inverse[(1)] = (inverse[(1)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8028160))]);
  inverse[(1)] = (inverse[(1)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8830976))]);
  inverse[(2)] = 0.000000e+00f;
  inverse[(2)] = (inverse[(2)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 3211264))] * -1.000000e+00f));
  inverse[(2)] = (inverse[(2)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4014080))] * -1.000000e+00f));
  inverse[(2)] = (inverse[(2)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4816896))] * -1.000000e+00f));
  inverse[(2)] = (inverse[(2)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6422528))]);
  inverse[(2)] = (inverse[(2)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 7225344))]);
  inverse[(2)] = (inverse[(2)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8028160))]);
  inverse[(2)] = (inverse[(2)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 9633792))]);
  inverse[(2)] = (inverse[(2)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10436608))]);
  inverse[(2)] = (inverse[(2)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 11239424))]);
  inverse[(3)] = 0.000000e+00f;
  inverse[(3)] = (inverse[(3)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4014080))] * -1.000000e+00f) * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4816896))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 5619712))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 7225344))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8028160))]);
  inverse[(3)] = (inverse[(3)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8830976))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10436608))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 11239424))]);
  inverse[(3)] = (inverse[(3)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 12042240))]);
  for (int ax2_inner = 0; ax2_inner < 2; ++ax2_inner) {
    for (int ax3_inner = 0; ax3_inner < 2; ++ax3_inner) {
      ((float*)T_add)[((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 14) * 56) + (ax2_inner * 28)) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 14) * 2)) + ax3_inner))] = (inverse[(((ax2_inner * 2) + ax3_inner))] + ((float*)placeholder)[(((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196))]);
    }
  }
}

extern "C" __global__ void fused_nn_contrib_conv2d_winograd_without_weight_transform_add_add_nn_relu_1_kernel0(void* __restrict__ placeholder, float* __restrict__ data_pack) {
  float d[16];
  float data_pack_local[16];
  for (int eps = 0; eps < 4; ++eps) {
    for (int nu = 0; nu < 4; ++nu) {
      d[(((eps * 4) + nu))] = (((((1 <= ((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49) / 7) * 2) + eps)) && (((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49) / 7) * 2) + eps) < 15)) && (1 <= (((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 7) * 2) + nu))) && ((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 7) * 2) + nu) < 15)) ? (float)((float*)placeholder)[((((((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 1568) / 49) * 50176) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 1568) * 196)) + (((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49) / 7) * 28)) + (eps * 14)) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 7) * 2)) + nu) - 15))] : (float)0.000000e+00f);
    }
  }
  data_pack_local[(0)] = 0.000000e+00f;
  data_pack_local[(0)] = (data_pack_local[(0)] + d[(0)]);
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(2)] * -1.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(8)] * -1.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(10)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(1)] = 0.000000e+00f;
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(1)] * -1.000000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + d[(2)]);
  data_pack_local[(1)] = (data_pack_local[(1)] + ((d[(9)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(2)] = 0.000000e+00f;
  data_pack_local[(2)] = (data_pack_local[(2)] + d[(1)]);
  data_pack_local[(2)] = (data_pack_local[(2)] + d[(2)]);
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(9)] * -1.000000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(3)] = 0.000000e+00f;
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(1)] * -1.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + d[(3)]);
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(9)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(11)] * -1.000000e+00f));
  data_pack_local[(4)] = 0.000000e+00f;
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(4)] * -1.000000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(6)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + d[(8)]);
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(5)] = 0.000000e+00f;
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(5)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(6)] * -1.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(9)] * -1.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + d[(10)]);
  data_pack_local[(6)] = 0.000000e+00f;
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(5)] * -1.000000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(6)] * -1.000000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + d[(9)]);
  data_pack_local[(6)] = (data_pack_local[(6)] + d[(10)]);
  data_pack_local[(7)] = 0.000000e+00f;
  data_pack_local[(7)] = (data_pack_local[(7)] + ((d[(5)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(7)] * -1.000000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(9)] * -1.000000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + d[(11)]);
  data_pack_local[(8)] = 0.000000e+00f;
  data_pack_local[(8)] = (data_pack_local[(8)] + d[(4)]);
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(6)] * -1.000000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + d[(8)]);
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(9)] = 0.000000e+00f;
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(5)] * -1.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + d[(6)]);
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(9)] * -1.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + d[(10)]);
  data_pack_local[(10)] = 0.000000e+00f;
  data_pack_local[(10)] = (data_pack_local[(10)] + d[(5)]);
  data_pack_local[(10)] = (data_pack_local[(10)] + d[(6)]);
  data_pack_local[(10)] = (data_pack_local[(10)] + d[(9)]);
  data_pack_local[(10)] = (data_pack_local[(10)] + d[(10)]);
  data_pack_local[(11)] = 0.000000e+00f;
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(5)] * -1.000000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + d[(7)]);
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(9)] * -1.000000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + d[(11)]);
  data_pack_local[(12)] = 0.000000e+00f;
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(4)] * -1.000000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(6)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + d[(12)]);
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(14)] * -1.000000e+00f));
  data_pack_local[(13)] = 0.000000e+00f;
  data_pack_local[(13)] = (data_pack_local[(13)] + ((d[(5)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(6)] * -1.000000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(13)] * -1.000000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + d[(14)]);
  data_pack_local[(14)] = 0.000000e+00f;
  data_pack_local[(14)] = (data_pack_local[(14)] + (d[(5)] * -1.000000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + (d[(6)] * -1.000000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + d[(13)]);
  data_pack_local[(14)] = (data_pack_local[(14)] + d[(14)]);
  data_pack_local[(15)] = 0.000000e+00f;
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(5)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + (d[(7)] * -1.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + (d[(13)] * -1.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + d[(15)]);
  for (int eps1 = 0; eps1 < 4; ++eps1) {
    for (int nu1 = 0; nu1 < 4; ++nu1) {
      data_pack[(((((eps1 * 1605632) + (nu1 * 401408)) + (((int)blockIdx.x) * 128)) + ((int)threadIdx.x)))] = data_pack_local[(((eps1 * 4) + nu1))];
    }
  }
}

extern "C" __global__ void fused_nn_contrib_conv2d_winograd_without_weight_transform_add_add_nn_relu_3_kernel1(void* __restrict__ placeholder, float* __restrict__ data_pack, float* __restrict__ bgemm) {
  float bgemm_local[32];
  __shared__ float placeholder_shared[128];
  __shared__ float data_pack_shared[256];
  for (int co_c_init = 0; co_c_init < 2; ++co_c_init) {
    bgemm_local[(co_c_init)] = 0.000000e+00f;
    bgemm_local[((co_c_init + 8))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 16))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 24))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 2))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 10))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 18))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 26))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 4))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 12))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 20))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 28))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 6))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 14))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 22))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 30))] = 0.000000e+00f;
  }
  for (int ci_outer = 0; ci_outer < 16; ++ci_outer) {
    __syncthreads();
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer = 0; ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer < 2; ++ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer) {
      placeholder_shared[((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 64) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)))] = ((float*)placeholder)[(((((((((int)blockIdx.z) * 4096) + (ci_outer * 256)) + (ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 128)) + ((((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) >> 5) * 64)) + (((int)blockIdx.y) * 32)) + (((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) & 31)))];
    }
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer1 < 4; ++ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer1) {
      data_pack_shared[((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer1 * 64) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)))] = data_pack[(((((((((int)blockIdx.z) * 401408) + (ci_outer * 25088)) + (ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer1 * 6272)) + (((int)blockIdx.x) * 64)) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)))];
    }
    __syncthreads();
    for (int ci_inner = 0; ci_inner < 4; ++ci_inner) {
      for (int co_c = 0; co_c < 2; ++co_c) {
        bgemm_local[(co_c)] = (bgemm_local[(co_c)] + (placeholder_shared[((((ci_inner * 32) + (((int)threadIdx.y) * 2)) + co_c))] * data_pack_shared[(((ci_inner * 64) + ((int)threadIdx.x)))]));
        bgemm_local[((co_c + 8))] = (bgemm_local[((co_c + 8))] + (placeholder_shared[(((((ci_inner * 32) + (((int)threadIdx.y) * 2)) + co_c) + 8))] * data_pack_shared[(((ci_inner * 64) + ((int)threadIdx.x)))]));
        bgemm_local[((co_c + 16))] = (bgemm_local[((co_c + 16))] + (placeholder_shared[(((((ci_inner * 32) + (((int)threadIdx.y) * 2)) + co_c) + 16))] * data_pack_shared[(((ci_inner * 64) + ((int)threadIdx.x)))]));
        bgemm_local[((co_c + 24))] = (bgemm_local[((co_c + 24))] + (placeholder_shared[(((((ci_inner * 32) + (((int)threadIdx.y) * 2)) + co_c) + 24))] * data_pack_shared[(((ci_inner * 64) + ((int)threadIdx.x)))]));
        bgemm_local[((co_c + 2))] = (bgemm_local[((co_c + 2))] + (placeholder_shared[((((ci_inner * 32) + (((int)threadIdx.y) * 2)) + co_c))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 16))]));
        bgemm_local[((co_c + 10))] = (bgemm_local[((co_c + 10))] + (placeholder_shared[(((((ci_inner * 32) + (((int)threadIdx.y) * 2)) + co_c) + 8))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 16))]));
        bgemm_local[((co_c + 18))] = (bgemm_local[((co_c + 18))] + (placeholder_shared[(((((ci_inner * 32) + (((int)threadIdx.y) * 2)) + co_c) + 16))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 16))]));
        bgemm_local[((co_c + 26))] = (bgemm_local[((co_c + 26))] + (placeholder_shared[(((((ci_inner * 32) + (((int)threadIdx.y) * 2)) + co_c) + 24))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 16))]));
        bgemm_local[((co_c + 4))] = (bgemm_local[((co_c + 4))] + (placeholder_shared[((((ci_inner * 32) + (((int)threadIdx.y) * 2)) + co_c))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 32))]));
        bgemm_local[((co_c + 12))] = (bgemm_local[((co_c + 12))] + (placeholder_shared[(((((ci_inner * 32) + (((int)threadIdx.y) * 2)) + co_c) + 8))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 32))]));
        bgemm_local[((co_c + 20))] = (bgemm_local[((co_c + 20))] + (placeholder_shared[(((((ci_inner * 32) + (((int)threadIdx.y) * 2)) + co_c) + 16))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 32))]));
        bgemm_local[((co_c + 28))] = (bgemm_local[((co_c + 28))] + (placeholder_shared[(((((ci_inner * 32) + (((int)threadIdx.y) * 2)) + co_c) + 24))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 32))]));
        bgemm_local[((co_c + 6))] = (bgemm_local[((co_c + 6))] + (placeholder_shared[((((ci_inner * 32) + (((int)threadIdx.y) * 2)) + co_c))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 48))]));
        bgemm_local[((co_c + 14))] = (bgemm_local[((co_c + 14))] + (placeholder_shared[(((((ci_inner * 32) + (((int)threadIdx.y) * 2)) + co_c) + 8))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 48))]));
        bgemm_local[((co_c + 22))] = (bgemm_local[((co_c + 22))] + (placeholder_shared[(((((ci_inner * 32) + (((int)threadIdx.y) * 2)) + co_c) + 16))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 48))]));
        bgemm_local[((co_c + 30))] = (bgemm_local[((co_c + 30))] + (placeholder_shared[(((((ci_inner * 32) + (((int)threadIdx.y) * 2)) + co_c) + 24))] * data_pack_shared[((((ci_inner * 64) + ((int)threadIdx.x)) + 48))]));
      }
    }
  }
  for (int co_inner_inner_inner = 0; co_inner_inner_inner < 2; ++co_inner_inner_inner) {
    bgemm[(((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 12544)) + (co_inner_inner_inner * 6272)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)))] = bgemm_local[(co_inner_inner_inner)];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 12544)) + (co_inner_inner_inner * 6272)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 50176))] = bgemm_local[((co_inner_inner_inner + 8))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 12544)) + (co_inner_inner_inner * 6272)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 100352))] = bgemm_local[((co_inner_inner_inner + 16))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 12544)) + (co_inner_inner_inner * 6272)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 150528))] = bgemm_local[((co_inner_inner_inner + 24))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 12544)) + (co_inner_inner_inner * 6272)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 16))] = bgemm_local[((co_inner_inner_inner + 2))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 12544)) + (co_inner_inner_inner * 6272)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 50192))] = bgemm_local[((co_inner_inner_inner + 10))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 12544)) + (co_inner_inner_inner * 6272)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 100368))] = bgemm_local[((co_inner_inner_inner + 18))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 12544)) + (co_inner_inner_inner * 6272)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 150544))] = bgemm_local[((co_inner_inner_inner + 26))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 12544)) + (co_inner_inner_inner * 6272)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 32))] = bgemm_local[((co_inner_inner_inner + 4))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 12544)) + (co_inner_inner_inner * 6272)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 50208))] = bgemm_local[((co_inner_inner_inner + 12))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 12544)) + (co_inner_inner_inner * 6272)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 100384))] = bgemm_local[((co_inner_inner_inner + 20))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 12544)) + (co_inner_inner_inner * 6272)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 150560))] = bgemm_local[((co_inner_inner_inner + 28))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 12544)) + (co_inner_inner_inner * 6272)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 48))] = bgemm_local[((co_inner_inner_inner + 6))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 12544)) + (co_inner_inner_inner * 6272)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 50224))] = bgemm_local[((co_inner_inner_inner + 14))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 12544)) + (co_inner_inner_inner * 6272)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 100400))] = bgemm_local[((co_inner_inner_inner + 22))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 12544)) + (co_inner_inner_inner * 6272)) + (((int)blockIdx.x) * 64)) + ((int)threadIdx.x)) + 150576))] = bgemm_local[((co_inner_inner_inner + 30))];
  }
}

extern "C" __global__ void fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_kernel0(void* __restrict__ placeholder, float* __restrict__ data_pack) {
  float d[16];
  float data_pack_local[16];
  for (int eps = 0; eps < 4; ++eps) {
    for (int nu = 0; nu < 4; ++nu) {
      d[(((eps * 4) + nu))] = (((((1 <= ((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49) / 7) * 2) + eps)) && (((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49) / 7) * 2) + eps) < 15)) && (1 <= (((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 7) * 2) + nu))) && ((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 7) * 2) + nu) < 15)) ? (float)((float*)placeholder)[((((((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 1568) / 49) * 50176) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 1568) * 196)) + (((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49) / 7) * 28)) + (eps * 14)) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 7) * 2)) + nu) - 15))] : (float)0.000000e+00f);
    }
  }
  data_pack_local[(0)] = 0.000000e+00f;
  data_pack_local[(0)] = (data_pack_local[(0)] + d[(0)]);
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(2)] * -1.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(8)] * -1.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(10)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(1)] = 0.000000e+00f;
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(1)] * -1.000000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + d[(2)]);
  data_pack_local[(1)] = (data_pack_local[(1)] + ((d[(9)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(2)] = 0.000000e+00f;
  data_pack_local[(2)] = (data_pack_local[(2)] + d[(1)]);
  data_pack_local[(2)] = (data_pack_local[(2)] + d[(2)]);
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(9)] * -1.000000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(3)] = 0.000000e+00f;
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(1)] * -1.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + d[(3)]);
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(9)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(11)] * -1.000000e+00f));
  data_pack_local[(4)] = 0.000000e+00f;
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(4)] * -1.000000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(6)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + d[(8)]);
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(5)] = 0.000000e+00f;
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(5)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(6)] * -1.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(9)] * -1.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + d[(10)]);
  data_pack_local[(6)] = 0.000000e+00f;
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(5)] * -1.000000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(6)] * -1.000000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + d[(9)]);
  data_pack_local[(6)] = (data_pack_local[(6)] + d[(10)]);
  data_pack_local[(7)] = 0.000000e+00f;
  data_pack_local[(7)] = (data_pack_local[(7)] + ((d[(5)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(7)] * -1.000000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(9)] * -1.000000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + d[(11)]);
  data_pack_local[(8)] = 0.000000e+00f;
  data_pack_local[(8)] = (data_pack_local[(8)] + d[(4)]);
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(6)] * -1.000000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + d[(8)]);
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(9)] = 0.000000e+00f;
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(5)] * -1.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + d[(6)]);
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(9)] * -1.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + d[(10)]);
  data_pack_local[(10)] = 0.000000e+00f;
  data_pack_local[(10)] = (data_pack_local[(10)] + d[(5)]);
  data_pack_local[(10)] = (data_pack_local[(10)] + d[(6)]);
  data_pack_local[(10)] = (data_pack_local[(10)] + d[(9)]);
  data_pack_local[(10)] = (data_pack_local[(10)] + d[(10)]);
  data_pack_local[(11)] = 0.000000e+00f;
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(5)] * -1.000000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + d[(7)]);
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(9)] * -1.000000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + d[(11)]);
  data_pack_local[(12)] = 0.000000e+00f;
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(4)] * -1.000000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(6)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + d[(12)]);
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(14)] * -1.000000e+00f));
  data_pack_local[(13)] = 0.000000e+00f;
  data_pack_local[(13)] = (data_pack_local[(13)] + ((d[(5)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(6)] * -1.000000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(13)] * -1.000000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + d[(14)]);
  data_pack_local[(14)] = 0.000000e+00f;
  data_pack_local[(14)] = (data_pack_local[(14)] + (d[(5)] * -1.000000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + (d[(6)] * -1.000000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + d[(13)]);
  data_pack_local[(14)] = (data_pack_local[(14)] + d[(14)]);
  data_pack_local[(15)] = 0.000000e+00f;
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(5)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + (d[(7)] * -1.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + (d[(13)] * -1.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + d[(15)]);
  for (int eps1 = 0; eps1 < 4; ++eps1) {
    for (int nu1 = 0; nu1 < 4; ++nu1) {
      data_pack[(((((eps1 * 1605632) + (nu1 * 401408)) + (((int)blockIdx.x) * 128)) + ((int)threadIdx.x)))] = data_pack_local[(((eps1 * 4) + nu1))];
    }
  }
}

extern "C" __global__ void fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_kernel1(void* __restrict__ placeholder, float* __restrict__ data_pack, float* __restrict__ bgemm) {
  float bgemm_local[64];
  __shared__ float placeholder_shared[2048];
  __shared__ float data_pack_shared[1024];
  for (int co_c_init = 0; co_c_init < 16; ++co_c_init) {
    for (int p_c_init = 0; p_c_init < 2; ++p_c_init) {
      bgemm_local[(((co_c_init * 2) + p_c_init))] = 0.000000e+00f;
      bgemm_local[((((co_c_init * 2) + p_c_init) + 32))] = 0.000000e+00f;
    }
  }
  for (int ci_outer = 0; ci_outer < 8; ++ci_outer) {
    __syncthreads();
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer = 0; ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer < 16; ++ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer) {
      placeholder_shared[((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 128) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)))] = ((float*)placeholder)[((((((((int)blockIdx.z) * 16384) + (ci_outer * 2048)) + (ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 128)) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)))];
    }
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer1 < 8; ++ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer1) {
      data_pack_shared[((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer1 * 128) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)))] = data_pack[(((((((((int)blockIdx.z) * 802816) + (ci_outer * 100352)) + (ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer1 * 12544)) + ((((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) >> 6) * 6272)) + (((int)blockIdx.x) * 64)) + (((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) & 63)))];
    }
    __syncthreads();
    for (int ci_inner = 0; ci_inner < 16; ++ci_inner) {
      for (int co_c = 0; co_c < 16; ++co_c) {
        for (int p_c = 0; p_c < 2; ++p_c) {
          bgemm_local[(((co_c * 2) + p_c))] = (bgemm_local[(((co_c * 2) + p_c))] + (placeholder_shared[((((ci_inner * 128) + (((int)threadIdx.y) * 16)) + co_c))] * data_pack_shared[((((ci_inner * 64) + (((int)threadIdx.x) * 2)) + p_c))]));
          bgemm_local[((((co_c * 2) + p_c) + 32))] = (bgemm_local[((((co_c * 2) + p_c) + 32))] + (placeholder_shared[((((ci_inner * 128) + (((int)threadIdx.y) * 16)) + co_c))] * data_pack_shared[(((((ci_inner * 64) + (((int)threadIdx.x) * 2)) + p_c) + 32))]));
        }
      }
    }
  }
  for (int co_inner_inner_inner = 0; co_inner_inner_inner < 16; ++co_inner_inner_inner) {
    for (int p_inner_inner_inner = 0; p_inner_inner_inner < 2; ++p_inner_inner_inner) {
      bgemm[(((((((((int)blockIdx.z) * 802816) + (((int)threadIdx.y) * 100352)) + (co_inner_inner_inner * 6272)) + (((int)blockIdx.x) * 64)) + (((int)threadIdx.x) * 2)) + p_inner_inner_inner))] = bgemm_local[(((co_inner_inner_inner * 2) + p_inner_inner_inner))];
      bgemm[((((((((((int)blockIdx.z) * 802816) + (((int)threadIdx.y) * 100352)) + (co_inner_inner_inner * 6272)) + (((int)blockIdx.x) * 64)) + (((int)threadIdx.x) * 2)) + p_inner_inner_inner) + 32))] = bgemm_local[((((co_inner_inner_inner * 2) + p_inner_inner_inner) + 32))];
    }
  }
}

extern "C" __global__ void fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_kernel2(float* __restrict__ bgemm, void* __restrict__ T_relu, void* __restrict__ placeholder) {
  float inverse[16];
  inverse[(0)] = 0.000000e+00f;
  inverse[(0)] = (inverse[(0)] + bgemm[((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 401408))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 802816))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 1204224))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 1605632))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 2408448))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 2809856))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 3211264))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 3612672))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4014080))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4816896))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 5218304))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 5619712))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6021120))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6422528))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 7225344))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 7626752))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8028160))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8429568))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8830976))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 9633792))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10035200))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10436608))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10838016))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 11239424))]);
  inverse[(1)] = 0.000000e+00f;
  inverse[(1)] = (inverse[(1)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 401408))] * -1.000000e+00f));
  inverse[(1)] = (inverse[(1)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 802816))]);
  inverse[(1)] = (inverse[(1)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 1204224))] * 5.000000e-01f));
  inverse[(1)] = (inverse[(1)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 1605632))] * -2.000000e+00f));
  inverse[(1)] = (inverse[(1)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 2809856))] * -1.000000e+00f));
  inverse[(1)] = (inverse[(1)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 3211264))]);
  inverse[(1)] = (inverse[(1)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 3612672))] * 5.000000e-01f));
  inverse[(1)] = (inverse[(1)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4014080))] * -2.000000e+00f));
  inverse[(1)] = (inverse[(1)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 5218304))] * -1.000000e+00f));
  inverse[(1)] = (inverse[(1)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 5619712))]);
  inverse[(1)] = (inverse[(1)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6021120))] * 5.000000e-01f));
  inverse[(1)] = (inverse[(1)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6422528))] * -2.000000e+00f));
  inverse[(1)] = (inverse[(1)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 7626752))] * -1.000000e+00f));
  inverse[(1)] = (inverse[(1)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8028160))]);
  inverse[(1)] = (inverse[(1)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8429568))] * 5.000000e-01f));
  inverse[(1)] = (inverse[(1)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8830976))] * -2.000000e+00f));
  inverse[(1)] = (inverse[(1)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10035200))] * -1.000000e+00f));
  inverse[(1)] = (inverse[(1)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10436608))]);
  inverse[(1)] = (inverse[(1)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10838016))] * 5.000000e-01f));
  inverse[(1)] = (inverse[(1)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 11239424))] * -2.000000e+00f));
  inverse[(2)] = 0.000000e+00f;
  inverse[(2)] = (inverse[(2)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 401408))]);
  inverse[(2)] = (inverse[(2)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 802816))]);
  inverse[(2)] = (inverse[(2)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 1204224))] * 2.500000e-01f));
  inverse[(2)] = (inverse[(2)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 1605632))] * 4.000000e+00f));
  inverse[(2)] = (inverse[(2)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 2809856))]);
  inverse[(2)] = (inverse[(2)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 3211264))]);
  inverse[(2)] = (inverse[(2)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 3612672))] * 2.500000e-01f));
  inverse[(2)] = (inverse[(2)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4014080))] * 4.000000e+00f));
  inverse[(2)] = (inverse[(2)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 5218304))]);
  inverse[(2)] = (inverse[(2)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 5619712))]);
  inverse[(2)] = (inverse[(2)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6021120))] * 2.500000e-01f));
  inverse[(2)] = (inverse[(2)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6422528))] * 4.000000e+00f));
  inverse[(2)] = (inverse[(2)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 7626752))]);
  inverse[(2)] = (inverse[(2)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8028160))]);
  inverse[(2)] = (inverse[(2)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8429568))] * 2.500000e-01f));
  inverse[(2)] = (inverse[(2)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8830976))] * 4.000000e+00f));
  inverse[(2)] = (inverse[(2)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10035200))]);
  inverse[(2)] = (inverse[(2)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10436608))]);
  inverse[(2)] = (inverse[(2)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10838016))] * 2.500000e-01f));
  inverse[(2)] = (inverse[(2)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 11239424))] * 4.000000e+00f));
  inverse[(3)] = 0.000000e+00f;
  inverse[(3)] = (inverse[(3)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 401408))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 802816))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 1204224))] * 1.250000e-01f));
  inverse[(3)] = (inverse[(3)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 1605632))] * -8.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 2007040))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 2809856))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 3211264))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 3612672))] * 1.250000e-01f));
  inverse[(3)] = (inverse[(3)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4014080))] * -8.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4415488))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 5218304))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 5619712))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6021120))] * 1.250000e-01f));
  inverse[(3)] = (inverse[(3)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6422528))] * -8.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6823936))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 7626752))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8028160))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8429568))] * 1.250000e-01f));
  inverse[(3)] = (inverse[(3)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8830976))] * -8.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 9232384))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10035200))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10436608))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10838016))] * 1.250000e-01f));
  inverse[(3)] = (inverse[(3)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 11239424))] * -8.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 11640832))]);
  inverse[(4)] = 0.000000e+00f;
  inverse[(4)] = (inverse[(4)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 2408448))] * -1.000000e+00f));
  inverse[(4)] = (inverse[(4)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 2809856))] * -1.000000e+00f));
  inverse[(4)] = (inverse[(4)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 3211264))] * -1.000000e+00f));
  inverse[(4)] = (inverse[(4)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 3612672))] * -1.000000e+00f));
  inverse[(4)] = (inverse[(4)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4014080))] * -1.000000e+00f));
  inverse[(4)] = (inverse[(4)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4816896))]);
  inverse[(4)] = (inverse[(4)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 5218304))]);
  inverse[(4)] = (inverse[(4)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 5619712))]);
  inverse[(4)] = (inverse[(4)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6021120))]);
  inverse[(4)] = (inverse[(4)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6422528))]);
  inverse[(4)] = (inverse[(4)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 7225344))] * 5.000000e-01f));
  inverse[(4)] = (inverse[(4)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 7626752))] * 5.000000e-01f));
  inverse[(4)] = (inverse[(4)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8028160))] * 5.000000e-01f));
  inverse[(4)] = (inverse[(4)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8429568))] * 5.000000e-01f));
  inverse[(4)] = (inverse[(4)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8830976))] * 5.000000e-01f));
  inverse[(4)] = (inverse[(4)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 9633792))] * -2.000000e+00f));
  inverse[(4)] = (inverse[(4)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10035200))] * -2.000000e+00f));
  inverse[(4)] = (inverse[(4)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10436608))] * -2.000000e+00f));
  inverse[(4)] = (inverse[(4)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10838016))] * -2.000000e+00f));
  inverse[(4)] = (inverse[(4)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 11239424))] * -2.000000e+00f));
  inverse[(5)] = 0.000000e+00f;
  inverse[(5)] = (inverse[(5)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 2809856))] * -1.000000e+00f) * -1.000000e+00f));
  inverse[(5)] = (inverse[(5)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 3211264))] * -1.000000e+00f));
  inverse[(5)] = (inverse[(5)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 3612672))] * -1.000000e+00f) * 5.000000e-01f));
  inverse[(5)] = (inverse[(5)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4014080))] * -1.000000e+00f) * -2.000000e+00f));
  inverse[(5)] = (inverse[(5)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 5218304))] * -1.000000e+00f));
  inverse[(5)] = (inverse[(5)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 5619712))]);
  inverse[(5)] = (inverse[(5)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6021120))] * 5.000000e-01f));
  inverse[(5)] = (inverse[(5)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6422528))] * -2.000000e+00f));
  inverse[(5)] = (inverse[(5)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 7626752))] * 5.000000e-01f) * -1.000000e+00f));
  inverse[(5)] = (inverse[(5)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8028160))] * 5.000000e-01f));
  inverse[(5)] = (inverse[(5)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8429568))] * 5.000000e-01f) * 5.000000e-01f));
  inverse[(5)] = (inverse[(5)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8830976))] * 5.000000e-01f) * -2.000000e+00f));
  inverse[(5)] = (inverse[(5)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10035200))] * -2.000000e+00f) * -1.000000e+00f));
  inverse[(5)] = (inverse[(5)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10436608))] * -2.000000e+00f));
  inverse[(5)] = (inverse[(5)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10838016))] * -2.000000e+00f) * 5.000000e-01f));
  inverse[(5)] = (inverse[(5)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 11239424))] * -2.000000e+00f) * -2.000000e+00f));
  inverse[(6)] = 0.000000e+00f;
  inverse[(6)] = (inverse[(6)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 2809856))] * -1.000000e+00f));
  inverse[(6)] = (inverse[(6)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 3211264))] * -1.000000e+00f));
  inverse[(6)] = (inverse[(6)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 3612672))] * -1.000000e+00f) * 2.500000e-01f));
  inverse[(6)] = (inverse[(6)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4014080))] * -1.000000e+00f) * 4.000000e+00f));
  inverse[(6)] = (inverse[(6)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 5218304))]);
  inverse[(6)] = (inverse[(6)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 5619712))]);
  inverse[(6)] = (inverse[(6)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6021120))] * 2.500000e-01f));
  inverse[(6)] = (inverse[(6)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6422528))] * 4.000000e+00f));
  inverse[(6)] = (inverse[(6)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 7626752))] * 5.000000e-01f));
  inverse[(6)] = (inverse[(6)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8028160))] * 5.000000e-01f));
  inverse[(6)] = (inverse[(6)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8429568))] * 5.000000e-01f) * 2.500000e-01f));
  inverse[(6)] = (inverse[(6)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8830976))] * 5.000000e-01f) * 4.000000e+00f));
  inverse[(6)] = (inverse[(6)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10035200))] * -2.000000e+00f));
  inverse[(6)] = (inverse[(6)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10436608))] * -2.000000e+00f));
  inverse[(6)] = (inverse[(6)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10838016))] * -2.000000e+00f) * 2.500000e-01f));
  inverse[(6)] = (inverse[(6)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 11239424))] * -2.000000e+00f) * 4.000000e+00f));
  inverse[(7)] = 0.000000e+00f;
  inverse[(7)] = (inverse[(7)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 2809856))] * -1.000000e+00f) * -1.000000e+00f));
  inverse[(7)] = (inverse[(7)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 3211264))] * -1.000000e+00f));
  inverse[(7)] = (inverse[(7)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 3612672))] * -1.000000e+00f) * 1.250000e-01f));
  inverse[(7)] = (inverse[(7)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4014080))] * -1.000000e+00f) * -8.000000e+00f));
  inverse[(7)] = (inverse[(7)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4415488))] * -1.000000e+00f));
  inverse[(7)] = (inverse[(7)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 5218304))] * -1.000000e+00f));
  inverse[(7)] = (inverse[(7)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 5619712))]);
  inverse[(7)] = (inverse[(7)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6021120))] * 1.250000e-01f));
  inverse[(7)] = (inverse[(7)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6422528))] * -8.000000e+00f));
  inverse[(7)] = (inverse[(7)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6823936))]);
  inverse[(7)] = (inverse[(7)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 7626752))] * 5.000000e-01f) * -1.000000e+00f));
  inverse[(7)] = (inverse[(7)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8028160))] * 5.000000e-01f));
  inverse[(7)] = (inverse[(7)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8429568))] * 5.000000e-01f) * 1.250000e-01f));
  inverse[(7)] = (inverse[(7)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8830976))] * 5.000000e-01f) * -8.000000e+00f));
  inverse[(7)] = (inverse[(7)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 9232384))] * 5.000000e-01f));
  inverse[(7)] = (inverse[(7)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10035200))] * -2.000000e+00f) * -1.000000e+00f));
  inverse[(7)] = (inverse[(7)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10436608))] * -2.000000e+00f));
  inverse[(7)] = (inverse[(7)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10838016))] * -2.000000e+00f) * 1.250000e-01f));
  inverse[(7)] = (inverse[(7)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 11239424))] * -2.000000e+00f) * -8.000000e+00f));
  inverse[(7)] = (inverse[(7)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 11640832))] * -2.000000e+00f));
  inverse[(8)] = 0.000000e+00f;
  inverse[(8)] = (inverse[(8)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 2408448))]);
  inverse[(8)] = (inverse[(8)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 2809856))]);
  inverse[(8)] = (inverse[(8)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 3211264))]);
  inverse[(8)] = (inverse[(8)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 3612672))]);
  inverse[(8)] = (inverse[(8)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4014080))]);
  inverse[(8)] = (inverse[(8)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4816896))]);
  inverse[(8)] = (inverse[(8)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 5218304))]);
  inverse[(8)] = (inverse[(8)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 5619712))]);
  inverse[(8)] = (inverse[(8)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6021120))]);
  inverse[(8)] = (inverse[(8)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6422528))]);
  inverse[(8)] = (inverse[(8)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 7225344))] * 2.500000e-01f));
  inverse[(8)] = (inverse[(8)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 7626752))] * 2.500000e-01f));
  inverse[(8)] = (inverse[(8)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8028160))] * 2.500000e-01f));
  inverse[(8)] = (inverse[(8)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8429568))] * 2.500000e-01f));
  inverse[(8)] = (inverse[(8)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8830976))] * 2.500000e-01f));
  inverse[(8)] = (inverse[(8)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 9633792))] * 4.000000e+00f));
  inverse[(8)] = (inverse[(8)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10035200))] * 4.000000e+00f));
  inverse[(8)] = (inverse[(8)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10436608))] * 4.000000e+00f));
  inverse[(8)] = (inverse[(8)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10838016))] * 4.000000e+00f));
  inverse[(8)] = (inverse[(8)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 11239424))] * 4.000000e+00f));
  inverse[(9)] = 0.000000e+00f;
  inverse[(9)] = (inverse[(9)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 2809856))] * -1.000000e+00f));
  inverse[(9)] = (inverse[(9)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 3211264))]);
  inverse[(9)] = (inverse[(9)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 3612672))] * 5.000000e-01f));
  inverse[(9)] = (inverse[(9)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4014080))] * -2.000000e+00f));
  inverse[(9)] = (inverse[(9)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 5218304))] * -1.000000e+00f));
  inverse[(9)] = (inverse[(9)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 5619712))]);
  inverse[(9)] = (inverse[(9)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6021120))] * 5.000000e-01f));
  inverse[(9)] = (inverse[(9)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6422528))] * -2.000000e+00f));
  inverse[(9)] = (inverse[(9)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 7626752))] * 2.500000e-01f) * -1.000000e+00f));
  inverse[(9)] = (inverse[(9)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8028160))] * 2.500000e-01f));
  inverse[(9)] = (inverse[(9)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8429568))] * 2.500000e-01f) * 5.000000e-01f));
  inverse[(9)] = (inverse[(9)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8830976))] * 2.500000e-01f) * -2.000000e+00f));
  inverse[(9)] = (inverse[(9)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10035200))] * 4.000000e+00f) * -1.000000e+00f));
  inverse[(9)] = (inverse[(9)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10436608))] * 4.000000e+00f));
  inverse[(9)] = (inverse[(9)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10838016))] * 4.000000e+00f) * 5.000000e-01f));
  inverse[(9)] = (inverse[(9)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 11239424))] * 4.000000e+00f) * -2.000000e+00f));
  inverse[(10)] = 0.000000e+00f;
  inverse[(10)] = (inverse[(10)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 2809856))]);
  inverse[(10)] = (inverse[(10)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 3211264))]);
  inverse[(10)] = (inverse[(10)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 3612672))] * 2.500000e-01f));
  inverse[(10)] = (inverse[(10)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4014080))] * 4.000000e+00f));
  inverse[(10)] = (inverse[(10)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 5218304))]);
  inverse[(10)] = (inverse[(10)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 5619712))]);
  inverse[(10)] = (inverse[(10)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6021120))] * 2.500000e-01f));
  inverse[(10)] = (inverse[(10)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6422528))] * 4.000000e+00f));
  inverse[(10)] = (inverse[(10)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 7626752))] * 2.500000e-01f));
  inverse[(10)] = (inverse[(10)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8028160))] * 2.500000e-01f));
  inverse[(10)] = (inverse[(10)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8429568))] * 2.500000e-01f) * 2.500000e-01f));
  inverse[(10)] = (inverse[(10)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8830976))] * 2.500000e-01f) * 4.000000e+00f));
  inverse[(10)] = (inverse[(10)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10035200))] * 4.000000e+00f));
  inverse[(10)] = (inverse[(10)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10436608))] * 4.000000e+00f));
  inverse[(10)] = (inverse[(10)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10838016))] * 4.000000e+00f) * 2.500000e-01f));
  inverse[(10)] = (inverse[(10)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 11239424))] * 4.000000e+00f) * 4.000000e+00f));
  inverse[(11)] = 0.000000e+00f;
  inverse[(11)] = (inverse[(11)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 2809856))] * -1.000000e+00f));
  inverse[(11)] = (inverse[(11)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 3211264))]);
  inverse[(11)] = (inverse[(11)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 3612672))] * 1.250000e-01f));
  inverse[(11)] = (inverse[(11)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4014080))] * -8.000000e+00f));
  inverse[(11)] = (inverse[(11)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4415488))]);
  inverse[(11)] = (inverse[(11)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 5218304))] * -1.000000e+00f));
  inverse[(11)] = (inverse[(11)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 5619712))]);
  inverse[(11)] = (inverse[(11)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6021120))] * 1.250000e-01f));
  inverse[(11)] = (inverse[(11)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6422528))] * -8.000000e+00f));
  inverse[(11)] = (inverse[(11)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6823936))]);
  inverse[(11)] = (inverse[(11)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 7626752))] * 2.500000e-01f) * -1.000000e+00f));
  inverse[(11)] = (inverse[(11)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8028160))] * 2.500000e-01f));
  inverse[(11)] = (inverse[(11)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8429568))] * 2.500000e-01f) * 1.250000e-01f));
  inverse[(11)] = (inverse[(11)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8830976))] * 2.500000e-01f) * -8.000000e+00f));
  inverse[(11)] = (inverse[(11)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 9232384))] * 2.500000e-01f));
  inverse[(11)] = (inverse[(11)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10035200))] * 4.000000e+00f) * -1.000000e+00f));
  inverse[(11)] = (inverse[(11)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10436608))] * 4.000000e+00f));
  inverse[(11)] = (inverse[(11)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10838016))] * 4.000000e+00f) * 1.250000e-01f));
  inverse[(11)] = (inverse[(11)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 11239424))] * 4.000000e+00f) * -8.000000e+00f));
  inverse[(11)] = (inverse[(11)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 11640832))] * 4.000000e+00f));
  inverse[(12)] = 0.000000e+00f;
  inverse[(12)] = (inverse[(12)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 2408448))] * -1.000000e+00f));
  inverse[(12)] = (inverse[(12)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 2809856))] * -1.000000e+00f));
  inverse[(12)] = (inverse[(12)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 3211264))] * -1.000000e+00f));
  inverse[(12)] = (inverse[(12)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 3612672))] * -1.000000e+00f));
  inverse[(12)] = (inverse[(12)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4014080))] * -1.000000e+00f));
  inverse[(12)] = (inverse[(12)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4816896))]);
  inverse[(12)] = (inverse[(12)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 5218304))]);
  inverse[(12)] = (inverse[(12)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 5619712))]);
  inverse[(12)] = (inverse[(12)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6021120))]);
  inverse[(12)] = (inverse[(12)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6422528))]);
  inverse[(12)] = (inverse[(12)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 7225344))] * 1.250000e-01f));
  inverse[(12)] = (inverse[(12)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 7626752))] * 1.250000e-01f));
  inverse[(12)] = (inverse[(12)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8028160))] * 1.250000e-01f));
  inverse[(12)] = (inverse[(12)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8429568))] * 1.250000e-01f));
  inverse[(12)] = (inverse[(12)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8830976))] * 1.250000e-01f));
  inverse[(12)] = (inverse[(12)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 9633792))] * -8.000000e+00f));
  inverse[(12)] = (inverse[(12)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10035200))] * -8.000000e+00f));
  inverse[(12)] = (inverse[(12)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10436608))] * -8.000000e+00f));
  inverse[(12)] = (inverse[(12)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10838016))] * -8.000000e+00f));
  inverse[(12)] = (inverse[(12)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 11239424))] * -8.000000e+00f));
  inverse[(12)] = (inverse[(12)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 12042240))]);
  inverse[(12)] = (inverse[(12)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 12443648))]);
  inverse[(12)] = (inverse[(12)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 12845056))]);
  inverse[(12)] = (inverse[(12)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 13246464))]);
  inverse[(12)] = (inverse[(12)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 13647872))]);
  inverse[(13)] = 0.000000e+00f;
  inverse[(13)] = (inverse[(13)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 2809856))] * -1.000000e+00f) * -1.000000e+00f));
  inverse[(13)] = (inverse[(13)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 3211264))] * -1.000000e+00f));
  inverse[(13)] = (inverse[(13)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 3612672))] * -1.000000e+00f) * 5.000000e-01f));
  inverse[(13)] = (inverse[(13)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4014080))] * -1.000000e+00f) * -2.000000e+00f));
  inverse[(13)] = (inverse[(13)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 5218304))] * -1.000000e+00f));
  inverse[(13)] = (inverse[(13)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 5619712))]);
  inverse[(13)] = (inverse[(13)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6021120))] * 5.000000e-01f));
  inverse[(13)] = (inverse[(13)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6422528))] * -2.000000e+00f));
  inverse[(13)] = (inverse[(13)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 7626752))] * 1.250000e-01f) * -1.000000e+00f));
  inverse[(13)] = (inverse[(13)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8028160))] * 1.250000e-01f));
  inverse[(13)] = (inverse[(13)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8429568))] * 1.250000e-01f) * 5.000000e-01f));
  inverse[(13)] = (inverse[(13)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8830976))] * 1.250000e-01f) * -2.000000e+00f));
  inverse[(13)] = (inverse[(13)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10035200))] * -8.000000e+00f) * -1.000000e+00f));
  inverse[(13)] = (inverse[(13)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10436608))] * -8.000000e+00f));
  inverse[(13)] = (inverse[(13)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10838016))] * -8.000000e+00f) * 5.000000e-01f));
  inverse[(13)] = (inverse[(13)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 11239424))] * -8.000000e+00f) * -2.000000e+00f));
  inverse[(13)] = (inverse[(13)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 12443648))] * -1.000000e+00f));
  inverse[(13)] = (inverse[(13)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 12845056))]);
  inverse[(13)] = (inverse[(13)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 13246464))] * 5.000000e-01f));
  inverse[(13)] = (inverse[(13)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 13647872))] * -2.000000e+00f));
  inverse[(14)] = 0.000000e+00f;
  inverse[(14)] = (inverse[(14)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 2809856))] * -1.000000e+00f));
  inverse[(14)] = (inverse[(14)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 3211264))] * -1.000000e+00f));
  inverse[(14)] = (inverse[(14)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 3612672))] * -1.000000e+00f) * 2.500000e-01f));
  inverse[(14)] = (inverse[(14)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4014080))] * -1.000000e+00f) * 4.000000e+00f));
  inverse[(14)] = (inverse[(14)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 5218304))]);
  inverse[(14)] = (inverse[(14)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 5619712))]);
  inverse[(14)] = (inverse[(14)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6021120))] * 2.500000e-01f));
  inverse[(14)] = (inverse[(14)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6422528))] * 4.000000e+00f));
  inverse[(14)] = (inverse[(14)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 7626752))] * 1.250000e-01f));
  inverse[(14)] = (inverse[(14)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8028160))] * 1.250000e-01f));
  inverse[(14)] = (inverse[(14)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8429568))] * 1.250000e-01f) * 2.500000e-01f));
  inverse[(14)] = (inverse[(14)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8830976))] * 1.250000e-01f) * 4.000000e+00f));
  inverse[(14)] = (inverse[(14)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10035200))] * -8.000000e+00f));
  inverse[(14)] = (inverse[(14)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10436608))] * -8.000000e+00f));
  inverse[(14)] = (inverse[(14)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10838016))] * -8.000000e+00f) * 2.500000e-01f));
  inverse[(14)] = (inverse[(14)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 11239424))] * -8.000000e+00f) * 4.000000e+00f));
  inverse[(14)] = (inverse[(14)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 12443648))]);
  inverse[(14)] = (inverse[(14)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 12845056))]);
  inverse[(14)] = (inverse[(14)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 13246464))] * 2.500000e-01f));
  inverse[(14)] = (inverse[(14)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 13647872))] * 4.000000e+00f));
  inverse[(15)] = 0.000000e+00f;
  inverse[(15)] = (inverse[(15)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 2809856))] * -1.000000e+00f) * -1.000000e+00f));
  inverse[(15)] = (inverse[(15)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 3211264))] * -1.000000e+00f));
  inverse[(15)] = (inverse[(15)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 3612672))] * -1.000000e+00f) * 1.250000e-01f));
  inverse[(15)] = (inverse[(15)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4014080))] * -1.000000e+00f) * -8.000000e+00f));
  inverse[(15)] = (inverse[(15)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4415488))] * -1.000000e+00f));
  inverse[(15)] = (inverse[(15)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 5218304))] * -1.000000e+00f));
  inverse[(15)] = (inverse[(15)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 5619712))]);
  inverse[(15)] = (inverse[(15)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6021120))] * 1.250000e-01f));
  inverse[(15)] = (inverse[(15)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6422528))] * -8.000000e+00f));
  inverse[(15)] = (inverse[(15)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6823936))]);
  inverse[(15)] = (inverse[(15)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 7626752))] * 1.250000e-01f) * -1.000000e+00f));
  inverse[(15)] = (inverse[(15)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8028160))] * 1.250000e-01f));
  inverse[(15)] = (inverse[(15)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8429568))] * 1.250000e-01f) * 1.250000e-01f));
  inverse[(15)] = (inverse[(15)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8830976))] * 1.250000e-01f) * -8.000000e+00f));
  inverse[(15)] = (inverse[(15)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 9232384))] * 1.250000e-01f));
  inverse[(15)] = (inverse[(15)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10035200))] * -8.000000e+00f) * -1.000000e+00f));
  inverse[(15)] = (inverse[(15)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10436608))] * -8.000000e+00f));
  inverse[(15)] = (inverse[(15)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10838016))] * -8.000000e+00f) * 1.250000e-01f));
  inverse[(15)] = (inverse[(15)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 11239424))] * -8.000000e+00f) * -8.000000e+00f));
  inverse[(15)] = (inverse[(15)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 11640832))] * -8.000000e+00f));
  inverse[(15)] = (inverse[(15)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 12443648))] * -1.000000e+00f));
  inverse[(15)] = (inverse[(15)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 12845056))]);
  inverse[(15)] = (inverse[(15)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 13246464))] * 1.250000e-01f));
  inverse[(15)] = (inverse[(15)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 13647872))] * -8.000000e+00f));
  inverse[(15)] = (inverse[(15)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 14049280))]);
  for (int ax2_inner = 0; ax2_inner < 4; ++ax2_inner) {
    for (int ax3_inner = 0; ax3_inner < 4; ++ax3_inner) {
      ((float*)T_relu)[((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 14) * 224) + (ax2_inner * 56)) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 14) * 4)) + ax3_inner))] = max((float)((inverse[(((ax2_inner * 4) + ax3_inner))] + ((float*)placeholder)[(((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196))])), (float)(0.000000e+00f));
    }
  }
}

extern "C" __global__ void fused_nn_contrib_conv2d_winograd_without_weight_transform_add_add_nn_relu_1_kernel1(void* __restrict__ placeholder, float* __restrict__ data_pack, float* __restrict__ bgemm) {
  float bgemm_local[112];
  __shared__ float placeholder_shared[1024];
  __shared__ float data_pack_shared[896];
  #pragma unroll
  for (int co_c_init = 0; co_c_init < 4; ++co_c_init) {
    bgemm_local[(co_c_init)] = 0.000000e+00f;
    bgemm_local[((co_c_init + 28))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 56))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 84))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 4))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 32))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 60))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 88))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 8))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 36))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 64))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 92))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 12))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 40))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 68))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 96))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 16))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 44))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 72))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 100))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 20))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 48))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 76))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 104))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 24))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 52))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 80))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 108))] = 0.000000e+00f;
  }
  for (int ci_outer = 0; ci_outer < 32; ++ci_outer) {
    __syncthreads();
    #pragma unroll
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer = 0; ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer < 8; ++ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer) {
      placeholder_shared[((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 128) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)))] = ((float*)placeholder)[(((((((((int)blockIdx.z) * 65536) + (ci_outer * 2048)) + (ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 256)) + (((int)blockIdx.y) * 128)) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)))];
    }
    #pragma unroll
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer1 < 7; ++ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer1) {
      data_pack_shared[((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer1 * 128) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)))] = data_pack[((((((((int)blockIdx.z) * 401408) + (ci_outer * 12544)) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer1 * 128) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)) / 112) * 1568)) + (((int)blockIdx.x) * 112)) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer1 * 128) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)) % 112)))];
    }
    __syncthreads();
    for (int ci_inner = 0; ci_inner < 8; ++ci_inner) {
      #pragma unroll
      for (int co_c = 0; co_c < 4; ++co_c) {
        bgemm_local[(co_c)] = (bgemm_local[(co_c)] + (placeholder_shared[((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c))] * data_pack_shared[(((ci_inner * 112) + ((int)threadIdx.x)))]));
        bgemm_local[((co_c + 28))] = (bgemm_local[((co_c + 28))] + (placeholder_shared[(((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c) + 32))] * data_pack_shared[(((ci_inner * 112) + ((int)threadIdx.x)))]));
        bgemm_local[((co_c + 56))] = (bgemm_local[((co_c + 56))] + (placeholder_shared[(((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c) + 64))] * data_pack_shared[(((ci_inner * 112) + ((int)threadIdx.x)))]));
        bgemm_local[((co_c + 84))] = (bgemm_local[((co_c + 84))] + (placeholder_shared[(((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c) + 96))] * data_pack_shared[(((ci_inner * 112) + ((int)threadIdx.x)))]));
        bgemm_local[((co_c + 4))] = (bgemm_local[((co_c + 4))] + (placeholder_shared[((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 16))]));
        bgemm_local[((co_c + 32))] = (bgemm_local[((co_c + 32))] + (placeholder_shared[(((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c) + 32))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 16))]));
        bgemm_local[((co_c + 60))] = (bgemm_local[((co_c + 60))] + (placeholder_shared[(((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c) + 64))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 16))]));
        bgemm_local[((co_c + 88))] = (bgemm_local[((co_c + 88))] + (placeholder_shared[(((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c) + 96))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 16))]));
        bgemm_local[((co_c + 8))] = (bgemm_local[((co_c + 8))] + (placeholder_shared[((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 32))]));
        bgemm_local[((co_c + 36))] = (bgemm_local[((co_c + 36))] + (placeholder_shared[(((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c) + 32))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 32))]));
        bgemm_local[((co_c + 64))] = (bgemm_local[((co_c + 64))] + (placeholder_shared[(((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c) + 64))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 32))]));
        bgemm_local[((co_c + 92))] = (bgemm_local[((co_c + 92))] + (placeholder_shared[(((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c) + 96))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 32))]));
        bgemm_local[((co_c + 12))] = (bgemm_local[((co_c + 12))] + (placeholder_shared[((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 48))]));
        bgemm_local[((co_c + 40))] = (bgemm_local[((co_c + 40))] + (placeholder_shared[(((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c) + 32))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 48))]));
        bgemm_local[((co_c + 68))] = (bgemm_local[((co_c + 68))] + (placeholder_shared[(((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c) + 64))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 48))]));
        bgemm_local[((co_c + 96))] = (bgemm_local[((co_c + 96))] + (placeholder_shared[(((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c) + 96))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 48))]));
        bgemm_local[((co_c + 16))] = (bgemm_local[((co_c + 16))] + (placeholder_shared[((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 64))]));
        bgemm_local[((co_c + 44))] = (bgemm_local[((co_c + 44))] + (placeholder_shared[(((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c) + 32))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 64))]));
        bgemm_local[((co_c + 72))] = (bgemm_local[((co_c + 72))] + (placeholder_shared[(((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c) + 64))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 64))]));
        bgemm_local[((co_c + 100))] = (bgemm_local[((co_c + 100))] + (placeholder_shared[(((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c) + 96))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 64))]));
        bgemm_local[((co_c + 20))] = (bgemm_local[((co_c + 20))] + (placeholder_shared[((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 80))]));
        bgemm_local[((co_c + 48))] = (bgemm_local[((co_c + 48))] + (placeholder_shared[(((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c) + 32))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 80))]));
        bgemm_local[((co_c + 76))] = (bgemm_local[((co_c + 76))] + (placeholder_shared[(((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c) + 64))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 80))]));
        bgemm_local[((co_c + 104))] = (bgemm_local[((co_c + 104))] + (placeholder_shared[(((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c) + 96))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 80))]));
        bgemm_local[((co_c + 24))] = (bgemm_local[((co_c + 24))] + (placeholder_shared[((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 96))]));
        bgemm_local[((co_c + 52))] = (bgemm_local[((co_c + 52))] + (placeholder_shared[(((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c) + 32))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 96))]));
        bgemm_local[((co_c + 80))] = (bgemm_local[((co_c + 80))] + (placeholder_shared[(((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c) + 64))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 96))]));
        bgemm_local[((co_c + 108))] = (bgemm_local[((co_c + 108))] + (placeholder_shared[(((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c) + 96))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 96))]));
      }
    }
  }
  #pragma unroll
  for (int co_inner_inner_inner = 0; co_inner_inner_inner < 4; ++co_inner_inner_inner) {
    bgemm[(((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)))] = bgemm_local[(co_inner_inner_inner)];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 50176))] = bgemm_local[((co_inner_inner_inner + 28))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 100352))] = bgemm_local[((co_inner_inner_inner + 56))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 150528))] = bgemm_local[((co_inner_inner_inner + 84))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 16))] = bgemm_local[((co_inner_inner_inner + 4))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 50192))] = bgemm_local[((co_inner_inner_inner + 32))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 100368))] = bgemm_local[((co_inner_inner_inner + 60))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 150544))] = bgemm_local[((co_inner_inner_inner + 88))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 32))] = bgemm_local[((co_inner_inner_inner + 8))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 50208))] = bgemm_local[((co_inner_inner_inner + 36))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 100384))] = bgemm_local[((co_inner_inner_inner + 64))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 150560))] = bgemm_local[((co_inner_inner_inner + 92))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 48))] = bgemm_local[((co_inner_inner_inner + 12))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 50224))] = bgemm_local[((co_inner_inner_inner + 40))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 100400))] = bgemm_local[((co_inner_inner_inner + 68))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 150576))] = bgemm_local[((co_inner_inner_inner + 96))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 64))] = bgemm_local[((co_inner_inner_inner + 16))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 50240))] = bgemm_local[((co_inner_inner_inner + 44))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 100416))] = bgemm_local[((co_inner_inner_inner + 72))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 150592))] = bgemm_local[((co_inner_inner_inner + 100))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 80))] = bgemm_local[((co_inner_inner_inner + 20))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 50256))] = bgemm_local[((co_inner_inner_inner + 48))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 100432))] = bgemm_local[((co_inner_inner_inner + 76))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 150608))] = bgemm_local[((co_inner_inner_inner + 104))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 96))] = bgemm_local[((co_inner_inner_inner + 24))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 50272))] = bgemm_local[((co_inner_inner_inner + 52))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 100448))] = bgemm_local[((co_inner_inner_inner + 80))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 150624))] = bgemm_local[((co_inner_inner_inner + 108))];
  }
}

extern "C" __global__ void fused_nn_contrib_conv2d_winograd_without_weight_transform_add_add_nn_relu_2_kernel0(void* __restrict__ placeholder, float* __restrict__ data_pack) {
  float d[16];
  float data_pack_local[16];
  for (int eps = 0; eps < 4; ++eps) {
    for (int nu = 0; nu < 4; ++nu) {
      d[(((eps * 4) + nu))] = (((((1 <= ((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196) / 14) * 2) + eps)) && (((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196) / 14) * 2) + eps) < 29)) && (1 <= (((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 14) * 2) + nu))) && ((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 14) * 2) + nu) < 29)) ? (float)((float*)placeholder)[((((((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 6272) / 196) * 100352) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 6272) * 784)) + (((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196) / 14) * 56)) + (eps * 28)) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 14) * 2)) + nu) - 29))] : (float)0.000000e+00f);
    }
  }
  data_pack_local[(0)] = 0.000000e+00f;
  data_pack_local[(0)] = (data_pack_local[(0)] + d[(0)]);
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(2)] * -1.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(8)] * -1.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(10)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(1)] = 0.000000e+00f;
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(1)] * -1.000000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + d[(2)]);
  data_pack_local[(1)] = (data_pack_local[(1)] + ((d[(9)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(2)] = 0.000000e+00f;
  data_pack_local[(2)] = (data_pack_local[(2)] + d[(1)]);
  data_pack_local[(2)] = (data_pack_local[(2)] + d[(2)]);
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(9)] * -1.000000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(3)] = 0.000000e+00f;
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(1)] * -1.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + d[(3)]);
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(9)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(11)] * -1.000000e+00f));
  data_pack_local[(4)] = 0.000000e+00f;
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(4)] * -1.000000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(6)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + d[(8)]);
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(5)] = 0.000000e+00f;
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(5)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(6)] * -1.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(9)] * -1.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + d[(10)]);
  data_pack_local[(6)] = 0.000000e+00f;
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(5)] * -1.000000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(6)] * -1.000000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + d[(9)]);
  data_pack_local[(6)] = (data_pack_local[(6)] + d[(10)]);
  data_pack_local[(7)] = 0.000000e+00f;
  data_pack_local[(7)] = (data_pack_local[(7)] + ((d[(5)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(7)] * -1.000000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(9)] * -1.000000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + d[(11)]);
  data_pack_local[(8)] = 0.000000e+00f;
  data_pack_local[(8)] = (data_pack_local[(8)] + d[(4)]);
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(6)] * -1.000000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + d[(8)]);
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(9)] = 0.000000e+00f;
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(5)] * -1.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + d[(6)]);
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(9)] * -1.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + d[(10)]);
  data_pack_local[(10)] = 0.000000e+00f;
  data_pack_local[(10)] = (data_pack_local[(10)] + d[(5)]);
  data_pack_local[(10)] = (data_pack_local[(10)] + d[(6)]);
  data_pack_local[(10)] = (data_pack_local[(10)] + d[(9)]);
  data_pack_local[(10)] = (data_pack_local[(10)] + d[(10)]);
  data_pack_local[(11)] = 0.000000e+00f;
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(5)] * -1.000000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + d[(7)]);
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(9)] * -1.000000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + d[(11)]);
  data_pack_local[(12)] = 0.000000e+00f;
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(4)] * -1.000000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(6)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + d[(12)]);
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(14)] * -1.000000e+00f));
  data_pack_local[(13)] = 0.000000e+00f;
  data_pack_local[(13)] = (data_pack_local[(13)] + ((d[(5)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(6)] * -1.000000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(13)] * -1.000000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + d[(14)]);
  data_pack_local[(14)] = 0.000000e+00f;
  data_pack_local[(14)] = (data_pack_local[(14)] + (d[(5)] * -1.000000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + (d[(6)] * -1.000000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + d[(13)]);
  data_pack_local[(14)] = (data_pack_local[(14)] + d[(14)]);
  data_pack_local[(15)] = 0.000000e+00f;
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(5)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + (d[(7)] * -1.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + (d[(13)] * -1.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + d[(15)]);
  for (int eps1 = 0; eps1 < 4; ++eps1) {
    for (int nu1 = 0; nu1 < 4; ++nu1) {
      data_pack[(((((eps1 * 3211264) + (nu1 * 802816)) + (((int)blockIdx.x) * 128)) + ((int)threadIdx.x)))] = data_pack_local[(((eps1 * 4) + nu1))];
    }
  }
}

extern "C" __global__ void fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_kernel2(float* __restrict__ bgemm, void* __restrict__ T_relu, void* __restrict__ placeholder) {
  float inverse[4];
  inverse[(0)] = 0.000000e+00f;
  inverse[(0)] = (inverse[(0)] + bgemm[((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 802816))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 1605632))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 3211264))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4014080))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4816896))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6422528))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 7225344))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8028160))]);
  inverse[(1)] = 0.000000e+00f;
  inverse[(1)] = (inverse[(1)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 802816))] * -1.000000e+00f));
  inverse[(1)] = (inverse[(1)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 1605632))]);
  inverse[(1)] = (inverse[(1)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 2408448))]);
  inverse[(1)] = (inverse[(1)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4014080))] * -1.000000e+00f));
  inverse[(1)] = (inverse[(1)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4816896))]);
  inverse[(1)] = (inverse[(1)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 5619712))]);
  inverse[(1)] = (inverse[(1)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 7225344))] * -1.000000e+00f));
  inverse[(1)] = (inverse[(1)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8028160))]);
  inverse[(1)] = (inverse[(1)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8830976))]);
  inverse[(2)] = 0.000000e+00f;
  inverse[(2)] = (inverse[(2)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 3211264))] * -1.000000e+00f));
  inverse[(2)] = (inverse[(2)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4014080))] * -1.000000e+00f));
  inverse[(2)] = (inverse[(2)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4816896))] * -1.000000e+00f));
  inverse[(2)] = (inverse[(2)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6422528))]);
  inverse[(2)] = (inverse[(2)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 7225344))]);
  inverse[(2)] = (inverse[(2)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8028160))]);
  inverse[(2)] = (inverse[(2)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 9633792))]);
  inverse[(2)] = (inverse[(2)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10436608))]);
  inverse[(2)] = (inverse[(2)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 11239424))]);
  inverse[(3)] = 0.000000e+00f;
  inverse[(3)] = (inverse[(3)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4014080))] * -1.000000e+00f) * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4816896))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 5619712))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 7225344))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8028160))]);
  inverse[(3)] = (inverse[(3)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8830976))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10436608))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 11239424))]);
  inverse[(3)] = (inverse[(3)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 12042240))]);
  for (int ax2_inner = 0; ax2_inner < 2; ++ax2_inner) {
    for (int ax3_inner = 0; ax3_inner < 2; ++ax3_inner) {
      ((float*)T_relu)[((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 14) * 56) + (ax2_inner * 28)) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 14) * 2)) + ax3_inner))] = max((float)((inverse[(((ax2_inner * 2) + ax3_inner))] + ((float*)placeholder)[(((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196))])), (float)(0.000000e+00f));
    }
  }
}

extern "C" __global__ void fused_nn_contrib_conv2d_winograd_without_weight_transform_add_kernel0(void* __restrict__ placeholder, float* __restrict__ data_pack) {
  float d[16];
  float data_pack_local[16];
  for (int eps = 0; eps < 4; ++eps) {
    for (int nu = 0; nu < 4; ++nu) {
      d[(((eps * 4) + nu))] = (((((1 <= ((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196) / 14) * 2) + eps)) && (((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196) / 14) * 2) + eps) < 29)) && (1 <= (((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 14) * 2) + nu))) && ((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 14) * 2) + nu) < 29)) ? (float)((float*)placeholder)[((((((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 6272) / 196) * 100352) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 6272) * 784)) + (((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196) / 14) * 56)) + (eps * 28)) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 14) * 2)) + nu) - 29))] : (float)0.000000e+00f);
    }
  }
  data_pack_local[(0)] = 0.000000e+00f;
  data_pack_local[(0)] = (data_pack_local[(0)] + d[(0)]);
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(2)] * -1.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(8)] * -1.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(10)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(1)] = 0.000000e+00f;
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(1)] * -1.000000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + d[(2)]);
  data_pack_local[(1)] = (data_pack_local[(1)] + ((d[(9)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(2)] = 0.000000e+00f;
  data_pack_local[(2)] = (data_pack_local[(2)] + d[(1)]);
  data_pack_local[(2)] = (data_pack_local[(2)] + d[(2)]);
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(9)] * -1.000000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(3)] = 0.000000e+00f;
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(1)] * -1.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + d[(3)]);
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(9)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(11)] * -1.000000e+00f));
  data_pack_local[(4)] = 0.000000e+00f;
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(4)] * -1.000000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(6)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + d[(8)]);
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(5)] = 0.000000e+00f;
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(5)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(6)] * -1.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(9)] * -1.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + d[(10)]);
  data_pack_local[(6)] = 0.000000e+00f;
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(5)] * -1.000000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(6)] * -1.000000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + d[(9)]);
  data_pack_local[(6)] = (data_pack_local[(6)] + d[(10)]);
  data_pack_local[(7)] = 0.000000e+00f;
  data_pack_local[(7)] = (data_pack_local[(7)] + ((d[(5)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(7)] * -1.000000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(9)] * -1.000000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + d[(11)]);
  data_pack_local[(8)] = 0.000000e+00f;
  data_pack_local[(8)] = (data_pack_local[(8)] + d[(4)]);
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(6)] * -1.000000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + d[(8)]);
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(9)] = 0.000000e+00f;
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(5)] * -1.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + d[(6)]);
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(9)] * -1.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + d[(10)]);
  data_pack_local[(10)] = 0.000000e+00f;
  data_pack_local[(10)] = (data_pack_local[(10)] + d[(5)]);
  data_pack_local[(10)] = (data_pack_local[(10)] + d[(6)]);
  data_pack_local[(10)] = (data_pack_local[(10)] + d[(9)]);
  data_pack_local[(10)] = (data_pack_local[(10)] + d[(10)]);
  data_pack_local[(11)] = 0.000000e+00f;
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(5)] * -1.000000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + d[(7)]);
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(9)] * -1.000000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + d[(11)]);
  data_pack_local[(12)] = 0.000000e+00f;
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(4)] * -1.000000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(6)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + d[(12)]);
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(14)] * -1.000000e+00f));
  data_pack_local[(13)] = 0.000000e+00f;
  data_pack_local[(13)] = (data_pack_local[(13)] + ((d[(5)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(6)] * -1.000000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(13)] * -1.000000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + d[(14)]);
  data_pack_local[(14)] = 0.000000e+00f;
  data_pack_local[(14)] = (data_pack_local[(14)] + (d[(5)] * -1.000000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + (d[(6)] * -1.000000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + d[(13)]);
  data_pack_local[(14)] = (data_pack_local[(14)] + d[(14)]);
  data_pack_local[(15)] = 0.000000e+00f;
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(5)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + (d[(7)] * -1.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + (d[(13)] * -1.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + d[(15)]);
  for (int eps1 = 0; eps1 < 4; ++eps1) {
    for (int nu1 = 0; nu1 < 4; ++nu1) {
      data_pack[(((((eps1 * 3211264) + (nu1 * 802816)) + (((int)blockIdx.x) * 128)) + ((int)threadIdx.x)))] = data_pack_local[(((eps1 * 4) + nu1))];
    }
  }
}

extern "C" __global__ void fused_nn_conv2d_add_nn_relu_2_kernel0(void* __restrict__ placeholder, void* __restrict__ placeholder1, void* __restrict__ T_relu, void* __restrict__ placeholder2) {
  float compute[112];
  __shared__ float pad_temp_shared[1682];
  __shared__ float placeholder_shared[2304];
  compute[(0)] = 0.000000e+00f;
  compute[(8)] = 0.000000e+00f;
  compute[(16)] = 0.000000e+00f;
  compute[(24)] = 0.000000e+00f;
  compute[(32)] = 0.000000e+00f;
  compute[(40)] = 0.000000e+00f;
  compute[(48)] = 0.000000e+00f;
  compute[(56)] = 0.000000e+00f;
  compute[(64)] = 0.000000e+00f;
  compute[(72)] = 0.000000e+00f;
  compute[(80)] = 0.000000e+00f;
  compute[(88)] = 0.000000e+00f;
  compute[(96)] = 0.000000e+00f;
  compute[(104)] = 0.000000e+00f;
  compute[(1)] = 0.000000e+00f;
  compute[(9)] = 0.000000e+00f;
  compute[(17)] = 0.000000e+00f;
  compute[(25)] = 0.000000e+00f;
  compute[(33)] = 0.000000e+00f;
  compute[(41)] = 0.000000e+00f;
  compute[(49)] = 0.000000e+00f;
  compute[(57)] = 0.000000e+00f;
  compute[(65)] = 0.000000e+00f;
  compute[(73)] = 0.000000e+00f;
  compute[(81)] = 0.000000e+00f;
  compute[(89)] = 0.000000e+00f;
  compute[(97)] = 0.000000e+00f;
  compute[(105)] = 0.000000e+00f;
  compute[(2)] = 0.000000e+00f;
  compute[(10)] = 0.000000e+00f;
  compute[(18)] = 0.000000e+00f;
  compute[(26)] = 0.000000e+00f;
  compute[(34)] = 0.000000e+00f;
  compute[(42)] = 0.000000e+00f;
  compute[(50)] = 0.000000e+00f;
  compute[(58)] = 0.000000e+00f;
  compute[(66)] = 0.000000e+00f;
  compute[(74)] = 0.000000e+00f;
  compute[(82)] = 0.000000e+00f;
  compute[(90)] = 0.000000e+00f;
  compute[(98)] = 0.000000e+00f;
  compute[(106)] = 0.000000e+00f;
  compute[(3)] = 0.000000e+00f;
  compute[(11)] = 0.000000e+00f;
  compute[(19)] = 0.000000e+00f;
  compute[(27)] = 0.000000e+00f;
  compute[(35)] = 0.000000e+00f;
  compute[(43)] = 0.000000e+00f;
  compute[(51)] = 0.000000e+00f;
  compute[(59)] = 0.000000e+00f;
  compute[(67)] = 0.000000e+00f;
  compute[(75)] = 0.000000e+00f;
  compute[(83)] = 0.000000e+00f;
  compute[(91)] = 0.000000e+00f;
  compute[(99)] = 0.000000e+00f;
  compute[(107)] = 0.000000e+00f;
  compute[(4)] = 0.000000e+00f;
  compute[(12)] = 0.000000e+00f;
  compute[(20)] = 0.000000e+00f;
  compute[(28)] = 0.000000e+00f;
  compute[(36)] = 0.000000e+00f;
  compute[(44)] = 0.000000e+00f;
  compute[(52)] = 0.000000e+00f;
  compute[(60)] = 0.000000e+00f;
  compute[(68)] = 0.000000e+00f;
  compute[(76)] = 0.000000e+00f;
  compute[(84)] = 0.000000e+00f;
  compute[(92)] = 0.000000e+00f;
  compute[(100)] = 0.000000e+00f;
  compute[(108)] = 0.000000e+00f;
  compute[(5)] = 0.000000e+00f;
  compute[(13)] = 0.000000e+00f;
  compute[(21)] = 0.000000e+00f;
  compute[(29)] = 0.000000e+00f;
  compute[(37)] = 0.000000e+00f;
  compute[(45)] = 0.000000e+00f;
  compute[(53)] = 0.000000e+00f;
  compute[(61)] = 0.000000e+00f;
  compute[(69)] = 0.000000e+00f;
  compute[(77)] = 0.000000e+00f;
  compute[(85)] = 0.000000e+00f;
  compute[(93)] = 0.000000e+00f;
  compute[(101)] = 0.000000e+00f;
  compute[(109)] = 0.000000e+00f;
  compute[(6)] = 0.000000e+00f;
  compute[(14)] = 0.000000e+00f;
  compute[(22)] = 0.000000e+00f;
  compute[(30)] = 0.000000e+00f;
  compute[(38)] = 0.000000e+00f;
  compute[(46)] = 0.000000e+00f;
  compute[(54)] = 0.000000e+00f;
  compute[(62)] = 0.000000e+00f;
  compute[(70)] = 0.000000e+00f;
  compute[(78)] = 0.000000e+00f;
  compute[(86)] = 0.000000e+00f;
  compute[(94)] = 0.000000e+00f;
  compute[(102)] = 0.000000e+00f;
  compute[(110)] = 0.000000e+00f;
  compute[(7)] = 0.000000e+00f;
  compute[(15)] = 0.000000e+00f;
  compute[(23)] = 0.000000e+00f;
  compute[(31)] = 0.000000e+00f;
  compute[(39)] = 0.000000e+00f;
  compute[(47)] = 0.000000e+00f;
  compute[(55)] = 0.000000e+00f;
  compute[(63)] = 0.000000e+00f;
  compute[(71)] = 0.000000e+00f;
  compute[(79)] = 0.000000e+00f;
  compute[(87)] = 0.000000e+00f;
  compute[(95)] = 0.000000e+00f;
  compute[(103)] = 0.000000e+00f;
  compute[(111)] = 0.000000e+00f;
  for (int rc_outer = 0; rc_outer < 64; ++rc_outer) {
    __syncthreads();
    if (((((int)threadIdx.z) * 106) + (((int)threadIdx.x) * 8)) < 1682) {
      pad_temp_shared[(((((int)threadIdx.z) * 106) + (((int)threadIdx.x) * 8)))] = (((29 <= (((((int)threadIdx.z) * 106) + (((int)threadIdx.x) * 8)) % 841)) && (1 <= (((((int)threadIdx.z) * 106) + (((int)threadIdx.x) * 8)) % 29))) ? (float)((float*)placeholder)[((((((((((int)blockIdx.z) >> 1) * 100352) + (rc_outer * 1568)) + ((((((int)threadIdx.z) * 106) + (((int)threadIdx.x) * 8)) / 841) * 784)) + (((((((int)threadIdx.z) * 106) + (((int)threadIdx.x) * 8)) % 841) / 29) * 28)) + (((((int)threadIdx.z) * 106) + (((int)threadIdx.x) * 8)) % 29)) - 29))] : (float)0.000000e+00f);
    }
    if (((((int)threadIdx.z) * 106) + (((int)threadIdx.x) * 8)) < 1681) {
      pad_temp_shared[((((((int)threadIdx.z) * 106) + (((int)threadIdx.x) * 8)) + 1))] = (((29 <= ((((((int)threadIdx.z) * 106) + (((int)threadIdx.x) * 8)) + 1) % 841)) && (1 <= ((((((int)threadIdx.z) * 106) + (((int)threadIdx.x) * 8)) + 1) % 29))) ? (float)((float*)placeholder)[((((((((((int)blockIdx.z) >> 1) * 100352) + (rc_outer * 1568)) + (((((((int)threadIdx.z) * 106) + (((int)threadIdx.x) * 8)) + 1) / 841) * 784)) + ((((((((int)threadIdx.z) * 106) + (((int)threadIdx.x) * 8)) + 1) % 841) / 29) * 28)) + ((((((int)threadIdx.z) * 106) + (((int)threadIdx.x) * 8)) + 1) % 29)) - 29))] : (float)0.000000e+00f);
    }
    if (((((int)threadIdx.z) * 106) + (((int)threadIdx.x) * 8)) < 1680) {
      if (((int)threadIdx.x) < 13) {
        pad_temp_shared[((((((int)threadIdx.z) * 106) + (((int)threadIdx.x) * 8)) + 2))] = (((29 <= ((((((int)threadIdx.z) * 106) + (((int)threadIdx.x) * 8)) + 2) % 841)) && (1 <= ((((((int)threadIdx.z) * 106) + (((int)threadIdx.x) * 8)) + 2) % 29))) ? (float)((float*)placeholder)[((((((((((int)blockIdx.z) >> 1) * 100352) + (rc_outer * 1568)) + (((((((int)threadIdx.z) * 106) + (((int)threadIdx.x) * 8)) + 2) / 841) * 784)) + ((((((((int)threadIdx.z) * 106) + (((int)threadIdx.x) * 8)) + 2) % 841) / 29) * 28)) + ((((((int)threadIdx.z) * 106) + (((int)threadIdx.x) * 8)) + 2) % 29)) - 29))] : (float)0.000000e+00f);
      }
    }
    if (((((int)threadIdx.z) * 106) + (((int)threadIdx.x) * 8)) < 1679) {
      if (((int)threadIdx.x) < 13) {
        pad_temp_shared[((((((int)threadIdx.z) * 106) + (((int)threadIdx.x) * 8)) + 3))] = (((29 <= ((((((int)threadIdx.z) * 106) + (((int)threadIdx.x) * 8)) + 3) % 841)) && (1 <= ((((((int)threadIdx.z) * 106) + (((int)threadIdx.x) * 8)) + 3) % 29))) ? (float)((float*)placeholder)[((((((((((int)blockIdx.z) >> 1) * 100352) + (rc_outer * 1568)) + (((((((int)threadIdx.z) * 106) + (((int)threadIdx.x) * 8)) + 3) / 841) * 784)) + ((((((((int)threadIdx.z) * 106) + (((int)threadIdx.x) * 8)) + 3) % 841) / 29) * 28)) + ((((((int)threadIdx.z) * 106) + (((int)threadIdx.x) * 8)) + 3) % 29)) - 29))] : (float)0.000000e+00f);
      }
    }
    if (((((int)threadIdx.z) * 106) + (((int)threadIdx.x) * 8)) < 1678) {
      if (((int)threadIdx.x) < 13) {
        pad_temp_shared[((((((int)threadIdx.z) * 106) + (((int)threadIdx.x) * 8)) + 4))] = (((29 <= ((((((int)threadIdx.z) * 106) + (((int)threadIdx.x) * 8)) + 4) % 841)) && (1 <= ((((((int)threadIdx.z) * 106) + (((int)threadIdx.x) * 8)) + 4) % 29))) ? (float)((float*)placeholder)[((((((((((int)blockIdx.z) >> 1) * 100352) + (rc_outer * 1568)) + (((((((int)threadIdx.z) * 106) + (((int)threadIdx.x) * 8)) + 4) / 841) * 784)) + ((((((((int)threadIdx.z) * 106) + (((int)threadIdx.x) * 8)) + 4) % 841) / 29) * 28)) + ((((((int)threadIdx.z) * 106) + (((int)threadIdx.x) * 8)) + 4) % 29)) - 29))] : (float)0.000000e+00f);
      }
    }
    if (((((int)threadIdx.z) * 106) + (((int)threadIdx.x) * 8)) < 1677) {
      if (((int)threadIdx.x) < 13) {
        pad_temp_shared[((((((int)threadIdx.z) * 106) + (((int)threadIdx.x) * 8)) + 5))] = (((29 <= ((((((int)threadIdx.z) * 106) + (((int)threadIdx.x) * 8)) + 5) % 841)) && (1 <= ((((((int)threadIdx.z) * 106) + (((int)threadIdx.x) * 8)) + 5) % 29))) ? (float)((float*)placeholder)[((((((((((int)blockIdx.z) >> 1) * 100352) + (rc_outer * 1568)) + (((((((int)threadIdx.z) * 106) + (((int)threadIdx.x) * 8)) + 5) / 841) * 784)) + ((((((((int)threadIdx.z) * 106) + (((int)threadIdx.x) * 8)) + 5) % 841) / 29) * 28)) + ((((((int)threadIdx.z) * 106) + (((int)threadIdx.x) * 8)) + 5) % 29)) - 29))] : (float)0.000000e+00f);
      }
    }
    if (((((int)threadIdx.z) * 106) + (((int)threadIdx.x) * 8)) < 1676) {
      if (((int)threadIdx.x) < 13) {
        pad_temp_shared[((((((int)threadIdx.z) * 106) + (((int)threadIdx.x) * 8)) + 6))] = (((29 <= ((((((int)threadIdx.z) * 106) + (((int)threadIdx.x) * 8)) + 6) % 841)) && (1 <= ((((((int)threadIdx.z) * 106) + (((int)threadIdx.x) * 8)) + 6) % 29))) ? (float)((float*)placeholder)[((((((((((int)blockIdx.z) >> 1) * 100352) + (rc_outer * 1568)) + (((((((int)threadIdx.z) * 106) + (((int)threadIdx.x) * 8)) + 6) / 841) * 784)) + ((((((((int)threadIdx.z) * 106) + (((int)threadIdx.x) * 8)) + 6) % 841) / 29) * 28)) + ((((((int)threadIdx.z) * 106) + (((int)threadIdx.x) * 8)) + 6) % 29)) - 29))] : (float)0.000000e+00f);
      }
    }
    if (((((int)threadIdx.z) * 106) + (((int)threadIdx.x) * 8)) < 1675) {
      if (((int)threadIdx.x) < 13) {
        pad_temp_shared[((((((int)threadIdx.z) * 106) + (((int)threadIdx.x) * 8)) + 7))] = (((29 <= ((((((int)threadIdx.z) * 106) + (((int)threadIdx.x) * 8)) + 7) % 841)) && (1 <= ((((((int)threadIdx.z) * 106) + (((int)threadIdx.x) * 8)) + 7) % 29))) ? (float)((float*)placeholder)[((((((((((int)blockIdx.z) >> 1) * 100352) + (rc_outer * 1568)) + (((((((int)threadIdx.z) * 106) + (((int)threadIdx.x) * 8)) + 7) / 841) * 784)) + ((((((((int)threadIdx.z) * 106) + (((int)threadIdx.x) * 8)) + 7) % 841) / 29) * 28)) + ((((((int)threadIdx.z) * 106) + (((int)threadIdx.x) * 8)) + 7) % 29)) - 29))] : (float)0.000000e+00f);
      }
    }
    placeholder_shared[(((((int)threadIdx.z) * 144) + (((int)threadIdx.x) * 11)))] = ((float*)placeholder1)[(((((((((int)blockIdx.z) & 1) * 147456) + (((int)threadIdx.z) * 9216)) + (((((int)threadIdx.x) * 11) / 18) * 1152)) + (rc_outer * 18)) + ((((int)threadIdx.x) * 11) % 18)))];
    if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 11) + 1) / 18)) < 128) {
      if (((((int)threadIdx.z) * 16) + (((((int)threadIdx.x) * 11) + 1) / 9)) < 256) {
        if (((((int)threadIdx.z) * 48) + (((((int)threadIdx.x) * 11) + 1) / 3)) < 768) {
          if (((((int)threadIdx.z) * 144) + (((int)threadIdx.x) * 11)) < 2303) {
            if (((int)threadIdx.x) < 13) {
              placeholder_shared[((((((int)threadIdx.z) * 144) + (((int)threadIdx.x) * 11)) + 1))] = ((float*)placeholder1)[(((((((((int)blockIdx.z) & 1) * 147456) + (((int)threadIdx.z) * 9216)) + ((((((int)threadIdx.x) * 11) + 1) / 18) * 1152)) + (rc_outer * 18)) + (((((int)threadIdx.x) * 11) + 1) % 18)))];
            }
          }
        }
      }
    }
    if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 11) + 2) / 18)) < 128) {
      if (((((int)threadIdx.z) * 16) + (((((int)threadIdx.x) * 11) + 2) / 9)) < 256) {
        if (((((int)threadIdx.z) * 48) + (((((int)threadIdx.x) * 11) + 2) / 3)) < 768) {
          if (((((int)threadIdx.z) * 144) + (((int)threadIdx.x) * 11)) < 2302) {
            if (((int)threadIdx.x) < 13) {
              placeholder_shared[((((((int)threadIdx.z) * 144) + (((int)threadIdx.x) * 11)) + 2))] = ((float*)placeholder1)[(((((((((int)blockIdx.z) & 1) * 147456) + (((int)threadIdx.z) * 9216)) + ((((((int)threadIdx.x) * 11) + 2) / 18) * 1152)) + (rc_outer * 18)) + (((((int)threadIdx.x) * 11) + 2) % 18)))];
            }
          }
        }
      }
    }
    if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 11) + 3) / 18)) < 128) {
      if (((((int)threadIdx.z) * 16) + (((((int)threadIdx.x) * 11) + 3) / 9)) < 256) {
        if (((((int)threadIdx.z) * 48) + ((((int)threadIdx.x) * 11) / 3)) < 767) {
          if (((((int)threadIdx.z) * 144) + (((int)threadIdx.x) * 11)) < 2301) {
            if (((int)threadIdx.x) < 13) {
              placeholder_shared[((((((int)threadIdx.z) * 144) + (((int)threadIdx.x) * 11)) + 3))] = ((float*)placeholder1)[(((((((((int)blockIdx.z) & 1) * 147456) + (((int)threadIdx.z) * 9216)) + ((((((int)threadIdx.x) * 11) + 3) / 18) * 1152)) + (rc_outer * 18)) + (((((int)threadIdx.x) * 11) + 3) % 18)))];
            }
          }
        }
      }
    }
    if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 11) + 4) / 18)) < 128) {
      if (((((int)threadIdx.z) * 16) + (((((int)threadIdx.x) * 11) + 4) / 9)) < 256) {
        if (((((int)threadIdx.z) * 48) + (((((int)threadIdx.x) * 11) + 4) / 3)) < 768) {
          if (((((int)threadIdx.z) * 144) + (((int)threadIdx.x) * 11)) < 2300) {
            if (((int)threadIdx.x) < 13) {
              placeholder_shared[((((((int)threadIdx.z) * 144) + (((int)threadIdx.x) * 11)) + 4))] = ((float*)placeholder1)[(((((((((int)blockIdx.z) & 1) * 147456) + (((int)threadIdx.z) * 9216)) + ((((((int)threadIdx.x) * 11) + 4) / 18) * 1152)) + (rc_outer * 18)) + (((((int)threadIdx.x) * 11) + 4) % 18)))];
            }
          }
        }
      }
    }
    if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 11) + 5) / 18)) < 128) {
      if (((((int)threadIdx.z) * 16) + (((((int)threadIdx.x) * 11) + 5) / 9)) < 256) {
        if (((((int)threadIdx.z) * 48) + (((((int)threadIdx.x) * 11) + 5) / 3)) < 768) {
          if (((((int)threadIdx.z) * 144) + (((int)threadIdx.x) * 11)) < 2299) {
            if (((int)threadIdx.x) < 13) {
              placeholder_shared[((((((int)threadIdx.z) * 144) + (((int)threadIdx.x) * 11)) + 5))] = ((float*)placeholder1)[(((((((((int)blockIdx.z) & 1) * 147456) + (((int)threadIdx.z) * 9216)) + ((((((int)threadIdx.x) * 11) + 5) / 18) * 1152)) + (rc_outer * 18)) + (((((int)threadIdx.x) * 11) + 5) % 18)))];
            }
          }
        }
      }
    }
    if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 11) + 6) / 18)) < 128) {
      if (((((int)threadIdx.z) * 16) + (((((int)threadIdx.x) * 11) + 6) / 9)) < 256) {
        if (((((int)threadIdx.z) * 48) + ((((int)threadIdx.x) * 11) / 3)) < 766) {
          if (((((int)threadIdx.z) * 144) + (((int)threadIdx.x) * 11)) < 2298) {
            if (((int)threadIdx.x) < 13) {
              placeholder_shared[((((((int)threadIdx.z) * 144) + (((int)threadIdx.x) * 11)) + 6))] = ((float*)placeholder1)[(((((((((int)blockIdx.z) & 1) * 147456) + (((int)threadIdx.z) * 9216)) + ((((((int)threadIdx.x) * 11) + 6) / 18) * 1152)) + (rc_outer * 18)) + (((((int)threadIdx.x) * 11) + 6) % 18)))];
            }
          }
        }
      }
    }
    if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 11) + 7) / 18)) < 128) {
      if (((((int)threadIdx.z) * 16) + (((((int)threadIdx.x) * 11) + 7) / 9)) < 256) {
        if (((((int)threadIdx.z) * 48) + (((((int)threadIdx.x) * 11) + 7) / 3)) < 768) {
          if (((((int)threadIdx.z) * 144) + (((int)threadIdx.x) * 11)) < 2297) {
            if (((int)threadIdx.x) < 13) {
              placeholder_shared[((((((int)threadIdx.z) * 144) + (((int)threadIdx.x) * 11)) + 7))] = ((float*)placeholder1)[(((((((((int)blockIdx.z) & 1) * 147456) + (((int)threadIdx.z) * 9216)) + ((((((int)threadIdx.x) * 11) + 7) / 18) * 1152)) + (rc_outer * 18)) + (((((int)threadIdx.x) * 11) + 7) % 18)))];
            }
          }
        }
      }
    }
    if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 11) + 8) / 18)) < 128) {
      if (((((int)threadIdx.z) * 16) + (((((int)threadIdx.x) * 11) + 8) / 9)) < 256) {
        if (((((int)threadIdx.z) * 48) + (((((int)threadIdx.x) * 11) + 8) / 3)) < 768) {
          if (((((int)threadIdx.z) * 144) + (((int)threadIdx.x) * 11)) < 2296) {
            if (((int)threadIdx.x) < 13) {
              placeholder_shared[((((((int)threadIdx.z) * 144) + (((int)threadIdx.x) * 11)) + 8))] = ((float*)placeholder1)[(((((((((int)blockIdx.z) & 1) * 147456) + (((int)threadIdx.z) * 9216)) + ((((((int)threadIdx.x) * 11) + 8) / 18) * 1152)) + (rc_outer * 18)) + (((((int)threadIdx.x) * 11) + 8) % 18)))];
            }
          }
        }
      }
    }
    if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 11) + 9) / 18)) < 128) {
      if (((((int)threadIdx.z) * 16) + ((((int)threadIdx.x) * 11) / 9)) < 255) {
        if (((((int)threadIdx.z) * 48) + ((((int)threadIdx.x) * 11) / 3)) < 765) {
          if (((((int)threadIdx.z) * 144) + (((int)threadIdx.x) * 11)) < 2295) {
            if (((int)threadIdx.x) < 13) {
              placeholder_shared[((((((int)threadIdx.z) * 144) + (((int)threadIdx.x) * 11)) + 9))] = ((float*)placeholder1)[(((((((((int)blockIdx.z) & 1) * 147456) + (((int)threadIdx.z) * 9216)) + ((((((int)threadIdx.x) * 11) + 9) / 18) * 1152)) + (rc_outer * 18)) + (((((int)threadIdx.x) * 11) + 9) % 18)))];
            }
          }
        }
      }
    }
    if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 11) + 10) / 18)) < 128) {
      if (((((int)threadIdx.z) * 16) + (((((int)threadIdx.x) * 11) + 10) / 9)) < 256) {
        if (((((int)threadIdx.z) * 48) + (((((int)threadIdx.x) * 11) + 10) / 3)) < 768) {
          if (((((int)threadIdx.z) * 144) + (((int)threadIdx.x) * 11)) < 2294) {
            if (((int)threadIdx.x) < 13) {
              placeholder_shared[((((((int)threadIdx.z) * 144) + (((int)threadIdx.x) * 11)) + 10))] = ((float*)placeholder1)[(((((((((int)blockIdx.z) & 1) * 147456) + (((int)threadIdx.z) * 9216)) + ((((((int)threadIdx.x) * 11) + 10) / 18) * 1152)) + (rc_outer * 18)) + (((((int)threadIdx.x) * 11) + 10) % 18)))];
            }
          }
        }
      }
    }
    __syncthreads();
    for (int rc_inner = 0; rc_inner < 2; ++rc_inner) {
      for (int ry_inner = 0; ry_inner < 3; ++ry_inner) {
        compute[(0)] = (compute[(0)] + (pad_temp_shared[((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)))] * placeholder_shared[((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)))]));
        compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 58))] * placeholder_shared[((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)))]));
        compute[(16)] = (compute[(16)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 116))] * placeholder_shared[((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)))]));
        compute[(24)] = (compute[(24)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 174))] * placeholder_shared[((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)))]));
        compute[(32)] = (compute[(32)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 232))] * placeholder_shared[((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)))]));
        compute[(40)] = (compute[(40)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 290))] * placeholder_shared[((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)))]));
        compute[(48)] = (compute[(48)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 348))] * placeholder_shared[((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)))]));
        compute[(56)] = (compute[(56)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 406))] * placeholder_shared[((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)))]));
        compute[(64)] = (compute[(64)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 464))] * placeholder_shared[((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)))]));
        compute[(72)] = (compute[(72)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 522))] * placeholder_shared[((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)))]));
        compute[(80)] = (compute[(80)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 580))] * placeholder_shared[((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)))]));
        compute[(88)] = (compute[(88)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 638))] * placeholder_shared[((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)))]));
        compute[(96)] = (compute[(96)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 696))] * placeholder_shared[((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)))]));
        compute[(104)] = (compute[(104)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 754))] * placeholder_shared[((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)))]));
        compute[(1)] = (compute[(1)] + (pad_temp_shared[((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 18))]));
        compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 58))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 18))]));
        compute[(17)] = (compute[(17)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 116))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 18))]));
        compute[(25)] = (compute[(25)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 174))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 18))]));
        compute[(33)] = (compute[(33)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 232))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 18))]));
        compute[(41)] = (compute[(41)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 290))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 18))]));
        compute[(49)] = (compute[(49)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 348))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 18))]));
        compute[(57)] = (compute[(57)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 406))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 18))]));
        compute[(65)] = (compute[(65)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 464))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 18))]));
        compute[(73)] = (compute[(73)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 522))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 18))]));
        compute[(81)] = (compute[(81)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 580))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 18))]));
        compute[(89)] = (compute[(89)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 638))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 18))]));
        compute[(97)] = (compute[(97)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 696))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 18))]));
        compute[(105)] = (compute[(105)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 754))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 18))]));
        compute[(2)] = (compute[(2)] + (pad_temp_shared[((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 36))]));
        compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 58))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 36))]));
        compute[(18)] = (compute[(18)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 116))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 36))]));
        compute[(26)] = (compute[(26)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 174))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 36))]));
        compute[(34)] = (compute[(34)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 232))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 36))]));
        compute[(42)] = (compute[(42)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 290))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 36))]));
        compute[(50)] = (compute[(50)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 348))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 36))]));
        compute[(58)] = (compute[(58)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 406))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 36))]));
        compute[(66)] = (compute[(66)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 464))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 36))]));
        compute[(74)] = (compute[(74)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 522))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 36))]));
        compute[(82)] = (compute[(82)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 580))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 36))]));
        compute[(90)] = (compute[(90)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 638))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 36))]));
        compute[(98)] = (compute[(98)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 696))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 36))]));
        compute[(106)] = (compute[(106)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 754))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 36))]));
        compute[(3)] = (compute[(3)] + (pad_temp_shared[((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 54))]));
        compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 58))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 54))]));
        compute[(19)] = (compute[(19)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 116))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 54))]));
        compute[(27)] = (compute[(27)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 174))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 54))]));
        compute[(35)] = (compute[(35)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 232))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 54))]));
        compute[(43)] = (compute[(43)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 290))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 54))]));
        compute[(51)] = (compute[(51)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 348))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 54))]));
        compute[(59)] = (compute[(59)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 406))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 54))]));
        compute[(67)] = (compute[(67)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 464))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 54))]));
        compute[(75)] = (compute[(75)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 522))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 54))]));
        compute[(83)] = (compute[(83)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 580))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 54))]));
        compute[(91)] = (compute[(91)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 638))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 54))]));
        compute[(99)] = (compute[(99)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 696))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 54))]));
        compute[(107)] = (compute[(107)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 754))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 54))]));
        compute[(4)] = (compute[(4)] + (pad_temp_shared[((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 72))]));
        compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 58))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 72))]));
        compute[(20)] = (compute[(20)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 116))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 72))]));
        compute[(28)] = (compute[(28)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 174))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 72))]));
        compute[(36)] = (compute[(36)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 232))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 72))]));
        compute[(44)] = (compute[(44)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 290))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 72))]));
        compute[(52)] = (compute[(52)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 348))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 72))]));
        compute[(60)] = (compute[(60)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 406))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 72))]));
        compute[(68)] = (compute[(68)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 464))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 72))]));
        compute[(76)] = (compute[(76)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 522))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 72))]));
        compute[(84)] = (compute[(84)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 580))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 72))]));
        compute[(92)] = (compute[(92)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 638))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 72))]));
        compute[(100)] = (compute[(100)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 696))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 72))]));
        compute[(108)] = (compute[(108)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 754))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 72))]));
        compute[(5)] = (compute[(5)] + (pad_temp_shared[((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 90))]));
        compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 58))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 90))]));
        compute[(21)] = (compute[(21)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 116))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 90))]));
        compute[(29)] = (compute[(29)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 174))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 90))]));
        compute[(37)] = (compute[(37)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 232))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 90))]));
        compute[(45)] = (compute[(45)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 290))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 90))]));
        compute[(53)] = (compute[(53)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 348))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 90))]));
        compute[(61)] = (compute[(61)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 406))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 90))]));
        compute[(69)] = (compute[(69)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 464))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 90))]));
        compute[(77)] = (compute[(77)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 522))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 90))]));
        compute[(85)] = (compute[(85)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 580))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 90))]));
        compute[(93)] = (compute[(93)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 638))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 90))]));
        compute[(101)] = (compute[(101)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 696))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 90))]));
        compute[(109)] = (compute[(109)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 754))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 90))]));
        compute[(6)] = (compute[(6)] + (pad_temp_shared[((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 108))]));
        compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 58))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 108))]));
        compute[(22)] = (compute[(22)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 116))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 108))]));
        compute[(30)] = (compute[(30)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 174))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 108))]));
        compute[(38)] = (compute[(38)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 232))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 108))]));
        compute[(46)] = (compute[(46)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 290))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 108))]));
        compute[(54)] = (compute[(54)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 348))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 108))]));
        compute[(62)] = (compute[(62)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 406))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 108))]));
        compute[(70)] = (compute[(70)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 464))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 108))]));
        compute[(78)] = (compute[(78)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 522))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 108))]));
        compute[(86)] = (compute[(86)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 580))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 108))]));
        compute[(94)] = (compute[(94)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 638))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 108))]));
        compute[(102)] = (compute[(102)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 696))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 108))]));
        compute[(110)] = (compute[(110)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 754))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 108))]));
        compute[(7)] = (compute[(7)] + (pad_temp_shared[((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 126))]));
        compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 58))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 126))]));
        compute[(23)] = (compute[(23)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 116))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 126))]));
        compute[(31)] = (compute[(31)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 174))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 126))]));
        compute[(39)] = (compute[(39)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 232))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 126))]));
        compute[(47)] = (compute[(47)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 290))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 126))]));
        compute[(55)] = (compute[(55)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 348))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 126))]));
        compute[(63)] = (compute[(63)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 406))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 126))]));
        compute[(71)] = (compute[(71)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 464))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 126))]));
        compute[(79)] = (compute[(79)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 522))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 126))]));
        compute[(87)] = (compute[(87)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 580))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 126))]));
        compute[(95)] = (compute[(95)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 638))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 126))]));
        compute[(103)] = (compute[(103)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 696))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 126))]));
        compute[(111)] = (compute[(111)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 754))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 126))]));
        compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 1))]));
        compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 59))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 1))]));
        compute[(16)] = (compute[(16)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 117))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 1))]));
        compute[(24)] = (compute[(24)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 175))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 1))]));
        compute[(32)] = (compute[(32)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 233))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 1))]));
        compute[(40)] = (compute[(40)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 291))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 1))]));
        compute[(48)] = (compute[(48)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 349))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 1))]));
        compute[(56)] = (compute[(56)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 407))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 1))]));
        compute[(64)] = (compute[(64)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 465))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 1))]));
        compute[(72)] = (compute[(72)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 523))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 1))]));
        compute[(80)] = (compute[(80)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 581))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 1))]));
        compute[(88)] = (compute[(88)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 639))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 1))]));
        compute[(96)] = (compute[(96)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 697))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 1))]));
        compute[(104)] = (compute[(104)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 755))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 1))]));
        compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 19))]));
        compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 59))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 19))]));
        compute[(17)] = (compute[(17)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 117))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 19))]));
        compute[(25)] = (compute[(25)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 175))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 19))]));
        compute[(33)] = (compute[(33)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 233))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 19))]));
        compute[(41)] = (compute[(41)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 291))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 19))]));
        compute[(49)] = (compute[(49)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 349))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 19))]));
        compute[(57)] = (compute[(57)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 407))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 19))]));
        compute[(65)] = (compute[(65)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 465))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 19))]));
        compute[(73)] = (compute[(73)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 523))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 19))]));
        compute[(81)] = (compute[(81)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 581))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 19))]));
        compute[(89)] = (compute[(89)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 639))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 19))]));
        compute[(97)] = (compute[(97)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 697))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 19))]));
        compute[(105)] = (compute[(105)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 755))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 19))]));
        compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 37))]));
        compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 59))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 37))]));
        compute[(18)] = (compute[(18)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 117))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 37))]));
        compute[(26)] = (compute[(26)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 175))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 37))]));
        compute[(34)] = (compute[(34)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 233))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 37))]));
        compute[(42)] = (compute[(42)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 291))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 37))]));
        compute[(50)] = (compute[(50)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 349))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 37))]));
        compute[(58)] = (compute[(58)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 407))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 37))]));
        compute[(66)] = (compute[(66)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 465))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 37))]));
        compute[(74)] = (compute[(74)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 523))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 37))]));
        compute[(82)] = (compute[(82)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 581))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 37))]));
        compute[(90)] = (compute[(90)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 639))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 37))]));
        compute[(98)] = (compute[(98)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 697))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 37))]));
        compute[(106)] = (compute[(106)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 755))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 37))]));
        compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 55))]));
        compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 59))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 55))]));
        compute[(19)] = (compute[(19)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 117))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 55))]));
        compute[(27)] = (compute[(27)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 175))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 55))]));
        compute[(35)] = (compute[(35)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 233))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 55))]));
        compute[(43)] = (compute[(43)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 291))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 55))]));
        compute[(51)] = (compute[(51)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 349))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 55))]));
        compute[(59)] = (compute[(59)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 407))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 55))]));
        compute[(67)] = (compute[(67)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 465))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 55))]));
        compute[(75)] = (compute[(75)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 523))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 55))]));
        compute[(83)] = (compute[(83)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 581))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 55))]));
        compute[(91)] = (compute[(91)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 639))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 55))]));
        compute[(99)] = (compute[(99)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 697))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 55))]));
        compute[(107)] = (compute[(107)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 755))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 55))]));
        compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 73))]));
        compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 59))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 73))]));
        compute[(20)] = (compute[(20)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 117))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 73))]));
        compute[(28)] = (compute[(28)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 175))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 73))]));
        compute[(36)] = (compute[(36)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 233))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 73))]));
        compute[(44)] = (compute[(44)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 291))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 73))]));
        compute[(52)] = (compute[(52)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 349))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 73))]));
        compute[(60)] = (compute[(60)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 407))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 73))]));
        compute[(68)] = (compute[(68)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 465))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 73))]));
        compute[(76)] = (compute[(76)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 523))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 73))]));
        compute[(84)] = (compute[(84)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 581))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 73))]));
        compute[(92)] = (compute[(92)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 639))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 73))]));
        compute[(100)] = (compute[(100)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 697))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 73))]));
        compute[(108)] = (compute[(108)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 755))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 73))]));
        compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 91))]));
        compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 59))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 91))]));
        compute[(21)] = (compute[(21)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 117))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 91))]));
        compute[(29)] = (compute[(29)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 175))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 91))]));
        compute[(37)] = (compute[(37)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 233))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 91))]));
        compute[(45)] = (compute[(45)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 291))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 91))]));
        compute[(53)] = (compute[(53)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 349))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 91))]));
        compute[(61)] = (compute[(61)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 407))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 91))]));
        compute[(69)] = (compute[(69)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 465))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 91))]));
        compute[(77)] = (compute[(77)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 523))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 91))]));
        compute[(85)] = (compute[(85)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 581))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 91))]));
        compute[(93)] = (compute[(93)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 639))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 91))]));
        compute[(101)] = (compute[(101)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 697))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 91))]));
        compute[(109)] = (compute[(109)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 755))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 91))]));
        compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 109))]));
        compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 59))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 109))]));
        compute[(22)] = (compute[(22)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 117))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 109))]));
        compute[(30)] = (compute[(30)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 175))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 109))]));
        compute[(38)] = (compute[(38)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 233))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 109))]));
        compute[(46)] = (compute[(46)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 291))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 109))]));
        compute[(54)] = (compute[(54)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 349))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 109))]));
        compute[(62)] = (compute[(62)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 407))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 109))]));
        compute[(70)] = (compute[(70)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 465))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 109))]));
        compute[(78)] = (compute[(78)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 523))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 109))]));
        compute[(86)] = (compute[(86)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 581))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 109))]));
        compute[(94)] = (compute[(94)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 639))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 109))]));
        compute[(102)] = (compute[(102)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 697))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 109))]));
        compute[(110)] = (compute[(110)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 755))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 109))]));
        compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 127))]));
        compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 59))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 127))]));
        compute[(23)] = (compute[(23)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 117))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 127))]));
        compute[(31)] = (compute[(31)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 175))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 127))]));
        compute[(39)] = (compute[(39)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 233))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 127))]));
        compute[(47)] = (compute[(47)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 291))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 127))]));
        compute[(55)] = (compute[(55)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 349))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 127))]));
        compute[(63)] = (compute[(63)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 407))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 127))]));
        compute[(71)] = (compute[(71)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 465))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 127))]));
        compute[(79)] = (compute[(79)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 523))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 127))]));
        compute[(87)] = (compute[(87)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 581))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 127))]));
        compute[(95)] = (compute[(95)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 639))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 127))]));
        compute[(103)] = (compute[(103)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 697))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 127))]));
        compute[(111)] = (compute[(111)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 755))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 127))]));
        compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 2))]));
        compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 60))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 2))]));
        compute[(16)] = (compute[(16)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 118))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 2))]));
        compute[(24)] = (compute[(24)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 176))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 2))]));
        compute[(32)] = (compute[(32)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 234))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 2))]));
        compute[(40)] = (compute[(40)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 292))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 2))]));
        compute[(48)] = (compute[(48)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 350))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 2))]));
        compute[(56)] = (compute[(56)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 408))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 2))]));
        compute[(64)] = (compute[(64)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 466))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 2))]));
        compute[(72)] = (compute[(72)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 524))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 2))]));
        compute[(80)] = (compute[(80)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 582))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 2))]));
        compute[(88)] = (compute[(88)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 640))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 2))]));
        compute[(96)] = (compute[(96)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 698))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 2))]));
        compute[(104)] = (compute[(104)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 756))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 2))]));
        compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 20))]));
        compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 60))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 20))]));
        compute[(17)] = (compute[(17)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 118))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 20))]));
        compute[(25)] = (compute[(25)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 176))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 20))]));
        compute[(33)] = (compute[(33)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 234))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 20))]));
        compute[(41)] = (compute[(41)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 292))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 20))]));
        compute[(49)] = (compute[(49)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 350))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 20))]));
        compute[(57)] = (compute[(57)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 408))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 20))]));
        compute[(65)] = (compute[(65)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 466))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 20))]));
        compute[(73)] = (compute[(73)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 524))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 20))]));
        compute[(81)] = (compute[(81)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 582))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 20))]));
        compute[(89)] = (compute[(89)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 640))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 20))]));
        compute[(97)] = (compute[(97)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 698))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 20))]));
        compute[(105)] = (compute[(105)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 756))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 20))]));
        compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 38))]));
        compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 60))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 38))]));
        compute[(18)] = (compute[(18)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 118))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 38))]));
        compute[(26)] = (compute[(26)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 176))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 38))]));
        compute[(34)] = (compute[(34)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 234))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 38))]));
        compute[(42)] = (compute[(42)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 292))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 38))]));
        compute[(50)] = (compute[(50)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 350))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 38))]));
        compute[(58)] = (compute[(58)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 408))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 38))]));
        compute[(66)] = (compute[(66)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 466))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 38))]));
        compute[(74)] = (compute[(74)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 524))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 38))]));
        compute[(82)] = (compute[(82)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 582))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 38))]));
        compute[(90)] = (compute[(90)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 640))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 38))]));
        compute[(98)] = (compute[(98)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 698))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 38))]));
        compute[(106)] = (compute[(106)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 756))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 38))]));
        compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 56))]));
        compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 60))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 56))]));
        compute[(19)] = (compute[(19)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 118))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 56))]));
        compute[(27)] = (compute[(27)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 176))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 56))]));
        compute[(35)] = (compute[(35)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 234))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 56))]));
        compute[(43)] = (compute[(43)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 292))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 56))]));
        compute[(51)] = (compute[(51)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 350))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 56))]));
        compute[(59)] = (compute[(59)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 408))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 56))]));
        compute[(67)] = (compute[(67)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 466))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 56))]));
        compute[(75)] = (compute[(75)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 524))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 56))]));
        compute[(83)] = (compute[(83)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 582))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 56))]));
        compute[(91)] = (compute[(91)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 640))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 56))]));
        compute[(99)] = (compute[(99)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 698))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 56))]));
        compute[(107)] = (compute[(107)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 756))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 56))]));
        compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 74))]));
        compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 60))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 74))]));
        compute[(20)] = (compute[(20)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 118))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 74))]));
        compute[(28)] = (compute[(28)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 176))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 74))]));
        compute[(36)] = (compute[(36)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 234))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 74))]));
        compute[(44)] = (compute[(44)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 292))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 74))]));
        compute[(52)] = (compute[(52)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 350))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 74))]));
        compute[(60)] = (compute[(60)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 408))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 74))]));
        compute[(68)] = (compute[(68)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 466))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 74))]));
        compute[(76)] = (compute[(76)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 524))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 74))]));
        compute[(84)] = (compute[(84)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 582))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 74))]));
        compute[(92)] = (compute[(92)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 640))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 74))]));
        compute[(100)] = (compute[(100)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 698))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 74))]));
        compute[(108)] = (compute[(108)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 756))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 74))]));
        compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 92))]));
        compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 60))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 92))]));
        compute[(21)] = (compute[(21)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 118))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 92))]));
        compute[(29)] = (compute[(29)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 176))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 92))]));
        compute[(37)] = (compute[(37)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 234))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 92))]));
        compute[(45)] = (compute[(45)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 292))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 92))]));
        compute[(53)] = (compute[(53)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 350))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 92))]));
        compute[(61)] = (compute[(61)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 408))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 92))]));
        compute[(69)] = (compute[(69)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 466))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 92))]));
        compute[(77)] = (compute[(77)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 524))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 92))]));
        compute[(85)] = (compute[(85)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 582))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 92))]));
        compute[(93)] = (compute[(93)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 640))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 92))]));
        compute[(101)] = (compute[(101)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 698))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 92))]));
        compute[(109)] = (compute[(109)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 756))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 92))]));
        compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 110))]));
        compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 60))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 110))]));
        compute[(22)] = (compute[(22)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 118))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 110))]));
        compute[(30)] = (compute[(30)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 176))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 110))]));
        compute[(38)] = (compute[(38)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 234))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 110))]));
        compute[(46)] = (compute[(46)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 292))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 110))]));
        compute[(54)] = (compute[(54)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 350))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 110))]));
        compute[(62)] = (compute[(62)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 408))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 110))]));
        compute[(70)] = (compute[(70)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 466))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 110))]));
        compute[(78)] = (compute[(78)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 524))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 110))]));
        compute[(86)] = (compute[(86)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 582))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 110))]));
        compute[(94)] = (compute[(94)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 640))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 110))]));
        compute[(102)] = (compute[(102)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 698))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 110))]));
        compute[(110)] = (compute[(110)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 756))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 110))]));
        compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 128))]));
        compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 60))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 128))]));
        compute[(23)] = (compute[(23)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 118))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 128))]));
        compute[(31)] = (compute[(31)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 176))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 128))]));
        compute[(39)] = (compute[(39)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 234))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 128))]));
        compute[(47)] = (compute[(47)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 292))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 128))]));
        compute[(55)] = (compute[(55)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 350))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 128))]));
        compute[(63)] = (compute[(63)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 408))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 128))]));
        compute[(71)] = (compute[(71)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 466))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 128))]));
        compute[(79)] = (compute[(79)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 524))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 128))]));
        compute[(87)] = (compute[(87)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 582))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 128))]));
        compute[(95)] = (compute[(95)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 640))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 128))]));
        compute[(103)] = (compute[(103)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 698))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 128))]));
        compute[(111)] = (compute[(111)] + (pad_temp_shared[(((((rc_inner * 841) + (ry_inner * 29)) + (((int)threadIdx.x) * 2)) + 756))] * placeholder_shared[(((((((int)threadIdx.z) * 144) + (rc_inner * 9)) + (ry_inner * 3)) + 128))]));
      }
    }
  }
  ((float*)T_relu)[((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)))] = max((float)((compute[(0)] + ((float*)placeholder2)[((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 14))] = max((float)((compute[(8)] + ((float*)placeholder2)[((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 28))] = max((float)((compute[(16)] + ((float*)placeholder2)[((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 42))] = max((float)((compute[(24)] + ((float*)placeholder2)[((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 56))] = max((float)((compute[(32)] + ((float*)placeholder2)[((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 70))] = max((float)((compute[(40)] + ((float*)placeholder2)[((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 84))] = max((float)((compute[(48)] + ((float*)placeholder2)[((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 98))] = max((float)((compute[(56)] + ((float*)placeholder2)[((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 112))] = max((float)((compute[(64)] + ((float*)placeholder2)[((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 126))] = max((float)((compute[(72)] + ((float*)placeholder2)[((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 140))] = max((float)((compute[(80)] + ((float*)placeholder2)[((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 154))] = max((float)((compute[(88)] + ((float*)placeholder2)[((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 168))] = max((float)((compute[(96)] + ((float*)placeholder2)[((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 182))] = max((float)((compute[(104)] + ((float*)placeholder2)[((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 196))] = max((float)((compute[(1)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 1))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 210))] = max((float)((compute[(9)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 1))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 224))] = max((float)((compute[(17)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 1))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 238))] = max((float)((compute[(25)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 1))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 252))] = max((float)((compute[(33)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 1))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 266))] = max((float)((compute[(41)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 1))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 280))] = max((float)((compute[(49)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 1))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 294))] = max((float)((compute[(57)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 1))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 308))] = max((float)((compute[(65)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 1))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 322))] = max((float)((compute[(73)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 1))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 336))] = max((float)((compute[(81)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 1))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 350))] = max((float)((compute[(89)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 1))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 364))] = max((float)((compute[(97)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 1))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 378))] = max((float)((compute[(105)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 1))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 392))] = max((float)((compute[(2)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 2))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 406))] = max((float)((compute[(10)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 2))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 420))] = max((float)((compute[(18)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 2))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 434))] = max((float)((compute[(26)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 2))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 448))] = max((float)((compute[(34)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 2))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 462))] = max((float)((compute[(42)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 2))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 476))] = max((float)((compute[(50)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 2))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 490))] = max((float)((compute[(58)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 2))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 504))] = max((float)((compute[(66)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 2))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 518))] = max((float)((compute[(74)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 2))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 532))] = max((float)((compute[(82)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 2))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 546))] = max((float)((compute[(90)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 2))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 560))] = max((float)((compute[(98)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 2))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 574))] = max((float)((compute[(106)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 2))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 588))] = max((float)((compute[(3)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 3))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 602))] = max((float)((compute[(11)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 3))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 616))] = max((float)((compute[(19)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 3))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 630))] = max((float)((compute[(27)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 3))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 644))] = max((float)((compute[(35)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 3))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 658))] = max((float)((compute[(43)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 3))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 672))] = max((float)((compute[(51)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 3))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 686))] = max((float)((compute[(59)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 3))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 700))] = max((float)((compute[(67)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 3))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 714))] = max((float)((compute[(75)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 3))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 728))] = max((float)((compute[(83)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 3))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 742))] = max((float)((compute[(91)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 3))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 756))] = max((float)((compute[(99)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 3))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 770))] = max((float)((compute[(107)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 3))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 784))] = max((float)((compute[(4)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 4))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 798))] = max((float)((compute[(12)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 4))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 812))] = max((float)((compute[(20)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 4))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 826))] = max((float)((compute[(28)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 4))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 840))] = max((float)((compute[(36)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 4))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 854))] = max((float)((compute[(44)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 4))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 868))] = max((float)((compute[(52)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 4))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 882))] = max((float)((compute[(60)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 4))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 896))] = max((float)((compute[(68)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 4))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 910))] = max((float)((compute[(76)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 4))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 924))] = max((float)((compute[(84)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 4))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 938))] = max((float)((compute[(92)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 4))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 952))] = max((float)((compute[(100)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 4))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 966))] = max((float)((compute[(108)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 4))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 980))] = max((float)((compute[(5)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 5))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 994))] = max((float)((compute[(13)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 5))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 1008))] = max((float)((compute[(21)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 5))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 1022))] = max((float)((compute[(29)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 5))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 1036))] = max((float)((compute[(37)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 5))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 1050))] = max((float)((compute[(45)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 5))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 1064))] = max((float)((compute[(53)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 5))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 1078))] = max((float)((compute[(61)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 5))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 1092))] = max((float)((compute[(69)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 5))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 1106))] = max((float)((compute[(77)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 5))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 1120))] = max((float)((compute[(85)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 5))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 1134))] = max((float)((compute[(93)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 5))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 1148))] = max((float)((compute[(101)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 5))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 1162))] = max((float)((compute[(109)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 5))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 1176))] = max((float)((compute[(6)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 6))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 1190))] = max((float)((compute[(14)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 6))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 1204))] = max((float)((compute[(22)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 6))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 1218))] = max((float)((compute[(30)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 6))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 1232))] = max((float)((compute[(38)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 6))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 1246))] = max((float)((compute[(46)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 6))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 1260))] = max((float)((compute[(54)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 6))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 1274))] = max((float)((compute[(62)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 6))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 1288))] = max((float)((compute[(70)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 6))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 1302))] = max((float)((compute[(78)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 6))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 1316))] = max((float)((compute[(86)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 6))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 1330))] = max((float)((compute[(94)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 6))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 1344))] = max((float)((compute[(102)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 6))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 1358))] = max((float)((compute[(110)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 6))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 1372))] = max((float)((compute[(7)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 7))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 1386))] = max((float)((compute[(15)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 7))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 1400))] = max((float)((compute[(23)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 7))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 1414))] = max((float)((compute[(31)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 7))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 1428))] = max((float)((compute[(39)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 7))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 1442))] = max((float)((compute[(47)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 7))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 1456))] = max((float)((compute[(55)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 7))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 1470))] = max((float)((compute[(63)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 7))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 1484))] = max((float)((compute[(71)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 7))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 1498))] = max((float)((compute[(79)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 7))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 1512))] = max((float)((compute[(87)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 7))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 1526))] = max((float)((compute[(95)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 7))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 1540))] = max((float)((compute[(103)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 7))])), (float)(0.000000e+00f));
  ((float*)T_relu)[(((((((int)blockIdx.z) * 25088) + (((int)threadIdx.z) * 1568)) + ((int)threadIdx.x)) + 1554))] = max((float)((compute[(111)] + ((float*)placeholder2)[(((((((int)blockIdx.z) & 1) * 128) + (((int)threadIdx.z) * 8)) + 7))])), (float)(0.000000e+00f));
}

extern "C" __global__ void fused_nn_contrib_conv2d_winograd_without_weight_transform_add_add_nn_relu_1_kernel2(float* __restrict__ bgemm, void* __restrict__ T_relu, void* __restrict__ placeholder, void* __restrict__ placeholder1) {
  float inverse[4];
  inverse[(0)] = 0.000000e+00f;
  inverse[(0)] = (inverse[(0)] + bgemm[((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 401408))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 802816))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 1605632))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 2007040))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 2408448))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 3211264))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 3612672))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 4014080))]);
  inverse[(1)] = 0.000000e+00f;
  inverse[(1)] = (inverse[(1)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 401408))] * -1.000000e+00f));
  inverse[(1)] = (inverse[(1)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 802816))]);
  inverse[(1)] = (inverse[(1)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 1204224))]);
  inverse[(1)] = (inverse[(1)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 2007040))] * -1.000000e+00f));
  inverse[(1)] = (inverse[(1)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 2408448))]);
  inverse[(1)] = (inverse[(1)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 2809856))]);
  inverse[(1)] = (inverse[(1)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 3612672))] * -1.000000e+00f));
  inverse[(1)] = (inverse[(1)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 4014080))]);
  inverse[(1)] = (inverse[(1)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 4415488))]);
  inverse[(2)] = 0.000000e+00f;
  inverse[(2)] = (inverse[(2)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 1605632))] * -1.000000e+00f));
  inverse[(2)] = (inverse[(2)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 2007040))] * -1.000000e+00f));
  inverse[(2)] = (inverse[(2)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 2408448))] * -1.000000e+00f));
  inverse[(2)] = (inverse[(2)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 3211264))]);
  inverse[(2)] = (inverse[(2)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 3612672))]);
  inverse[(2)] = (inverse[(2)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 4014080))]);
  inverse[(2)] = (inverse[(2)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 4816896))]);
  inverse[(2)] = (inverse[(2)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 5218304))]);
  inverse[(2)] = (inverse[(2)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 5619712))]);
  inverse[(3)] = 0.000000e+00f;
  inverse[(3)] = (inverse[(3)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 2007040))] * -1.000000e+00f) * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 2408448))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 2809856))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 3612672))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 4014080))]);
  inverse[(3)] = (inverse[(3)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 4415488))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 5218304))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 5619712))]);
  inverse[(3)] = (inverse[(3)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49) * 1568) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 49)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49)) + 6021120))]);
  for (int ax2_inner = 0; ax2_inner < 2; ++ax2_inner) {
    for (int ax3_inner = 0; ax3_inner < 2; ++ax3_inner) {
      ((float*)T_relu)[((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 7) * 28) + (ax2_inner * 14)) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 7) * 2)) + ax3_inner))] = max((float)((((float*)placeholder)[((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 7) * 28) + (ax2_inner * 14)) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 7) * 2)) + ax3_inner))] + (inverse[(((ax2_inner * 2) + ax3_inner))] + ((float*)placeholder1)[(((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 49))]))), (float)(0.000000e+00f));
    }
  }
}

extern "C" __global__ void fused_nn_contrib_conv2d_winograd_without_weight_transform_add_add_nn_relu_2_kernel2(float* __restrict__ bgemm, void* __restrict__ T_relu, void* __restrict__ placeholder, void* __restrict__ placeholder1) {
  float inverse[4];
  inverse[(0)] = 0.000000e+00f;
  inverse[(0)] = (inverse[(0)] + bgemm[((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 802816))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 1605632))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 3211264))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4014080))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4816896))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6422528))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 7225344))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8028160))]);
  inverse[(1)] = 0.000000e+00f;
  inverse[(1)] = (inverse[(1)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 802816))] * -1.000000e+00f));
  inverse[(1)] = (inverse[(1)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 1605632))]);
  inverse[(1)] = (inverse[(1)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 2408448))]);
  inverse[(1)] = (inverse[(1)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4014080))] * -1.000000e+00f));
  inverse[(1)] = (inverse[(1)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4816896))]);
  inverse[(1)] = (inverse[(1)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 5619712))]);
  inverse[(1)] = (inverse[(1)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 7225344))] * -1.000000e+00f));
  inverse[(1)] = (inverse[(1)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8028160))]);
  inverse[(1)] = (inverse[(1)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8830976))]);
  inverse[(2)] = 0.000000e+00f;
  inverse[(2)] = (inverse[(2)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 3211264))] * -1.000000e+00f));
  inverse[(2)] = (inverse[(2)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4014080))] * -1.000000e+00f));
  inverse[(2)] = (inverse[(2)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4816896))] * -1.000000e+00f));
  inverse[(2)] = (inverse[(2)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6422528))]);
  inverse[(2)] = (inverse[(2)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 7225344))]);
  inverse[(2)] = (inverse[(2)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8028160))]);
  inverse[(2)] = (inverse[(2)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 9633792))]);
  inverse[(2)] = (inverse[(2)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10436608))]);
  inverse[(2)] = (inverse[(2)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 11239424))]);
  inverse[(3)] = 0.000000e+00f;
  inverse[(3)] = (inverse[(3)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4014080))] * -1.000000e+00f) * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4816896))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 5619712))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 7225344))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8028160))]);
  inverse[(3)] = (inverse[(3)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8830976))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10436608))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 11239424))]);
  inverse[(3)] = (inverse[(3)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 25088) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 12042240))]);
  for (int ax2_inner = 0; ax2_inner < 2; ++ax2_inner) {
    for (int ax3_inner = 0; ax3_inner < 2; ++ax3_inner) {
      ((float*)T_relu)[((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 14) * 56) + (ax2_inner * 28)) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 14) * 2)) + ax3_inner))] = max((float)((((float*)placeholder)[((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 14) * 56) + (ax2_inner * 28)) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 14) * 2)) + ax3_inner))] + (inverse[(((ax2_inner * 2) + ax3_inner))] + ((float*)placeholder1)[(((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 25088) / 196))]))), (float)(0.000000e+00f));
    }
  }
}

extern "C" __global__ void fused_nn_contrib_conv2d_winograd_without_weight_transform_add_2_kernel2(float* __restrict__ bgemm, void* __restrict__ T_add, void* __restrict__ placeholder) {
  float inverse[4];
  inverse[(0)] = 0.000000e+00f;
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 262144))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 524288))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 1048576))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 1310720))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 1572864))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 2097152))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 2359296))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 2621440))]);
  inverse[(1)] = 0.000000e+00f;
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 262144))] * -1.000000e+00f));
  inverse[(1)] = (inverse[(1)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 524288))]);
  inverse[(1)] = (inverse[(1)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 786432))]);
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 1310720))] * -1.000000e+00f));
  inverse[(1)] = (inverse[(1)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 1572864))]);
  inverse[(1)] = (inverse[(1)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 1835008))]);
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 2359296))] * -1.000000e+00f));
  inverse[(1)] = (inverse[(1)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 2621440))]);
  inverse[(1)] = (inverse[(1)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 2883584))]);
  inverse[(2)] = 0.000000e+00f;
  inverse[(2)] = (inverse[(2)] + (bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 1048576))] * -1.000000e+00f));
  inverse[(2)] = (inverse[(2)] + (bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 1310720))] * -1.000000e+00f));
  inverse[(2)] = (inverse[(2)] + (bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 1572864))] * -1.000000e+00f));
  inverse[(2)] = (inverse[(2)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 2097152))]);
  inverse[(2)] = (inverse[(2)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 2359296))]);
  inverse[(2)] = (inverse[(2)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 2621440))]);
  inverse[(2)] = (inverse[(2)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 3145728))]);
  inverse[(2)] = (inverse[(2)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 3407872))]);
  inverse[(2)] = (inverse[(2)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 3670016))]);
  inverse[(3)] = 0.000000e+00f;
  inverse[(3)] = (inverse[(3)] + ((bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 1310720))] * -1.000000e+00f) * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 1572864))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 1835008))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 2359296))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 2621440))]);
  inverse[(3)] = (inverse[(3)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 2883584))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 3407872))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 3670016))]);
  inverse[(3)] = (inverse[(3)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 3932160))]);
  for (int ax2_inner = 0; ax2_inner < 2; ++ax2_inner) {
    for (int ax3_inner = 0; ax3_inner < 2; ++ax3_inner) {
      if (((((((int)threadIdx.x) & 15) >> 2) * 2) + ax2_inner) < 7) {
        if ((((((int)threadIdx.x) & 3) * 2) + ax3_inner) < 7) {
          ((float*)T_add)[(((((((((int)blockIdx.x) * 392) + ((((int)threadIdx.x) >> 4) * 49)) + (((((int)threadIdx.x) & 15) >> 2) * 14)) + (ax2_inner * 7)) + ((((int)threadIdx.x) & 3) * 2)) + ax3_inner))] = (inverse[(((ax2_inner * 2) + ax3_inner))] + ((float*)placeholder)[((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511))]);
        }
      }
    }
  }
}

extern "C" __global__ void fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_kernel0(void* __restrict__ placeholder, float* __restrict__ data_pack) {
  float d[16];
  float data_pack_local[16];
  for (int eps = 0; eps < 4; ++eps) {
    for (int nu = 0; nu < 4; ++nu) {
      d[(((eps * 4) + nu))] = (((((1 <= ((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196) / 14) * 2) + eps)) && (((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196) / 14) * 2) + eps) < 29)) && (1 <= (((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 14) * 2) + nu))) && ((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 14) * 2) + nu) < 29)) ? (float)((float*)placeholder)[((((((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 6272) / 196) * 100352) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 6272) * 784)) + (((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196) / 14) * 56)) + (eps * 28)) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 14) * 2)) + nu) - 29))] : (float)0.000000e+00f);
    }
  }
  data_pack_local[(0)] = 0.000000e+00f;
  data_pack_local[(0)] = (data_pack_local[(0)] + d[(0)]);
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(2)] * -1.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(8)] * -1.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(10)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(1)] = 0.000000e+00f;
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(1)] * -1.000000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + d[(2)]);
  data_pack_local[(1)] = (data_pack_local[(1)] + ((d[(9)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(2)] = 0.000000e+00f;
  data_pack_local[(2)] = (data_pack_local[(2)] + d[(1)]);
  data_pack_local[(2)] = (data_pack_local[(2)] + d[(2)]);
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(9)] * -1.000000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(3)] = 0.000000e+00f;
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(1)] * -1.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + d[(3)]);
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(9)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(11)] * -1.000000e+00f));
  data_pack_local[(4)] = 0.000000e+00f;
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(4)] * -1.000000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(6)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + d[(8)]);
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(5)] = 0.000000e+00f;
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(5)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(6)] * -1.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(9)] * -1.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + d[(10)]);
  data_pack_local[(6)] = 0.000000e+00f;
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(5)] * -1.000000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(6)] * -1.000000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + d[(9)]);
  data_pack_local[(6)] = (data_pack_local[(6)] + d[(10)]);
  data_pack_local[(7)] = 0.000000e+00f;
  data_pack_local[(7)] = (data_pack_local[(7)] + ((d[(5)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(7)] * -1.000000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(9)] * -1.000000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + d[(11)]);
  data_pack_local[(8)] = 0.000000e+00f;
  data_pack_local[(8)] = (data_pack_local[(8)] + d[(4)]);
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(6)] * -1.000000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + d[(8)]);
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(9)] = 0.000000e+00f;
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(5)] * -1.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + d[(6)]);
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(9)] * -1.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + d[(10)]);
  data_pack_local[(10)] = 0.000000e+00f;
  data_pack_local[(10)] = (data_pack_local[(10)] + d[(5)]);
  data_pack_local[(10)] = (data_pack_local[(10)] + d[(6)]);
  data_pack_local[(10)] = (data_pack_local[(10)] + d[(9)]);
  data_pack_local[(10)] = (data_pack_local[(10)] + d[(10)]);
  data_pack_local[(11)] = 0.000000e+00f;
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(5)] * -1.000000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + d[(7)]);
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(9)] * -1.000000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + d[(11)]);
  data_pack_local[(12)] = 0.000000e+00f;
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(4)] * -1.000000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(6)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + d[(12)]);
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(14)] * -1.000000e+00f));
  data_pack_local[(13)] = 0.000000e+00f;
  data_pack_local[(13)] = (data_pack_local[(13)] + ((d[(5)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(6)] * -1.000000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(13)] * -1.000000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + d[(14)]);
  data_pack_local[(14)] = 0.000000e+00f;
  data_pack_local[(14)] = (data_pack_local[(14)] + (d[(5)] * -1.000000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + (d[(6)] * -1.000000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + d[(13)]);
  data_pack_local[(14)] = (data_pack_local[(14)] + d[(14)]);
  data_pack_local[(15)] = 0.000000e+00f;
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(5)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + (d[(7)] * -1.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + (d[(13)] * -1.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + d[(15)]);
  for (int eps1 = 0; eps1 < 4; ++eps1) {
    for (int nu1 = 0; nu1 < 4; ++nu1) {
      data_pack[(((((eps1 * 3211264) + (nu1 * 802816)) + (((int)blockIdx.x) * 128)) + ((int)threadIdx.x)))] = data_pack_local[(((eps1 * 4) + nu1))];
    }
  }
}

extern "C" __global__ void fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_kernel1(void* __restrict__ placeholder, float* __restrict__ data_pack, float* __restrict__ bgemm) {
  float bgemm_local[112];
  __shared__ float placeholder_shared[1024];
  __shared__ float data_pack_shared[896];
  #pragma unroll
  for (int co_c_init = 0; co_c_init < 4; ++co_c_init) {
    bgemm_local[(co_c_init)] = 0.000000e+00f;
    bgemm_local[((co_c_init + 28))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 56))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 84))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 4))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 32))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 60))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 88))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 8))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 36))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 64))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 92))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 12))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 40))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 68))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 96))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 16))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 44))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 72))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 100))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 20))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 48))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 76))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 104))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 24))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 52))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 80))] = 0.000000e+00f;
    bgemm_local[((co_c_init + 108))] = 0.000000e+00f;
  }
  for (int ci_outer = 0; ci_outer < 32; ++ci_outer) {
    __syncthreads();
    #pragma unroll
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer = 0; ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer < 8; ++ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer) {
      placeholder_shared[((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 128) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)))] = ((float*)placeholder)[(((((((((int)blockIdx.z) * 65536) + (ci_outer * 2048)) + (ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 256)) + (((int)blockIdx.y) * 128)) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)))];
    }
    #pragma unroll
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer1 < 7; ++ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer1) {
      data_pack_shared[((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer1 * 128) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)))] = data_pack[((((((((int)blockIdx.z) * 401408) + (ci_outer * 12544)) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer1 * 128) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)) / 112) * 1568)) + (((int)blockIdx.x) * 112)) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer1 * 128) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)) % 112)))];
    }
    __syncthreads();
    for (int ci_inner = 0; ci_inner < 8; ++ci_inner) {
      #pragma unroll
      for (int co_c = 0; co_c < 4; ++co_c) {
        bgemm_local[(co_c)] = (bgemm_local[(co_c)] + (placeholder_shared[((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c))] * data_pack_shared[(((ci_inner * 112) + ((int)threadIdx.x)))]));
        bgemm_local[((co_c + 28))] = (bgemm_local[((co_c + 28))] + (placeholder_shared[(((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c) + 32))] * data_pack_shared[(((ci_inner * 112) + ((int)threadIdx.x)))]));
        bgemm_local[((co_c + 56))] = (bgemm_local[((co_c + 56))] + (placeholder_shared[(((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c) + 64))] * data_pack_shared[(((ci_inner * 112) + ((int)threadIdx.x)))]));
        bgemm_local[((co_c + 84))] = (bgemm_local[((co_c + 84))] + (placeholder_shared[(((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c) + 96))] * data_pack_shared[(((ci_inner * 112) + ((int)threadIdx.x)))]));
        bgemm_local[((co_c + 4))] = (bgemm_local[((co_c + 4))] + (placeholder_shared[((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 16))]));
        bgemm_local[((co_c + 32))] = (bgemm_local[((co_c + 32))] + (placeholder_shared[(((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c) + 32))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 16))]));
        bgemm_local[((co_c + 60))] = (bgemm_local[((co_c + 60))] + (placeholder_shared[(((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c) + 64))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 16))]));
        bgemm_local[((co_c + 88))] = (bgemm_local[((co_c + 88))] + (placeholder_shared[(((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c) + 96))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 16))]));
        bgemm_local[((co_c + 8))] = (bgemm_local[((co_c + 8))] + (placeholder_shared[((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 32))]));
        bgemm_local[((co_c + 36))] = (bgemm_local[((co_c + 36))] + (placeholder_shared[(((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c) + 32))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 32))]));
        bgemm_local[((co_c + 64))] = (bgemm_local[((co_c + 64))] + (placeholder_shared[(((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c) + 64))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 32))]));
        bgemm_local[((co_c + 92))] = (bgemm_local[((co_c + 92))] + (placeholder_shared[(((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c) + 96))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 32))]));
        bgemm_local[((co_c + 12))] = (bgemm_local[((co_c + 12))] + (placeholder_shared[((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 48))]));
        bgemm_local[((co_c + 40))] = (bgemm_local[((co_c + 40))] + (placeholder_shared[(((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c) + 32))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 48))]));
        bgemm_local[((co_c + 68))] = (bgemm_local[((co_c + 68))] + (placeholder_shared[(((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c) + 64))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 48))]));
        bgemm_local[((co_c + 96))] = (bgemm_local[((co_c + 96))] + (placeholder_shared[(((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c) + 96))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 48))]));
        bgemm_local[((co_c + 16))] = (bgemm_local[((co_c + 16))] + (placeholder_shared[((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 64))]));
        bgemm_local[((co_c + 44))] = (bgemm_local[((co_c + 44))] + (placeholder_shared[(((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c) + 32))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 64))]));
        bgemm_local[((co_c + 72))] = (bgemm_local[((co_c + 72))] + (placeholder_shared[(((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c) + 64))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 64))]));
        bgemm_local[((co_c + 100))] = (bgemm_local[((co_c + 100))] + (placeholder_shared[(((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c) + 96))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 64))]));
        bgemm_local[((co_c + 20))] = (bgemm_local[((co_c + 20))] + (placeholder_shared[((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 80))]));
        bgemm_local[((co_c + 48))] = (bgemm_local[((co_c + 48))] + (placeholder_shared[(((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c) + 32))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 80))]));
        bgemm_local[((co_c + 76))] = (bgemm_local[((co_c + 76))] + (placeholder_shared[(((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c) + 64))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 80))]));
        bgemm_local[((co_c + 104))] = (bgemm_local[((co_c + 104))] + (placeholder_shared[(((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c) + 96))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 80))]));
        bgemm_local[((co_c + 24))] = (bgemm_local[((co_c + 24))] + (placeholder_shared[((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 96))]));
        bgemm_local[((co_c + 52))] = (bgemm_local[((co_c + 52))] + (placeholder_shared[(((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c) + 32))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 96))]));
        bgemm_local[((co_c + 80))] = (bgemm_local[((co_c + 80))] + (placeholder_shared[(((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c) + 64))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 96))]));
        bgemm_local[((co_c + 108))] = (bgemm_local[((co_c + 108))] + (placeholder_shared[(((((ci_inner * 128) + (((int)threadIdx.y) * 4)) + co_c) + 96))] * data_pack_shared[((((ci_inner * 112) + ((int)threadIdx.x)) + 96))]));
      }
    }
  }
  #pragma unroll
  for (int co_inner_inner_inner = 0; co_inner_inner_inner < 4; ++co_inner_inner_inner) {
    bgemm[(((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)))] = bgemm_local[(co_inner_inner_inner)];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 50176))] = bgemm_local[((co_inner_inner_inner + 28))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 100352))] = bgemm_local[((co_inner_inner_inner + 56))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 150528))] = bgemm_local[((co_inner_inner_inner + 84))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 16))] = bgemm_local[((co_inner_inner_inner + 4))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 50192))] = bgemm_local[((co_inner_inner_inner + 32))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 100368))] = bgemm_local[((co_inner_inner_inner + 60))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 150544))] = bgemm_local[((co_inner_inner_inner + 88))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 32))] = bgemm_local[((co_inner_inner_inner + 8))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 50208))] = bgemm_local[((co_inner_inner_inner + 36))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 100384))] = bgemm_local[((co_inner_inner_inner + 64))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 150560))] = bgemm_local[((co_inner_inner_inner + 92))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 48))] = bgemm_local[((co_inner_inner_inner + 12))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 50224))] = bgemm_local[((co_inner_inner_inner + 40))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 100400))] = bgemm_local[((co_inner_inner_inner + 68))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 150576))] = bgemm_local[((co_inner_inner_inner + 96))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 64))] = bgemm_local[((co_inner_inner_inner + 16))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 50240))] = bgemm_local[((co_inner_inner_inner + 44))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 100416))] = bgemm_local[((co_inner_inner_inner + 72))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 150592))] = bgemm_local[((co_inner_inner_inner + 100))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 80))] = bgemm_local[((co_inner_inner_inner + 20))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 50256))] = bgemm_local[((co_inner_inner_inner + 48))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 100432))] = bgemm_local[((co_inner_inner_inner + 76))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 150608))] = bgemm_local[((co_inner_inner_inner + 104))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 96))] = bgemm_local[((co_inner_inner_inner + 24))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 50272))] = bgemm_local[((co_inner_inner_inner + 52))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 100448))] = bgemm_local[((co_inner_inner_inner + 80))];
    bgemm[((((((((((int)blockIdx.z) * 401408) + (((int)blockIdx.y) * 200704)) + (((int)threadIdx.y) * 6272)) + (co_inner_inner_inner * 1568)) + (((int)blockIdx.x) * 112)) + ((int)threadIdx.x)) + 150624))] = bgemm_local[((co_inner_inner_inner + 108))];
  }
}

extern "C" __global__ void fused_nn_contrib_conv2d_winograd_without_weight_transform_add_add_nn_relu_3_kernel2(float* __restrict__ bgemm, void* __restrict__ T_relu, void* __restrict__ placeholder, void* __restrict__ placeholder1) {
  float inverse[16];
  inverse[(0)] = 0.000000e+00f;
  inverse[(0)] = (inverse[(0)] + bgemm[((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 401408))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 802816))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 1204224))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 1605632))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 2408448))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 2809856))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 3211264))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 3612672))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4014080))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4816896))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 5218304))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 5619712))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6021120))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6422528))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 7225344))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 7626752))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8028160))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8429568))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8830976))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 9633792))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10035200))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10436608))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10838016))]);
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 11239424))]);
  inverse[(1)] = 0.000000e+00f;
  inverse[(1)] = (inverse[(1)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 401408))] * -1.000000e+00f));
  inverse[(1)] = (inverse[(1)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 802816))]);
  inverse[(1)] = (inverse[(1)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 1204224))] * 5.000000e-01f));
  inverse[(1)] = (inverse[(1)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 1605632))] * -2.000000e+00f));
  inverse[(1)] = (inverse[(1)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 2809856))] * -1.000000e+00f));
  inverse[(1)] = (inverse[(1)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 3211264))]);
  inverse[(1)] = (inverse[(1)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 3612672))] * 5.000000e-01f));
  inverse[(1)] = (inverse[(1)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4014080))] * -2.000000e+00f));
  inverse[(1)] = (inverse[(1)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 5218304))] * -1.000000e+00f));
  inverse[(1)] = (inverse[(1)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 5619712))]);
  inverse[(1)] = (inverse[(1)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6021120))] * 5.000000e-01f));
  inverse[(1)] = (inverse[(1)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6422528))] * -2.000000e+00f));
  inverse[(1)] = (inverse[(1)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 7626752))] * -1.000000e+00f));
  inverse[(1)] = (inverse[(1)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8028160))]);
  inverse[(1)] = (inverse[(1)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8429568))] * 5.000000e-01f));
  inverse[(1)] = (inverse[(1)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8830976))] * -2.000000e+00f));
  inverse[(1)] = (inverse[(1)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10035200))] * -1.000000e+00f));
  inverse[(1)] = (inverse[(1)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10436608))]);
  inverse[(1)] = (inverse[(1)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10838016))] * 5.000000e-01f));
  inverse[(1)] = (inverse[(1)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 11239424))] * -2.000000e+00f));
  inverse[(2)] = 0.000000e+00f;
  inverse[(2)] = (inverse[(2)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 401408))]);
  inverse[(2)] = (inverse[(2)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 802816))]);
  inverse[(2)] = (inverse[(2)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 1204224))] * 2.500000e-01f));
  inverse[(2)] = (inverse[(2)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 1605632))] * 4.000000e+00f));
  inverse[(2)] = (inverse[(2)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 2809856))]);
  inverse[(2)] = (inverse[(2)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 3211264))]);
  inverse[(2)] = (inverse[(2)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 3612672))] * 2.500000e-01f));
  inverse[(2)] = (inverse[(2)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4014080))] * 4.000000e+00f));
  inverse[(2)] = (inverse[(2)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 5218304))]);
  inverse[(2)] = (inverse[(2)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 5619712))]);
  inverse[(2)] = (inverse[(2)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6021120))] * 2.500000e-01f));
  inverse[(2)] = (inverse[(2)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6422528))] * 4.000000e+00f));
  inverse[(2)] = (inverse[(2)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 7626752))]);
  inverse[(2)] = (inverse[(2)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8028160))]);
  inverse[(2)] = (inverse[(2)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8429568))] * 2.500000e-01f));
  inverse[(2)] = (inverse[(2)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8830976))] * 4.000000e+00f));
  inverse[(2)] = (inverse[(2)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10035200))]);
  inverse[(2)] = (inverse[(2)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10436608))]);
  inverse[(2)] = (inverse[(2)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10838016))] * 2.500000e-01f));
  inverse[(2)] = (inverse[(2)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 11239424))] * 4.000000e+00f));
  inverse[(3)] = 0.000000e+00f;
  inverse[(3)] = (inverse[(3)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 401408))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 802816))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 1204224))] * 1.250000e-01f));
  inverse[(3)] = (inverse[(3)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 1605632))] * -8.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 2007040))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 2809856))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 3211264))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 3612672))] * 1.250000e-01f));
  inverse[(3)] = (inverse[(3)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4014080))] * -8.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4415488))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 5218304))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 5619712))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6021120))] * 1.250000e-01f));
  inverse[(3)] = (inverse[(3)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6422528))] * -8.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6823936))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 7626752))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8028160))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8429568))] * 1.250000e-01f));
  inverse[(3)] = (inverse[(3)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8830976))] * -8.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 9232384))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10035200))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10436608))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10838016))] * 1.250000e-01f));
  inverse[(3)] = (inverse[(3)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 11239424))] * -8.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 11640832))]);
  inverse[(4)] = 0.000000e+00f;
  inverse[(4)] = (inverse[(4)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 2408448))] * -1.000000e+00f));
  inverse[(4)] = (inverse[(4)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 2809856))] * -1.000000e+00f));
  inverse[(4)] = (inverse[(4)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 3211264))] * -1.000000e+00f));
  inverse[(4)] = (inverse[(4)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 3612672))] * -1.000000e+00f));
  inverse[(4)] = (inverse[(4)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4014080))] * -1.000000e+00f));
  inverse[(4)] = (inverse[(4)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4816896))]);
  inverse[(4)] = (inverse[(4)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 5218304))]);
  inverse[(4)] = (inverse[(4)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 5619712))]);
  inverse[(4)] = (inverse[(4)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6021120))]);
  inverse[(4)] = (inverse[(4)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6422528))]);
  inverse[(4)] = (inverse[(4)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 7225344))] * 5.000000e-01f));
  inverse[(4)] = (inverse[(4)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 7626752))] * 5.000000e-01f));
  inverse[(4)] = (inverse[(4)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8028160))] * 5.000000e-01f));
  inverse[(4)] = (inverse[(4)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8429568))] * 5.000000e-01f));
  inverse[(4)] = (inverse[(4)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8830976))] * 5.000000e-01f));
  inverse[(4)] = (inverse[(4)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 9633792))] * -2.000000e+00f));
  inverse[(4)] = (inverse[(4)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10035200))] * -2.000000e+00f));
  inverse[(4)] = (inverse[(4)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10436608))] * -2.000000e+00f));
  inverse[(4)] = (inverse[(4)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10838016))] * -2.000000e+00f));
  inverse[(4)] = (inverse[(4)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 11239424))] * -2.000000e+00f));
  inverse[(5)] = 0.000000e+00f;
  inverse[(5)] = (inverse[(5)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 2809856))] * -1.000000e+00f) * -1.000000e+00f));
  inverse[(5)] = (inverse[(5)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 3211264))] * -1.000000e+00f));
  inverse[(5)] = (inverse[(5)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 3612672))] * -1.000000e+00f) * 5.000000e-01f));
  inverse[(5)] = (inverse[(5)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4014080))] * -1.000000e+00f) * -2.000000e+00f));
  inverse[(5)] = (inverse[(5)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 5218304))] * -1.000000e+00f));
  inverse[(5)] = (inverse[(5)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 5619712))]);
  inverse[(5)] = (inverse[(5)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6021120))] * 5.000000e-01f));
  inverse[(5)] = (inverse[(5)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6422528))] * -2.000000e+00f));
  inverse[(5)] = (inverse[(5)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 7626752))] * 5.000000e-01f) * -1.000000e+00f));
  inverse[(5)] = (inverse[(5)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8028160))] * 5.000000e-01f));
  inverse[(5)] = (inverse[(5)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8429568))] * 5.000000e-01f) * 5.000000e-01f));
  inverse[(5)] = (inverse[(5)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8830976))] * 5.000000e-01f) * -2.000000e+00f));
  inverse[(5)] = (inverse[(5)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10035200))] * -2.000000e+00f) * -1.000000e+00f));
  inverse[(5)] = (inverse[(5)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10436608))] * -2.000000e+00f));
  inverse[(5)] = (inverse[(5)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10838016))] * -2.000000e+00f) * 5.000000e-01f));
  inverse[(5)] = (inverse[(5)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 11239424))] * -2.000000e+00f) * -2.000000e+00f));
  inverse[(6)] = 0.000000e+00f;
  inverse[(6)] = (inverse[(6)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 2809856))] * -1.000000e+00f));
  inverse[(6)] = (inverse[(6)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 3211264))] * -1.000000e+00f));
  inverse[(6)] = (inverse[(6)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 3612672))] * -1.000000e+00f) * 2.500000e-01f));
  inverse[(6)] = (inverse[(6)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4014080))] * -1.000000e+00f) * 4.000000e+00f));
  inverse[(6)] = (inverse[(6)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 5218304))]);
  inverse[(6)] = (inverse[(6)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 5619712))]);
  inverse[(6)] = (inverse[(6)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6021120))] * 2.500000e-01f));
  inverse[(6)] = (inverse[(6)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6422528))] * 4.000000e+00f));
  inverse[(6)] = (inverse[(6)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 7626752))] * 5.000000e-01f));
  inverse[(6)] = (inverse[(6)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8028160))] * 5.000000e-01f));
  inverse[(6)] = (inverse[(6)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8429568))] * 5.000000e-01f) * 2.500000e-01f));
  inverse[(6)] = (inverse[(6)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8830976))] * 5.000000e-01f) * 4.000000e+00f));
  inverse[(6)] = (inverse[(6)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10035200))] * -2.000000e+00f));
  inverse[(6)] = (inverse[(6)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10436608))] * -2.000000e+00f));
  inverse[(6)] = (inverse[(6)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10838016))] * -2.000000e+00f) * 2.500000e-01f));
  inverse[(6)] = (inverse[(6)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 11239424))] * -2.000000e+00f) * 4.000000e+00f));
  inverse[(7)] = 0.000000e+00f;
  inverse[(7)] = (inverse[(7)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 2809856))] * -1.000000e+00f) * -1.000000e+00f));
  inverse[(7)] = (inverse[(7)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 3211264))] * -1.000000e+00f));
  inverse[(7)] = (inverse[(7)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 3612672))] * -1.000000e+00f) * 1.250000e-01f));
  inverse[(7)] = (inverse[(7)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4014080))] * -1.000000e+00f) * -8.000000e+00f));
  inverse[(7)] = (inverse[(7)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4415488))] * -1.000000e+00f));
  inverse[(7)] = (inverse[(7)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 5218304))] * -1.000000e+00f));
  inverse[(7)] = (inverse[(7)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 5619712))]);
  inverse[(7)] = (inverse[(7)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6021120))] * 1.250000e-01f));
  inverse[(7)] = (inverse[(7)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6422528))] * -8.000000e+00f));
  inverse[(7)] = (inverse[(7)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6823936))]);
  inverse[(7)] = (inverse[(7)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 7626752))] * 5.000000e-01f) * -1.000000e+00f));
  inverse[(7)] = (inverse[(7)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8028160))] * 5.000000e-01f));
  inverse[(7)] = (inverse[(7)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8429568))] * 5.000000e-01f) * 1.250000e-01f));
  inverse[(7)] = (inverse[(7)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8830976))] * 5.000000e-01f) * -8.000000e+00f));
  inverse[(7)] = (inverse[(7)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 9232384))] * 5.000000e-01f));
  inverse[(7)] = (inverse[(7)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10035200))] * -2.000000e+00f) * -1.000000e+00f));
  inverse[(7)] = (inverse[(7)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10436608))] * -2.000000e+00f));
  inverse[(7)] = (inverse[(7)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10838016))] * -2.000000e+00f) * 1.250000e-01f));
  inverse[(7)] = (inverse[(7)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 11239424))] * -2.000000e+00f) * -8.000000e+00f));
  inverse[(7)] = (inverse[(7)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 11640832))] * -2.000000e+00f));
  inverse[(8)] = 0.000000e+00f;
  inverse[(8)] = (inverse[(8)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 2408448))]);
  inverse[(8)] = (inverse[(8)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 2809856))]);
  inverse[(8)] = (inverse[(8)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 3211264))]);
  inverse[(8)] = (inverse[(8)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 3612672))]);
  inverse[(8)] = (inverse[(8)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4014080))]);
  inverse[(8)] = (inverse[(8)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4816896))]);
  inverse[(8)] = (inverse[(8)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 5218304))]);
  inverse[(8)] = (inverse[(8)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 5619712))]);
  inverse[(8)] = (inverse[(8)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6021120))]);
  inverse[(8)] = (inverse[(8)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6422528))]);
  inverse[(8)] = (inverse[(8)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 7225344))] * 2.500000e-01f));
  inverse[(8)] = (inverse[(8)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 7626752))] * 2.500000e-01f));
  inverse[(8)] = (inverse[(8)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8028160))] * 2.500000e-01f));
  inverse[(8)] = (inverse[(8)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8429568))] * 2.500000e-01f));
  inverse[(8)] = (inverse[(8)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8830976))] * 2.500000e-01f));
  inverse[(8)] = (inverse[(8)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 9633792))] * 4.000000e+00f));
  inverse[(8)] = (inverse[(8)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10035200))] * 4.000000e+00f));
  inverse[(8)] = (inverse[(8)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10436608))] * 4.000000e+00f));
  inverse[(8)] = (inverse[(8)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10838016))] * 4.000000e+00f));
  inverse[(8)] = (inverse[(8)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 11239424))] * 4.000000e+00f));
  inverse[(9)] = 0.000000e+00f;
  inverse[(9)] = (inverse[(9)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 2809856))] * -1.000000e+00f));
  inverse[(9)] = (inverse[(9)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 3211264))]);
  inverse[(9)] = (inverse[(9)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 3612672))] * 5.000000e-01f));
  inverse[(9)] = (inverse[(9)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4014080))] * -2.000000e+00f));
  inverse[(9)] = (inverse[(9)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 5218304))] * -1.000000e+00f));
  inverse[(9)] = (inverse[(9)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 5619712))]);
  inverse[(9)] = (inverse[(9)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6021120))] * 5.000000e-01f));
  inverse[(9)] = (inverse[(9)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6422528))] * -2.000000e+00f));
  inverse[(9)] = (inverse[(9)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 7626752))] * 2.500000e-01f) * -1.000000e+00f));
  inverse[(9)] = (inverse[(9)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8028160))] * 2.500000e-01f));
  inverse[(9)] = (inverse[(9)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8429568))] * 2.500000e-01f) * 5.000000e-01f));
  inverse[(9)] = (inverse[(9)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8830976))] * 2.500000e-01f) * -2.000000e+00f));
  inverse[(9)] = (inverse[(9)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10035200))] * 4.000000e+00f) * -1.000000e+00f));
  inverse[(9)] = (inverse[(9)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10436608))] * 4.000000e+00f));
  inverse[(9)] = (inverse[(9)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10838016))] * 4.000000e+00f) * 5.000000e-01f));
  inverse[(9)] = (inverse[(9)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 11239424))] * 4.000000e+00f) * -2.000000e+00f));
  inverse[(10)] = 0.000000e+00f;
  inverse[(10)] = (inverse[(10)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 2809856))]);
  inverse[(10)] = (inverse[(10)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 3211264))]);
  inverse[(10)] = (inverse[(10)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 3612672))] * 2.500000e-01f));
  inverse[(10)] = (inverse[(10)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4014080))] * 4.000000e+00f));
  inverse[(10)] = (inverse[(10)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 5218304))]);
  inverse[(10)] = (inverse[(10)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 5619712))]);
  inverse[(10)] = (inverse[(10)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6021120))] * 2.500000e-01f));
  inverse[(10)] = (inverse[(10)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6422528))] * 4.000000e+00f));
  inverse[(10)] = (inverse[(10)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 7626752))] * 2.500000e-01f));
  inverse[(10)] = (inverse[(10)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8028160))] * 2.500000e-01f));
  inverse[(10)] = (inverse[(10)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8429568))] * 2.500000e-01f) * 2.500000e-01f));
  inverse[(10)] = (inverse[(10)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8830976))] * 2.500000e-01f) * 4.000000e+00f));
  inverse[(10)] = (inverse[(10)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10035200))] * 4.000000e+00f));
  inverse[(10)] = (inverse[(10)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10436608))] * 4.000000e+00f));
  inverse[(10)] = (inverse[(10)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10838016))] * 4.000000e+00f) * 2.500000e-01f));
  inverse[(10)] = (inverse[(10)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 11239424))] * 4.000000e+00f) * 4.000000e+00f));
  inverse[(11)] = 0.000000e+00f;
  inverse[(11)] = (inverse[(11)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 2809856))] * -1.000000e+00f));
  inverse[(11)] = (inverse[(11)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 3211264))]);
  inverse[(11)] = (inverse[(11)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 3612672))] * 1.250000e-01f));
  inverse[(11)] = (inverse[(11)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4014080))] * -8.000000e+00f));
  inverse[(11)] = (inverse[(11)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4415488))]);
  inverse[(11)] = (inverse[(11)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 5218304))] * -1.000000e+00f));
  inverse[(11)] = (inverse[(11)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 5619712))]);
  inverse[(11)] = (inverse[(11)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6021120))] * 1.250000e-01f));
  inverse[(11)] = (inverse[(11)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6422528))] * -8.000000e+00f));
  inverse[(11)] = (inverse[(11)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6823936))]);
  inverse[(11)] = (inverse[(11)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 7626752))] * 2.500000e-01f) * -1.000000e+00f));
  inverse[(11)] = (inverse[(11)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8028160))] * 2.500000e-01f));
  inverse[(11)] = (inverse[(11)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8429568))] * 2.500000e-01f) * 1.250000e-01f));
  inverse[(11)] = (inverse[(11)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8830976))] * 2.500000e-01f) * -8.000000e+00f));
  inverse[(11)] = (inverse[(11)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 9232384))] * 2.500000e-01f));
  inverse[(11)] = (inverse[(11)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10035200))] * 4.000000e+00f) * -1.000000e+00f));
  inverse[(11)] = (inverse[(11)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10436608))] * 4.000000e+00f));
  inverse[(11)] = (inverse[(11)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10838016))] * 4.000000e+00f) * 1.250000e-01f));
  inverse[(11)] = (inverse[(11)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 11239424))] * 4.000000e+00f) * -8.000000e+00f));
  inverse[(11)] = (inverse[(11)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 11640832))] * 4.000000e+00f));
  inverse[(12)] = 0.000000e+00f;
  inverse[(12)] = (inverse[(12)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 2408448))] * -1.000000e+00f));
  inverse[(12)] = (inverse[(12)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 2809856))] * -1.000000e+00f));
  inverse[(12)] = (inverse[(12)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 3211264))] * -1.000000e+00f));
  inverse[(12)] = (inverse[(12)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 3612672))] * -1.000000e+00f));
  inverse[(12)] = (inverse[(12)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4014080))] * -1.000000e+00f));
  inverse[(12)] = (inverse[(12)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4816896))]);
  inverse[(12)] = (inverse[(12)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 5218304))]);
  inverse[(12)] = (inverse[(12)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 5619712))]);
  inverse[(12)] = (inverse[(12)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6021120))]);
  inverse[(12)] = (inverse[(12)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6422528))]);
  inverse[(12)] = (inverse[(12)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 7225344))] * 1.250000e-01f));
  inverse[(12)] = (inverse[(12)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 7626752))] * 1.250000e-01f));
  inverse[(12)] = (inverse[(12)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8028160))] * 1.250000e-01f));
  inverse[(12)] = (inverse[(12)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8429568))] * 1.250000e-01f));
  inverse[(12)] = (inverse[(12)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8830976))] * 1.250000e-01f));
  inverse[(12)] = (inverse[(12)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 9633792))] * -8.000000e+00f));
  inverse[(12)] = (inverse[(12)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10035200))] * -8.000000e+00f));
  inverse[(12)] = (inverse[(12)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10436608))] * -8.000000e+00f));
  inverse[(12)] = (inverse[(12)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10838016))] * -8.000000e+00f));
  inverse[(12)] = (inverse[(12)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 11239424))] * -8.000000e+00f));
  inverse[(12)] = (inverse[(12)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 12042240))]);
  inverse[(12)] = (inverse[(12)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 12443648))]);
  inverse[(12)] = (inverse[(12)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 12845056))]);
  inverse[(12)] = (inverse[(12)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 13246464))]);
  inverse[(12)] = (inverse[(12)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 13647872))]);
  inverse[(13)] = 0.000000e+00f;
  inverse[(13)] = (inverse[(13)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 2809856))] * -1.000000e+00f) * -1.000000e+00f));
  inverse[(13)] = (inverse[(13)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 3211264))] * -1.000000e+00f));
  inverse[(13)] = (inverse[(13)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 3612672))] * -1.000000e+00f) * 5.000000e-01f));
  inverse[(13)] = (inverse[(13)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4014080))] * -1.000000e+00f) * -2.000000e+00f));
  inverse[(13)] = (inverse[(13)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 5218304))] * -1.000000e+00f));
  inverse[(13)] = (inverse[(13)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 5619712))]);
  inverse[(13)] = (inverse[(13)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6021120))] * 5.000000e-01f));
  inverse[(13)] = (inverse[(13)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6422528))] * -2.000000e+00f));
  inverse[(13)] = (inverse[(13)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 7626752))] * 1.250000e-01f) * -1.000000e+00f));
  inverse[(13)] = (inverse[(13)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8028160))] * 1.250000e-01f));
  inverse[(13)] = (inverse[(13)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8429568))] * 1.250000e-01f) * 5.000000e-01f));
  inverse[(13)] = (inverse[(13)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8830976))] * 1.250000e-01f) * -2.000000e+00f));
  inverse[(13)] = (inverse[(13)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10035200))] * -8.000000e+00f) * -1.000000e+00f));
  inverse[(13)] = (inverse[(13)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10436608))] * -8.000000e+00f));
  inverse[(13)] = (inverse[(13)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10838016))] * -8.000000e+00f) * 5.000000e-01f));
  inverse[(13)] = (inverse[(13)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 11239424))] * -8.000000e+00f) * -2.000000e+00f));
  inverse[(13)] = (inverse[(13)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 12443648))] * -1.000000e+00f));
  inverse[(13)] = (inverse[(13)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 12845056))]);
  inverse[(13)] = (inverse[(13)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 13246464))] * 5.000000e-01f));
  inverse[(13)] = (inverse[(13)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 13647872))] * -2.000000e+00f));
  inverse[(14)] = 0.000000e+00f;
  inverse[(14)] = (inverse[(14)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 2809856))] * -1.000000e+00f));
  inverse[(14)] = (inverse[(14)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 3211264))] * -1.000000e+00f));
  inverse[(14)] = (inverse[(14)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 3612672))] * -1.000000e+00f) * 2.500000e-01f));
  inverse[(14)] = (inverse[(14)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4014080))] * -1.000000e+00f) * 4.000000e+00f));
  inverse[(14)] = (inverse[(14)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 5218304))]);
  inverse[(14)] = (inverse[(14)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 5619712))]);
  inverse[(14)] = (inverse[(14)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6021120))] * 2.500000e-01f));
  inverse[(14)] = (inverse[(14)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6422528))] * 4.000000e+00f));
  inverse[(14)] = (inverse[(14)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 7626752))] * 1.250000e-01f));
  inverse[(14)] = (inverse[(14)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8028160))] * 1.250000e-01f));
  inverse[(14)] = (inverse[(14)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8429568))] * 1.250000e-01f) * 2.500000e-01f));
  inverse[(14)] = (inverse[(14)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8830976))] * 1.250000e-01f) * 4.000000e+00f));
  inverse[(14)] = (inverse[(14)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10035200))] * -8.000000e+00f));
  inverse[(14)] = (inverse[(14)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10436608))] * -8.000000e+00f));
  inverse[(14)] = (inverse[(14)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10838016))] * -8.000000e+00f) * 2.500000e-01f));
  inverse[(14)] = (inverse[(14)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 11239424))] * -8.000000e+00f) * 4.000000e+00f));
  inverse[(14)] = (inverse[(14)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 12443648))]);
  inverse[(14)] = (inverse[(14)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 12845056))]);
  inverse[(14)] = (inverse[(14)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 13246464))] * 2.500000e-01f));
  inverse[(14)] = (inverse[(14)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 13647872))] * 4.000000e+00f));
  inverse[(15)] = 0.000000e+00f;
  inverse[(15)] = (inverse[(15)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 2809856))] * -1.000000e+00f) * -1.000000e+00f));
  inverse[(15)] = (inverse[(15)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 3211264))] * -1.000000e+00f));
  inverse[(15)] = (inverse[(15)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 3612672))] * -1.000000e+00f) * 1.250000e-01f));
  inverse[(15)] = (inverse[(15)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4014080))] * -1.000000e+00f) * -8.000000e+00f));
  inverse[(15)] = (inverse[(15)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 4415488))] * -1.000000e+00f));
  inverse[(15)] = (inverse[(15)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 5218304))] * -1.000000e+00f));
  inverse[(15)] = (inverse[(15)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 5619712))]);
  inverse[(15)] = (inverse[(15)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6021120))] * 1.250000e-01f));
  inverse[(15)] = (inverse[(15)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6422528))] * -8.000000e+00f));
  inverse[(15)] = (inverse[(15)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 6823936))]);
  inverse[(15)] = (inverse[(15)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 7626752))] * 1.250000e-01f) * -1.000000e+00f));
  inverse[(15)] = (inverse[(15)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8028160))] * 1.250000e-01f));
  inverse[(15)] = (inverse[(15)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8429568))] * 1.250000e-01f) * 1.250000e-01f));
  inverse[(15)] = (inverse[(15)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 8830976))] * 1.250000e-01f) * -8.000000e+00f));
  inverse[(15)] = (inverse[(15)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 9232384))] * 1.250000e-01f));
  inverse[(15)] = (inverse[(15)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10035200))] * -8.000000e+00f) * -1.000000e+00f));
  inverse[(15)] = (inverse[(15)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10436608))] * -8.000000e+00f));
  inverse[(15)] = (inverse[(15)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 10838016))] * -8.000000e+00f) * 1.250000e-01f));
  inverse[(15)] = (inverse[(15)] + ((bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 11239424))] * -8.000000e+00f) * -8.000000e+00f));
  inverse[(15)] = (inverse[(15)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 11640832))] * -8.000000e+00f));
  inverse[(15)] = (inverse[(15)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 12443648))] * -1.000000e+00f));
  inverse[(15)] = (inverse[(15)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 12845056))]);
  inverse[(15)] = (inverse[(15)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 13246464))] * 1.250000e-01f));
  inverse[(15)] = (inverse[(15)] + (bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 13647872))] * -8.000000e+00f));
  inverse[(15)] = (inverse[(15)] + bgemm[(((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196) * 6272) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 12544) * 196)) + (((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196)) + 14049280))]);
  for (int ax2_inner = 0; ax2_inner < 4; ++ax2_inner) {
    for (int ax3_inner = 0; ax3_inner < 4; ++ax3_inner) {
      ((float*)T_relu)[((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 14) * 224) + (ax2_inner * 56)) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 14) * 4)) + ax3_inner))] = max((float)((((float*)placeholder)[((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 14) * 224) + (ax2_inner * 56)) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 14) * 4)) + ax3_inner))] + (inverse[(((ax2_inner * 4) + ax3_inner))] + ((float*)placeholder1)[(((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 12544) / 196))]))), (float)(0.000000e+00f));
    }
  }
}

extern "C" __global__ void fused_nn_contrib_conv2d_winograd_without_weight_transform_add_kernel1(void* __restrict__ placeholder, float* __restrict__ data_pack, float* __restrict__ bgemm) {
  float bgemm_local[64];
  __shared__ float placeholder_shared[2048];
  __shared__ float data_pack_shared[1024];
  for (int co_c_init = 0; co_c_init < 16; ++co_c_init) {
    for (int p_c_init = 0; p_c_init < 2; ++p_c_init) {
      bgemm_local[(((co_c_init * 2) + p_c_init))] = 0.000000e+00f;
      bgemm_local[((((co_c_init * 2) + p_c_init) + 32))] = 0.000000e+00f;
    }
  }
  for (int ci_outer = 0; ci_outer < 8; ++ci_outer) {
    __syncthreads();
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer = 0; ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer < 16; ++ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer) {
      placeholder_shared[((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 128) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)))] = ((float*)placeholder)[((((((((int)blockIdx.z) * 16384) + (ci_outer * 2048)) + (ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 128)) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)))];
    }
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer1 < 8; ++ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer1) {
      data_pack_shared[((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer1 * 128) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)))] = data_pack[(((((((((int)blockIdx.z) * 802816) + (ci_outer * 100352)) + (ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer1 * 12544)) + ((((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) >> 6) * 6272)) + (((int)blockIdx.x) * 64)) + (((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) & 63)))];
    }
    __syncthreads();
    for (int ci_inner = 0; ci_inner < 16; ++ci_inner) {
      for (int co_c = 0; co_c < 16; ++co_c) {
        for (int p_c = 0; p_c < 2; ++p_c) {
          bgemm_local[(((co_c * 2) + p_c))] = (bgemm_local[(((co_c * 2) + p_c))] + (placeholder_shared[((((ci_inner * 128) + (((int)threadIdx.y) * 16)) + co_c))] * data_pack_shared[((((ci_inner * 64) + (((int)threadIdx.x) * 2)) + p_c))]));
          bgemm_local[((((co_c * 2) + p_c) + 32))] = (bgemm_local[((((co_c * 2) + p_c) + 32))] + (placeholder_shared[((((ci_inner * 128) + (((int)threadIdx.y) * 16)) + co_c))] * data_pack_shared[(((((ci_inner * 64) + (((int)threadIdx.x) * 2)) + p_c) + 32))]));
        }
      }
    }
  }
  for (int co_inner_inner_inner = 0; co_inner_inner_inner < 16; ++co_inner_inner_inner) {
    for (int p_inner_inner_inner = 0; p_inner_inner_inner < 2; ++p_inner_inner_inner) {
      bgemm[(((((((((int)blockIdx.z) * 802816) + (((int)threadIdx.y) * 100352)) + (co_inner_inner_inner * 6272)) + (((int)blockIdx.x) * 64)) + (((int)threadIdx.x) * 2)) + p_inner_inner_inner))] = bgemm_local[(((co_inner_inner_inner * 2) + p_inner_inner_inner))];
      bgemm[((((((((((int)blockIdx.z) * 802816) + (((int)threadIdx.y) * 100352)) + (co_inner_inner_inner * 6272)) + (((int)blockIdx.x) * 64)) + (((int)threadIdx.x) * 2)) + p_inner_inner_inner) + 32))] = bgemm_local[((((co_inner_inner_inner * 2) + p_inner_inner_inner) + 32))];
    }
  }
}

extern "C" __global__ void fused_nn_contrib_conv2d_winograd_without_weight_transform_add_add_nn_relu_kernel2(float* __restrict__ bgemm, void* __restrict__ T_relu, void* __restrict__ placeholder, void* __restrict__ placeholder1) {
  float inverse[4];
  inverse[(0)] = 0.000000e+00f;
  inverse[(0)] = (inverse[(0)] + bgemm[(((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 262144))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 524288))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 1048576))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 1310720))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 1572864))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 2097152))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 2359296))]);
  inverse[(0)] = (inverse[(0)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 2621440))]);
  inverse[(1)] = 0.000000e+00f;
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 262144))] * -1.000000e+00f));
  inverse[(1)] = (inverse[(1)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 524288))]);
  inverse[(1)] = (inverse[(1)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 786432))]);
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 1310720))] * -1.000000e+00f));
  inverse[(1)] = (inverse[(1)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 1572864))]);
  inverse[(1)] = (inverse[(1)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 1835008))]);
  inverse[(1)] = (inverse[(1)] + (bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 2359296))] * -1.000000e+00f));
  inverse[(1)] = (inverse[(1)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 2621440))]);
  inverse[(1)] = (inverse[(1)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 2883584))]);
  inverse[(2)] = 0.000000e+00f;
  inverse[(2)] = (inverse[(2)] + (bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 1048576))] * -1.000000e+00f));
  inverse[(2)] = (inverse[(2)] + (bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 1310720))] * -1.000000e+00f));
  inverse[(2)] = (inverse[(2)] + (bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 1572864))] * -1.000000e+00f));
  inverse[(2)] = (inverse[(2)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 2097152))]);
  inverse[(2)] = (inverse[(2)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 2359296))]);
  inverse[(2)] = (inverse[(2)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 2621440))]);
  inverse[(2)] = (inverse[(2)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 3145728))]);
  inverse[(2)] = (inverse[(2)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 3407872))]);
  inverse[(2)] = (inverse[(2)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 3670016))]);
  inverse[(3)] = 0.000000e+00f;
  inverse[(3)] = (inverse[(3)] + ((bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 1310720))] * -1.000000e+00f) * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 1572864))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 1835008))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 2359296))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 2621440))]);
  inverse[(3)] = (inverse[(3)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 2883584))]);
  inverse[(3)] = (inverse[(3)] + (bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 3407872))] * -1.000000e+00f));
  inverse[(3)] = (inverse[(3)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 3670016))]);
  inverse[(3)] = (inverse[(3)] + bgemm[((((((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511) * 512) + ((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) >> 9) * 16)) + (((int)threadIdx.x) & 15)) + 3932160))]);
  for (int ax2_inner = 0; ax2_inner < 2; ++ax2_inner) {
    for (int ax3_inner = 0; ax3_inner < 2; ++ax3_inner) {
      if (((((((int)threadIdx.x) & 15) >> 2) * 2) + ax2_inner) < 7) {
        if ((((((int)threadIdx.x) & 3) * 2) + ax3_inner) < 7) {
          ((float*)T_relu)[(((((((((int)blockIdx.x) * 392) + ((((int)threadIdx.x) >> 4) * 49)) + (((((int)threadIdx.x) & 15) >> 2) * 14)) + (ax2_inner * 7)) + ((((int)threadIdx.x) & 3) * 2)) + ax3_inner))] = max((float)((((float*)placeholder)[(((((((((int)blockIdx.x) * 392) + ((((int)threadIdx.x) >> 4) * 49)) + (((((int)threadIdx.x) & 15) >> 2) * 14)) + (ax2_inner * 7)) + ((((int)threadIdx.x) & 3) * 2)) + ax3_inner))] + (inverse[(((ax2_inner * 2) + ax3_inner))] + ((float*)placeholder1)[((((((int)blockIdx.x) * 8) + (((int)threadIdx.x) >> 4)) & 511))]))), (float)(0.000000e+00f));
        }
      }
    }
  }
}

extern "C" __global__ void fused_nn_conv2d_add_nn_relu_1_kernel0(void* __restrict__ placeholder, void* __restrict__ placeholder1, void* __restrict__ T_relu, void* __restrict__ placeholder2) {
  float compute[112];
  __shared__ float pad_temp_shared[1710];
  __shared__ float placeholder_shared[2304];
  compute[(0)] = 0.000000e+00f;
  compute[(14)] = 0.000000e+00f;
  compute[(28)] = 0.000000e+00f;
  compute[(42)] = 0.000000e+00f;
  compute[(56)] = 0.000000e+00f;
  compute[(70)] = 0.000000e+00f;
  compute[(84)] = 0.000000e+00f;
  compute[(98)] = 0.000000e+00f;
  compute[(7)] = 0.000000e+00f;
  compute[(21)] = 0.000000e+00f;
  compute[(35)] = 0.000000e+00f;
  compute[(49)] = 0.000000e+00f;
  compute[(63)] = 0.000000e+00f;
  compute[(77)] = 0.000000e+00f;
  compute[(91)] = 0.000000e+00f;
  compute[(105)] = 0.000000e+00f;
  compute[(1)] = 0.000000e+00f;
  compute[(15)] = 0.000000e+00f;
  compute[(29)] = 0.000000e+00f;
  compute[(43)] = 0.000000e+00f;
  compute[(57)] = 0.000000e+00f;
  compute[(71)] = 0.000000e+00f;
  compute[(85)] = 0.000000e+00f;
  compute[(99)] = 0.000000e+00f;
  compute[(8)] = 0.000000e+00f;
  compute[(22)] = 0.000000e+00f;
  compute[(36)] = 0.000000e+00f;
  compute[(50)] = 0.000000e+00f;
  compute[(64)] = 0.000000e+00f;
  compute[(78)] = 0.000000e+00f;
  compute[(92)] = 0.000000e+00f;
  compute[(106)] = 0.000000e+00f;
  compute[(2)] = 0.000000e+00f;
  compute[(16)] = 0.000000e+00f;
  compute[(30)] = 0.000000e+00f;
  compute[(44)] = 0.000000e+00f;
  compute[(58)] = 0.000000e+00f;
  compute[(72)] = 0.000000e+00f;
  compute[(86)] = 0.000000e+00f;
  compute[(100)] = 0.000000e+00f;
  compute[(9)] = 0.000000e+00f;
  compute[(23)] = 0.000000e+00f;
  compute[(37)] = 0.000000e+00f;
  compute[(51)] = 0.000000e+00f;
  compute[(65)] = 0.000000e+00f;
  compute[(79)] = 0.000000e+00f;
  compute[(93)] = 0.000000e+00f;
  compute[(107)] = 0.000000e+00f;
  compute[(3)] = 0.000000e+00f;
  compute[(17)] = 0.000000e+00f;
  compute[(31)] = 0.000000e+00f;
  compute[(45)] = 0.000000e+00f;
  compute[(59)] = 0.000000e+00f;
  compute[(73)] = 0.000000e+00f;
  compute[(87)] = 0.000000e+00f;
  compute[(101)] = 0.000000e+00f;
  compute[(10)] = 0.000000e+00f;
  compute[(24)] = 0.000000e+00f;
  compute[(38)] = 0.000000e+00f;
  compute[(52)] = 0.000000e+00f;
  compute[(66)] = 0.000000e+00f;
  compute[(80)] = 0.000000e+00f;
  compute[(94)] = 0.000000e+00f;
  compute[(108)] = 0.000000e+00f;
  compute[(4)] = 0.000000e+00f;
  compute[(18)] = 0.000000e+00f;
  compute[(32)] = 0.000000e+00f;
  compute[(46)] = 0.000000e+00f;
  compute[(60)] = 0.000000e+00f;
  compute[(74)] = 0.000000e+00f;
  compute[(88)] = 0.000000e+00f;
  compute[(102)] = 0.000000e+00f;
  compute[(11)] = 0.000000e+00f;
  compute[(25)] = 0.000000e+00f;
  compute[(39)] = 0.000000e+00f;
  compute[(53)] = 0.000000e+00f;
  compute[(67)] = 0.000000e+00f;
  compute[(81)] = 0.000000e+00f;
  compute[(95)] = 0.000000e+00f;
  compute[(109)] = 0.000000e+00f;
  compute[(5)] = 0.000000e+00f;
  compute[(19)] = 0.000000e+00f;
  compute[(33)] = 0.000000e+00f;
  compute[(47)] = 0.000000e+00f;
  compute[(61)] = 0.000000e+00f;
  compute[(75)] = 0.000000e+00f;
  compute[(89)] = 0.000000e+00f;
  compute[(103)] = 0.000000e+00f;
  compute[(12)] = 0.000000e+00f;
  compute[(26)] = 0.000000e+00f;
  compute[(40)] = 0.000000e+00f;
  compute[(54)] = 0.000000e+00f;
  compute[(68)] = 0.000000e+00f;
  compute[(82)] = 0.000000e+00f;
  compute[(96)] = 0.000000e+00f;
  compute[(110)] = 0.000000e+00f;
  compute[(6)] = 0.000000e+00f;
  compute[(20)] = 0.000000e+00f;
  compute[(34)] = 0.000000e+00f;
  compute[(48)] = 0.000000e+00f;
  compute[(62)] = 0.000000e+00f;
  compute[(76)] = 0.000000e+00f;
  compute[(90)] = 0.000000e+00f;
  compute[(104)] = 0.000000e+00f;
  compute[(13)] = 0.000000e+00f;
  compute[(27)] = 0.000000e+00f;
  compute[(41)] = 0.000000e+00f;
  compute[(55)] = 0.000000e+00f;
  compute[(69)] = 0.000000e+00f;
  compute[(83)] = 0.000000e+00f;
  compute[(97)] = 0.000000e+00f;
  compute[(111)] = 0.000000e+00f;
  for (int rc_outer = 0; rc_outer < 32; ++rc_outer) {
    __syncthreads();
    pad_temp_shared[(((((int)threadIdx.z) * 107) + (((int)threadIdx.x) * 8)))] = (((1 <= ((((int)blockIdx.y) * 14) + ((((((int)threadIdx.z) * 107) + (((int)threadIdx.x) * 8)) % 855) / 57))) && (1 <= (((((int)threadIdx.z) * 107) + (((int)threadIdx.x) * 8)) % 57))) ? (float)((float*)placeholder)[((((((((((int)blockIdx.z) * 200704) + (rc_outer * 6272)) + ((((((int)threadIdx.z) * 107) + (((int)threadIdx.x) * 8)) / 855) * 3136)) + (((int)blockIdx.y) * 784)) + (((((((int)threadIdx.z) * 107) + (((int)threadIdx.x) * 8)) % 855) / 57) * 56)) + (((((int)threadIdx.z) * 107) + (((int)threadIdx.x) * 8)) % 57)) - 57))] : (float)0.000000e+00f);
    if (((((int)threadIdx.z) * 107) + (((int)threadIdx.x) * 8)) < 1709) {
      pad_temp_shared[((((((int)threadIdx.z) * 107) + (((int)threadIdx.x) * 8)) + 1))] = (((1 <= ((((int)blockIdx.y) * 14) + (((((((int)threadIdx.z) * 107) + (((int)threadIdx.x) * 8)) + 1) % 855) / 57))) && (1 <= ((((((int)threadIdx.z) * 107) + (((int)threadIdx.x) * 8)) + 1) % 57))) ? (float)((float*)placeholder)[((((((((((int)blockIdx.z) * 200704) + (rc_outer * 6272)) + (((((((int)threadIdx.z) * 107) + (((int)threadIdx.x) * 8)) + 1) / 855) * 3136)) + (((int)blockIdx.y) * 784)) + ((((((((int)threadIdx.z) * 107) + (((int)threadIdx.x) * 8)) + 1) % 855) / 57) * 56)) + ((((((int)threadIdx.z) * 107) + (((int)threadIdx.x) * 8)) + 1) % 57)) - 57))] : (float)0.000000e+00f);
    }
    if (((((int)threadIdx.z) * 107) + (((int)threadIdx.x) * 8)) < 1708) {
      pad_temp_shared[((((((int)threadIdx.z) * 107) + (((int)threadIdx.x) * 8)) + 2))] = (((1 <= ((((int)blockIdx.y) * 14) + (((((((int)threadIdx.z) * 107) + (((int)threadIdx.x) * 8)) + 2) % 855) / 57))) && (1 <= ((((((int)threadIdx.z) * 107) + (((int)threadIdx.x) * 8)) + 2) % 57))) ? (float)((float*)placeholder)[((((((((((int)blockIdx.z) * 200704) + (rc_outer * 6272)) + (((((((int)threadIdx.z) * 107) + (((int)threadIdx.x) * 8)) + 2) / 855) * 3136)) + (((int)blockIdx.y) * 784)) + ((((((((int)threadIdx.z) * 107) + (((int)threadIdx.x) * 8)) + 2) % 855) / 57) * 56)) + ((((((int)threadIdx.z) * 107) + (((int)threadIdx.x) * 8)) + 2) % 57)) - 57))] : (float)0.000000e+00f);
    }
    if (((((int)threadIdx.z) * 107) + (((int)threadIdx.x) * 8)) < 1707) {
      if (((int)threadIdx.x) < 13) {
        pad_temp_shared[((((((int)threadIdx.z) * 107) + (((int)threadIdx.x) * 8)) + 3))] = (((1 <= ((((int)blockIdx.y) * 14) + (((((((int)threadIdx.z) * 107) + (((int)threadIdx.x) * 8)) + 3) % 855) / 57))) && (1 <= ((((((int)threadIdx.z) * 107) + (((int)threadIdx.x) * 8)) + 3) % 57))) ? (float)((float*)placeholder)[((((((((((int)blockIdx.z) * 200704) + (rc_outer * 6272)) + (((((((int)threadIdx.z) * 107) + (((int)threadIdx.x) * 8)) + 3) / 855) * 3136)) + (((int)blockIdx.y) * 784)) + ((((((((int)threadIdx.z) * 107) + (((int)threadIdx.x) * 8)) + 3) % 855) / 57) * 56)) + ((((((int)threadIdx.z) * 107) + (((int)threadIdx.x) * 8)) + 3) % 57)) - 57))] : (float)0.000000e+00f);
      }
    }
    if (((((int)threadIdx.z) * 107) + (((int)threadIdx.x) * 8)) < 1706) {
      if (((int)threadIdx.x) < 13) {
        pad_temp_shared[((((((int)threadIdx.z) * 107) + (((int)threadIdx.x) * 8)) + 4))] = (((1 <= ((((int)blockIdx.y) * 14) + (((((((int)threadIdx.z) * 107) + (((int)threadIdx.x) * 8)) + 4) % 855) / 57))) && (1 <= ((((((int)threadIdx.z) * 107) + (((int)threadIdx.x) * 8)) + 4) % 57))) ? (float)((float*)placeholder)[((((((((((int)blockIdx.z) * 200704) + (rc_outer * 6272)) + (((((((int)threadIdx.z) * 107) + (((int)threadIdx.x) * 8)) + 4) / 855) * 3136)) + (((int)blockIdx.y) * 784)) + ((((((((int)threadIdx.z) * 107) + (((int)threadIdx.x) * 8)) + 4) % 855) / 57) * 56)) + ((((((int)threadIdx.z) * 107) + (((int)threadIdx.x) * 8)) + 4) % 57)) - 57))] : (float)0.000000e+00f);
      }
    }
    if (((((int)threadIdx.z) * 107) + (((int)threadIdx.x) * 8)) < 1705) {
      if (((int)threadIdx.x) < 13) {
        pad_temp_shared[((((((int)threadIdx.z) * 107) + (((int)threadIdx.x) * 8)) + 5))] = (((1 <= ((((int)blockIdx.y) * 14) + (((((((int)threadIdx.z) * 107) + (((int)threadIdx.x) * 8)) + 5) % 855) / 57))) && (1 <= ((((((int)threadIdx.z) * 107) + (((int)threadIdx.x) * 8)) + 5) % 57))) ? (float)((float*)placeholder)[((((((((((int)blockIdx.z) * 200704) + (rc_outer * 6272)) + (((((((int)threadIdx.z) * 107) + (((int)threadIdx.x) * 8)) + 5) / 855) * 3136)) + (((int)blockIdx.y) * 784)) + ((((((((int)threadIdx.z) * 107) + (((int)threadIdx.x) * 8)) + 5) % 855) / 57) * 56)) + ((((((int)threadIdx.z) * 107) + (((int)threadIdx.x) * 8)) + 5) % 57)) - 57))] : (float)0.000000e+00f);
      }
    }
    if (((((int)threadIdx.z) * 107) + (((int)threadIdx.x) * 8)) < 1704) {
      if (((int)threadIdx.x) < 13) {
        pad_temp_shared[((((((int)threadIdx.z) * 107) + (((int)threadIdx.x) * 8)) + 6))] = (((1 <= ((((int)blockIdx.y) * 14) + (((((((int)threadIdx.z) * 107) + (((int)threadIdx.x) * 8)) + 6) % 855) / 57))) && (1 <= ((((((int)threadIdx.z) * 107) + (((int)threadIdx.x) * 8)) + 6) % 57))) ? (float)((float*)placeholder)[((((((((((int)blockIdx.z) * 200704) + (rc_outer * 6272)) + (((((((int)threadIdx.z) * 107) + (((int)threadIdx.x) * 8)) + 6) / 855) * 3136)) + (((int)blockIdx.y) * 784)) + ((((((((int)threadIdx.z) * 107) + (((int)threadIdx.x) * 8)) + 6) % 855) / 57) * 56)) + ((((((int)threadIdx.z) * 107) + (((int)threadIdx.x) * 8)) + 6) % 57)) - 57))] : (float)0.000000e+00f);
      }
    }
    if (((((int)threadIdx.z) * 107) + (((int)threadIdx.x) * 8)) < 1703) {
      if (((int)threadIdx.x) < 13) {
        pad_temp_shared[((((((int)threadIdx.z) * 107) + (((int)threadIdx.x) * 8)) + 7))] = (((1 <= ((((int)blockIdx.y) * 14) + (((((((int)threadIdx.z) * 107) + (((int)threadIdx.x) * 8)) + 7) % 855) / 57))) && (1 <= ((((((int)threadIdx.z) * 107) + (((int)threadIdx.x) * 8)) + 7) % 57))) ? (float)((float*)placeholder)[((((((((((int)blockIdx.z) * 200704) + (rc_outer * 6272)) + (((((((int)threadIdx.z) * 107) + (((int)threadIdx.x) * 8)) + 7) / 855) * 3136)) + (((int)blockIdx.y) * 784)) + ((((((((int)threadIdx.z) * 107) + (((int)threadIdx.x) * 8)) + 7) % 855) / 57) * 56)) + ((((((int)threadIdx.z) * 107) + (((int)threadIdx.x) * 8)) + 7) % 57)) - 57))] : (float)0.000000e+00f);
      }
    }
    placeholder_shared[(((((int)threadIdx.z) * 144) + (((int)threadIdx.x) * 11)))] = ((float*)placeholder1)[(((((((int)threadIdx.z) * 4608) + (((((int)threadIdx.x) * 11) / 18) * 576)) + (rc_outer * 18)) + ((((int)threadIdx.x) * 11) % 18)))];
    if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 11) + 1) / 18)) < 128) {
      if (((((int)threadIdx.z) * 16) + (((((int)threadIdx.x) * 11) + 1) / 9)) < 256) {
        if (((((int)threadIdx.z) * 48) + (((((int)threadIdx.x) * 11) + 1) / 3)) < 768) {
          if (((((int)threadIdx.z) * 144) + (((int)threadIdx.x) * 11)) < 2303) {
            if (((int)threadIdx.x) < 13) {
              placeholder_shared[((((((int)threadIdx.z) * 144) + (((int)threadIdx.x) * 11)) + 1))] = ((float*)placeholder1)[(((((((int)threadIdx.z) * 4608) + ((((((int)threadIdx.x) * 11) + 1) / 18) * 576)) + (rc_outer * 18)) + (((((int)threadIdx.x) * 11) + 1) % 18)))];
            }
          }
        }
      }
    }
    if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 11) + 2) / 18)) < 128) {
      if (((((int)threadIdx.z) * 16) + (((((int)threadIdx.x) * 11) + 2) / 9)) < 256) {
        if (((((int)threadIdx.z) * 48) + (((((int)threadIdx.x) * 11) + 2) / 3)) < 768) {
          if (((((int)threadIdx.z) * 144) + (((int)threadIdx.x) * 11)) < 2302) {
            if (((int)threadIdx.x) < 13) {
              placeholder_shared[((((((int)threadIdx.z) * 144) + (((int)threadIdx.x) * 11)) + 2))] = ((float*)placeholder1)[(((((((int)threadIdx.z) * 4608) + ((((((int)threadIdx.x) * 11) + 2) / 18) * 576)) + (rc_outer * 18)) + (((((int)threadIdx.x) * 11) + 2) % 18)))];
            }
          }
        }
      }
    }
    if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 11) + 3) / 18)) < 128) {
      if (((((int)threadIdx.z) * 16) + (((((int)threadIdx.x) * 11) + 3) / 9)) < 256) {
        if (((((int)threadIdx.z) * 48) + ((((int)threadIdx.x) * 11) / 3)) < 767) {
          if (((((int)threadIdx.z) * 144) + (((int)threadIdx.x) * 11)) < 2301) {
            if (((int)threadIdx.x) < 13) {
              placeholder_shared[((((((int)threadIdx.z) * 144) + (((int)threadIdx.x) * 11)) + 3))] = ((float*)placeholder1)[(((((((int)threadIdx.z) * 4608) + ((((((int)threadIdx.x) * 11) + 3) / 18) * 576)) + (rc_outer * 18)) + (((((int)threadIdx.x) * 11) + 3) % 18)))];
            }
          }
        }
      }
    }
    if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 11) + 4) / 18)) < 128) {
      if (((((int)threadIdx.z) * 16) + (((((int)threadIdx.x) * 11) + 4) / 9)) < 256) {
        if (((((int)threadIdx.z) * 48) + (((((int)threadIdx.x) * 11) + 4) / 3)) < 768) {
          if (((((int)threadIdx.z) * 144) + (((int)threadIdx.x) * 11)) < 2300) {
            if (((int)threadIdx.x) < 13) {
              placeholder_shared[((((((int)threadIdx.z) * 144) + (((int)threadIdx.x) * 11)) + 4))] = ((float*)placeholder1)[(((((((int)threadIdx.z) * 4608) + ((((((int)threadIdx.x) * 11) + 4) / 18) * 576)) + (rc_outer * 18)) + (((((int)threadIdx.x) * 11) + 4) % 18)))];
            }
          }
        }
      }
    }
    if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 11) + 5) / 18)) < 128) {
      if (((((int)threadIdx.z) * 16) + (((((int)threadIdx.x) * 11) + 5) / 9)) < 256) {
        if (((((int)threadIdx.z) * 48) + (((((int)threadIdx.x) * 11) + 5) / 3)) < 768) {
          if (((((int)threadIdx.z) * 144) + (((int)threadIdx.x) * 11)) < 2299) {
            if (((int)threadIdx.x) < 13) {
              placeholder_shared[((((((int)threadIdx.z) * 144) + (((int)threadIdx.x) * 11)) + 5))] = ((float*)placeholder1)[(((((((int)threadIdx.z) * 4608) + ((((((int)threadIdx.x) * 11) + 5) / 18) * 576)) + (rc_outer * 18)) + (((((int)threadIdx.x) * 11) + 5) % 18)))];
            }
          }
        }
      }
    }
    if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 11) + 6) / 18)) < 128) {
      if (((((int)threadIdx.z) * 16) + (((((int)threadIdx.x) * 11) + 6) / 9)) < 256) {
        if (((((int)threadIdx.z) * 48) + ((((int)threadIdx.x) * 11) / 3)) < 766) {
          if (((((int)threadIdx.z) * 144) + (((int)threadIdx.x) * 11)) < 2298) {
            if (((int)threadIdx.x) < 13) {
              placeholder_shared[((((((int)threadIdx.z) * 144) + (((int)threadIdx.x) * 11)) + 6))] = ((float*)placeholder1)[(((((((int)threadIdx.z) * 4608) + ((((((int)threadIdx.x) * 11) + 6) / 18) * 576)) + (rc_outer * 18)) + (((((int)threadIdx.x) * 11) + 6) % 18)))];
            }
          }
        }
      }
    }
    if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 11) + 7) / 18)) < 128) {
      if (((((int)threadIdx.z) * 16) + (((((int)threadIdx.x) * 11) + 7) / 9)) < 256) {
        if (((((int)threadIdx.z) * 48) + (((((int)threadIdx.x) * 11) + 7) / 3)) < 768) {
          if (((((int)threadIdx.z) * 144) + (((int)threadIdx.x) * 11)) < 2297) {
            if (((int)threadIdx.x) < 13) {
              placeholder_shared[((((((int)threadIdx.z) * 144) + (((int)threadIdx.x) * 11)) + 7))] = ((float*)placeholder1)[(((((((int)threadIdx.z) * 4608) + ((((((int)threadIdx.x) * 11) + 7) / 18) * 576)) + (rc_outer * 18)) + (((((int)threadIdx.x) * 11) + 7) % 18)))];
            }
          }
        }
      }
    }
    if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 11) + 8) / 18)) < 128) {
      if (((((int)threadIdx.z) * 16) + (((((int)threadIdx.x) * 11) + 8) / 9)) < 256) {
        if (((((int)threadIdx.z) * 48) + (((((int)threadIdx.x) * 11) + 8) / 3)) < 768) {
          if (((((int)threadIdx.z) * 144) + (((int)threadIdx.x) * 11)) < 2296) {
            if (((int)threadIdx.x) < 13) {
              placeholder_shared[((((((int)threadIdx.z) * 144) + (((int)threadIdx.x) * 11)) + 8))] = ((float*)placeholder1)[(((((((int)threadIdx.z) * 4608) + ((((((int)threadIdx.x) * 11) + 8) / 18) * 576)) + (rc_outer * 18)) + (((((int)threadIdx.x) * 11) + 8) % 18)))];
            }
          }
        }
      }
    }
    if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 11) + 9) / 18)) < 128) {
      if (((((int)threadIdx.z) * 16) + ((((int)threadIdx.x) * 11) / 9)) < 255) {
        if (((((int)threadIdx.z) * 48) + ((((int)threadIdx.x) * 11) / 3)) < 765) {
          if (((((int)threadIdx.z) * 144) + (((int)threadIdx.x) * 11)) < 2295) {
            if (((int)threadIdx.x) < 13) {
              placeholder_shared[((((((int)threadIdx.z) * 144) + (((int)threadIdx.x) * 11)) + 9))] = ((float*)placeholder1)[(((((((int)threadIdx.z) * 4608) + ((((((int)threadIdx.x) * 11) + 9) / 18) * 576)) + (rc_outer * 18)) + (((((int)threadIdx.x) * 11) + 9) % 18)))];
            }
          }
        }
      }
    }
    if (((((int)threadIdx.z) * 8) + (((((int)threadIdx.x) * 11) + 10) / 18)) < 128) {
      if (((((int)threadIdx.z) * 16) + (((((int)threadIdx.x) * 11) + 10) / 9)) < 256) {
        if (((((int)threadIdx.z) * 48) + (((((int)threadIdx.x) * 11) + 10) / 3)) < 768) {
          if (((((int)threadIdx.z) * 144) + (((int)threadIdx.x) * 11)) < 2294) {
            if (((int)threadIdx.x) < 13) {
              placeholder_shared[((((((int)threadIdx.z) * 144) + (((int)threadIdx.x) * 11)) + 10))] = ((float*)placeholder1)[(((((((int)threadIdx.z) * 4608) + ((((((int)threadIdx.x) * 11) + 10) / 18) * 576)) + (rc_outer * 18)) + (((((int)threadIdx.x) * 11) + 10) % 18)))];
            }
          }
        }
      }
    }
    __syncthreads();
    for (int rc_inner = 0; rc_inner < 2; ++rc_inner) {
      compute[(0)] = (compute[(0)] + (pad_temp_shared[(((rc_inner * 855) + (((int)threadIdx.x) * 2)))] * placeholder_shared[(((((int)threadIdx.z) * 18) + (rc_inner * 9)))]));
      compute[(14)] = (compute[(14)] + (pad_temp_shared[(((rc_inner * 855) + (((int)threadIdx.x) * 2)))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 288))]));
      compute[(28)] = (compute[(28)] + (pad_temp_shared[(((rc_inner * 855) + (((int)threadIdx.x) * 2)))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 576))]));
      compute[(42)] = (compute[(42)] + (pad_temp_shared[(((rc_inner * 855) + (((int)threadIdx.x) * 2)))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 864))]));
      compute[(56)] = (compute[(56)] + (pad_temp_shared[(((rc_inner * 855) + (((int)threadIdx.x) * 2)))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1152))]));
      compute[(70)] = (compute[(70)] + (pad_temp_shared[(((rc_inner * 855) + (((int)threadIdx.x) * 2)))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1440))]));
      compute[(84)] = (compute[(84)] + (pad_temp_shared[(((rc_inner * 855) + (((int)threadIdx.x) * 2)))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1728))]));
      compute[(98)] = (compute[(98)] + (pad_temp_shared[(((rc_inner * 855) + (((int)threadIdx.x) * 2)))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2016))]));
      compute[(7)] = (compute[(7)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 28))] * placeholder_shared[(((((int)threadIdx.z) * 18) + (rc_inner * 9)))]));
      compute[(21)] = (compute[(21)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 28))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 288))]));
      compute[(35)] = (compute[(35)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 28))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 576))]));
      compute[(49)] = (compute[(49)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 28))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 864))]));
      compute[(63)] = (compute[(63)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 28))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1152))]));
      compute[(77)] = (compute[(77)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 28))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1440))]));
      compute[(91)] = (compute[(91)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 28))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1728))]));
      compute[(105)] = (compute[(105)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 28))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2016))]));
      compute[(1)] = (compute[(1)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 114))] * placeholder_shared[(((((int)threadIdx.z) * 18) + (rc_inner * 9)))]));
      compute[(15)] = (compute[(15)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 114))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 288))]));
      compute[(29)] = (compute[(29)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 114))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 576))]));
      compute[(43)] = (compute[(43)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 114))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 864))]));
      compute[(57)] = (compute[(57)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 114))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1152))]));
      compute[(71)] = (compute[(71)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 114))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1440))]));
      compute[(85)] = (compute[(85)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 114))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1728))]));
      compute[(99)] = (compute[(99)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 114))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2016))]));
      compute[(8)] = (compute[(8)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 142))] * placeholder_shared[(((((int)threadIdx.z) * 18) + (rc_inner * 9)))]));
      compute[(22)] = (compute[(22)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 142))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 288))]));
      compute[(36)] = (compute[(36)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 142))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 576))]));
      compute[(50)] = (compute[(50)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 142))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 864))]));
      compute[(64)] = (compute[(64)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 142))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1152))]));
      compute[(78)] = (compute[(78)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 142))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1440))]));
      compute[(92)] = (compute[(92)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 142))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1728))]));
      compute[(106)] = (compute[(106)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 142))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2016))]));
      compute[(2)] = (compute[(2)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 228))] * placeholder_shared[(((((int)threadIdx.z) * 18) + (rc_inner * 9)))]));
      compute[(16)] = (compute[(16)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 228))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 288))]));
      compute[(30)] = (compute[(30)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 228))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 576))]));
      compute[(44)] = (compute[(44)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 228))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 864))]));
      compute[(58)] = (compute[(58)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 228))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1152))]));
      compute[(72)] = (compute[(72)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 228))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1440))]));
      compute[(86)] = (compute[(86)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 228))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1728))]));
      compute[(100)] = (compute[(100)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 228))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2016))]));
      compute[(9)] = (compute[(9)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 256))] * placeholder_shared[(((((int)threadIdx.z) * 18) + (rc_inner * 9)))]));
      compute[(23)] = (compute[(23)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 256))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 288))]));
      compute[(37)] = (compute[(37)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 256))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 576))]));
      compute[(51)] = (compute[(51)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 256))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 864))]));
      compute[(65)] = (compute[(65)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 256))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1152))]));
      compute[(79)] = (compute[(79)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 256))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1440))]));
      compute[(93)] = (compute[(93)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 256))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1728))]));
      compute[(107)] = (compute[(107)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 256))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2016))]));
      compute[(3)] = (compute[(3)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 342))] * placeholder_shared[(((((int)threadIdx.z) * 18) + (rc_inner * 9)))]));
      compute[(17)] = (compute[(17)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 342))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 288))]));
      compute[(31)] = (compute[(31)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 342))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 576))]));
      compute[(45)] = (compute[(45)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 342))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 864))]));
      compute[(59)] = (compute[(59)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 342))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1152))]));
      compute[(73)] = (compute[(73)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 342))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1440))]));
      compute[(87)] = (compute[(87)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 342))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1728))]));
      compute[(101)] = (compute[(101)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 342))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2016))]));
      compute[(10)] = (compute[(10)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 370))] * placeholder_shared[(((((int)threadIdx.z) * 18) + (rc_inner * 9)))]));
      compute[(24)] = (compute[(24)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 370))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 288))]));
      compute[(38)] = (compute[(38)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 370))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 576))]));
      compute[(52)] = (compute[(52)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 370))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 864))]));
      compute[(66)] = (compute[(66)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 370))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1152))]));
      compute[(80)] = (compute[(80)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 370))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1440))]));
      compute[(94)] = (compute[(94)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 370))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1728))]));
      compute[(108)] = (compute[(108)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 370))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2016))]));
      compute[(4)] = (compute[(4)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 456))] * placeholder_shared[(((((int)threadIdx.z) * 18) + (rc_inner * 9)))]));
      compute[(18)] = (compute[(18)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 456))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 288))]));
      compute[(32)] = (compute[(32)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 456))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 576))]));
      compute[(46)] = (compute[(46)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 456))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 864))]));
      compute[(60)] = (compute[(60)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 456))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1152))]));
      compute[(74)] = (compute[(74)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 456))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1440))]));
      compute[(88)] = (compute[(88)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 456))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1728))]));
      compute[(102)] = (compute[(102)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 456))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2016))]));
      compute[(11)] = (compute[(11)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 484))] * placeholder_shared[(((((int)threadIdx.z) * 18) + (rc_inner * 9)))]));
      compute[(25)] = (compute[(25)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 484))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 288))]));
      compute[(39)] = (compute[(39)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 484))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 576))]));
      compute[(53)] = (compute[(53)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 484))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 864))]));
      compute[(67)] = (compute[(67)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 484))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1152))]));
      compute[(81)] = (compute[(81)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 484))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1440))]));
      compute[(95)] = (compute[(95)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 484))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1728))]));
      compute[(109)] = (compute[(109)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 484))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2016))]));
      compute[(5)] = (compute[(5)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 570))] * placeholder_shared[(((((int)threadIdx.z) * 18) + (rc_inner * 9)))]));
      compute[(19)] = (compute[(19)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 570))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 288))]));
      compute[(33)] = (compute[(33)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 570))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 576))]));
      compute[(47)] = (compute[(47)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 570))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 864))]));
      compute[(61)] = (compute[(61)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 570))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1152))]));
      compute[(75)] = (compute[(75)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 570))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1440))]));
      compute[(89)] = (compute[(89)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 570))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1728))]));
      compute[(103)] = (compute[(103)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 570))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2016))]));
      compute[(12)] = (compute[(12)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 598))] * placeholder_shared[(((((int)threadIdx.z) * 18) + (rc_inner * 9)))]));
      compute[(26)] = (compute[(26)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 598))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 288))]));
      compute[(40)] = (compute[(40)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 598))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 576))]));
      compute[(54)] = (compute[(54)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 598))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 864))]));
      compute[(68)] = (compute[(68)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 598))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1152))]));
      compute[(82)] = (compute[(82)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 598))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1440))]));
      compute[(96)] = (compute[(96)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 598))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1728))]));
      compute[(110)] = (compute[(110)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 598))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2016))]));
      compute[(6)] = (compute[(6)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 684))] * placeholder_shared[(((((int)threadIdx.z) * 18) + (rc_inner * 9)))]));
      compute[(20)] = (compute[(20)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 684))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 288))]));
      compute[(34)] = (compute[(34)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 684))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 576))]));
      compute[(48)] = (compute[(48)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 684))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 864))]));
      compute[(62)] = (compute[(62)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 684))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1152))]));
      compute[(76)] = (compute[(76)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 684))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1440))]));
      compute[(90)] = (compute[(90)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 684))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1728))]));
      compute[(104)] = (compute[(104)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 684))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2016))]));
      compute[(13)] = (compute[(13)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 712))] * placeholder_shared[(((((int)threadIdx.z) * 18) + (rc_inner * 9)))]));
      compute[(27)] = (compute[(27)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 712))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 288))]));
      compute[(41)] = (compute[(41)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 712))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 576))]));
      compute[(55)] = (compute[(55)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 712))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 864))]));
      compute[(69)] = (compute[(69)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 712))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1152))]));
      compute[(83)] = (compute[(83)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 712))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1440))]));
      compute[(97)] = (compute[(97)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 712))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1728))]));
      compute[(111)] = (compute[(111)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 712))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2016))]));
      compute[(0)] = (compute[(0)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1))]));
      compute[(14)] = (compute[(14)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 289))]));
      compute[(28)] = (compute[(28)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 577))]));
      compute[(42)] = (compute[(42)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 865))]));
      compute[(56)] = (compute[(56)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1153))]));
      compute[(70)] = (compute[(70)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1441))]));
      compute[(84)] = (compute[(84)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1729))]));
      compute[(98)] = (compute[(98)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2017))]));
      compute[(7)] = (compute[(7)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 29))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1))]));
      compute[(21)] = (compute[(21)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 29))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 289))]));
      compute[(35)] = (compute[(35)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 29))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 577))]));
      compute[(49)] = (compute[(49)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 29))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 865))]));
      compute[(63)] = (compute[(63)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 29))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1153))]));
      compute[(77)] = (compute[(77)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 29))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1441))]));
      compute[(91)] = (compute[(91)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 29))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1729))]));
      compute[(105)] = (compute[(105)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 29))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2017))]));
      compute[(1)] = (compute[(1)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 115))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1))]));
      compute[(15)] = (compute[(15)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 115))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 289))]));
      compute[(29)] = (compute[(29)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 115))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 577))]));
      compute[(43)] = (compute[(43)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 115))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 865))]));
      compute[(57)] = (compute[(57)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 115))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1153))]));
      compute[(71)] = (compute[(71)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 115))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1441))]));
      compute[(85)] = (compute[(85)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 115))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1729))]));
      compute[(99)] = (compute[(99)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 115))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2017))]));
      compute[(8)] = (compute[(8)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 143))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1))]));
      compute[(22)] = (compute[(22)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 143))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 289))]));
      compute[(36)] = (compute[(36)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 143))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 577))]));
      compute[(50)] = (compute[(50)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 143))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 865))]));
      compute[(64)] = (compute[(64)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 143))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1153))]));
      compute[(78)] = (compute[(78)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 143))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1441))]));
      compute[(92)] = (compute[(92)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 143))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1729))]));
      compute[(106)] = (compute[(106)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 143))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2017))]));
      compute[(2)] = (compute[(2)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 229))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1))]));
      compute[(16)] = (compute[(16)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 229))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 289))]));
      compute[(30)] = (compute[(30)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 229))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 577))]));
      compute[(44)] = (compute[(44)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 229))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 865))]));
      compute[(58)] = (compute[(58)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 229))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1153))]));
      compute[(72)] = (compute[(72)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 229))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1441))]));
      compute[(86)] = (compute[(86)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 229))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1729))]));
      compute[(100)] = (compute[(100)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 229))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2017))]));
      compute[(9)] = (compute[(9)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 257))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1))]));
      compute[(23)] = (compute[(23)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 257))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 289))]));
      compute[(37)] = (compute[(37)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 257))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 577))]));
      compute[(51)] = (compute[(51)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 257))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 865))]));
      compute[(65)] = (compute[(65)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 257))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1153))]));
      compute[(79)] = (compute[(79)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 257))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1441))]));
      compute[(93)] = (compute[(93)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 257))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1729))]));
      compute[(107)] = (compute[(107)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 257))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2017))]));
      compute[(3)] = (compute[(3)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 343))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1))]));
      compute[(17)] = (compute[(17)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 343))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 289))]));
      compute[(31)] = (compute[(31)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 343))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 577))]));
      compute[(45)] = (compute[(45)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 343))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 865))]));
      compute[(59)] = (compute[(59)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 343))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1153))]));
      compute[(73)] = (compute[(73)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 343))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1441))]));
      compute[(87)] = (compute[(87)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 343))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1729))]));
      compute[(101)] = (compute[(101)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 343))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2017))]));
      compute[(10)] = (compute[(10)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 371))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1))]));
      compute[(24)] = (compute[(24)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 371))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 289))]));
      compute[(38)] = (compute[(38)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 371))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 577))]));
      compute[(52)] = (compute[(52)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 371))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 865))]));
      compute[(66)] = (compute[(66)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 371))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1153))]));
      compute[(80)] = (compute[(80)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 371))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1441))]));
      compute[(94)] = (compute[(94)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 371))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1729))]));
      compute[(108)] = (compute[(108)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 371))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2017))]));
      compute[(4)] = (compute[(4)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 457))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1))]));
      compute[(18)] = (compute[(18)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 457))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 289))]));
      compute[(32)] = (compute[(32)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 457))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 577))]));
      compute[(46)] = (compute[(46)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 457))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 865))]));
      compute[(60)] = (compute[(60)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 457))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1153))]));
      compute[(74)] = (compute[(74)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 457))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1441))]));
      compute[(88)] = (compute[(88)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 457))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1729))]));
      compute[(102)] = (compute[(102)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 457))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2017))]));
      compute[(11)] = (compute[(11)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 485))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1))]));
      compute[(25)] = (compute[(25)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 485))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 289))]));
      compute[(39)] = (compute[(39)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 485))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 577))]));
      compute[(53)] = (compute[(53)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 485))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 865))]));
      compute[(67)] = (compute[(67)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 485))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1153))]));
      compute[(81)] = (compute[(81)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 485))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1441))]));
      compute[(95)] = (compute[(95)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 485))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1729))]));
      compute[(109)] = (compute[(109)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 485))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2017))]));
      compute[(5)] = (compute[(5)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 571))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1))]));
      compute[(19)] = (compute[(19)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 571))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 289))]));
      compute[(33)] = (compute[(33)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 571))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 577))]));
      compute[(47)] = (compute[(47)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 571))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 865))]));
      compute[(61)] = (compute[(61)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 571))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1153))]));
      compute[(75)] = (compute[(75)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 571))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1441))]));
      compute[(89)] = (compute[(89)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 571))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1729))]));
      compute[(103)] = (compute[(103)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 571))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2017))]));
      compute[(12)] = (compute[(12)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 599))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1))]));
      compute[(26)] = (compute[(26)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 599))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 289))]));
      compute[(40)] = (compute[(40)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 599))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 577))]));
      compute[(54)] = (compute[(54)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 599))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 865))]));
      compute[(68)] = (compute[(68)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 599))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1153))]));
      compute[(82)] = (compute[(82)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 599))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1441))]));
      compute[(96)] = (compute[(96)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 599))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1729))]));
      compute[(110)] = (compute[(110)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 599))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2017))]));
      compute[(6)] = (compute[(6)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 685))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1))]));
      compute[(20)] = (compute[(20)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 685))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 289))]));
      compute[(34)] = (compute[(34)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 685))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 577))]));
      compute[(48)] = (compute[(48)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 685))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 865))]));
      compute[(62)] = (compute[(62)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 685))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1153))]));
      compute[(76)] = (compute[(76)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 685))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1441))]));
      compute[(90)] = (compute[(90)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 685))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1729))]));
      compute[(104)] = (compute[(104)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 685))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2017))]));
      compute[(13)] = (compute[(13)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 713))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1))]));
      compute[(27)] = (compute[(27)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 713))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 289))]));
      compute[(41)] = (compute[(41)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 713))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 577))]));
      compute[(55)] = (compute[(55)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 713))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 865))]));
      compute[(69)] = (compute[(69)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 713))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1153))]));
      compute[(83)] = (compute[(83)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 713))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1441))]));
      compute[(97)] = (compute[(97)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 713))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1729))]));
      compute[(111)] = (compute[(111)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 713))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2017))]));
      compute[(0)] = (compute[(0)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2))]));
      compute[(14)] = (compute[(14)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 290))]));
      compute[(28)] = (compute[(28)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 578))]));
      compute[(42)] = (compute[(42)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 866))]));
      compute[(56)] = (compute[(56)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1154))]));
      compute[(70)] = (compute[(70)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1442))]));
      compute[(84)] = (compute[(84)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1730))]));
      compute[(98)] = (compute[(98)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2018))]));
      compute[(7)] = (compute[(7)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 30))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2))]));
      compute[(21)] = (compute[(21)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 30))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 290))]));
      compute[(35)] = (compute[(35)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 30))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 578))]));
      compute[(49)] = (compute[(49)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 30))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 866))]));
      compute[(63)] = (compute[(63)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 30))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1154))]));
      compute[(77)] = (compute[(77)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 30))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1442))]));
      compute[(91)] = (compute[(91)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 30))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1730))]));
      compute[(105)] = (compute[(105)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 30))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2018))]));
      compute[(1)] = (compute[(1)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 116))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2))]));
      compute[(15)] = (compute[(15)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 116))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 290))]));
      compute[(29)] = (compute[(29)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 116))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 578))]));
      compute[(43)] = (compute[(43)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 116))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 866))]));
      compute[(57)] = (compute[(57)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 116))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1154))]));
      compute[(71)] = (compute[(71)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 116))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1442))]));
      compute[(85)] = (compute[(85)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 116))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1730))]));
      compute[(99)] = (compute[(99)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 116))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2018))]));
      compute[(8)] = (compute[(8)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 144))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2))]));
      compute[(22)] = (compute[(22)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 144))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 290))]));
      compute[(36)] = (compute[(36)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 144))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 578))]));
      compute[(50)] = (compute[(50)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 144))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 866))]));
      compute[(64)] = (compute[(64)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 144))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1154))]));
      compute[(78)] = (compute[(78)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 144))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1442))]));
      compute[(92)] = (compute[(92)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 144))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1730))]));
      compute[(106)] = (compute[(106)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 144))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2018))]));
      compute[(2)] = (compute[(2)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 230))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2))]));
      compute[(16)] = (compute[(16)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 230))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 290))]));
      compute[(30)] = (compute[(30)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 230))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 578))]));
      compute[(44)] = (compute[(44)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 230))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 866))]));
      compute[(58)] = (compute[(58)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 230))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1154))]));
      compute[(72)] = (compute[(72)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 230))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1442))]));
      compute[(86)] = (compute[(86)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 230))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1730))]));
      compute[(100)] = (compute[(100)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 230))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2018))]));
      compute[(9)] = (compute[(9)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 258))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2))]));
      compute[(23)] = (compute[(23)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 258))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 290))]));
      compute[(37)] = (compute[(37)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 258))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 578))]));
      compute[(51)] = (compute[(51)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 258))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 866))]));
      compute[(65)] = (compute[(65)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 258))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1154))]));
      compute[(79)] = (compute[(79)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 258))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1442))]));
      compute[(93)] = (compute[(93)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 258))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1730))]));
      compute[(107)] = (compute[(107)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 258))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2018))]));
      compute[(3)] = (compute[(3)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 344))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2))]));
      compute[(17)] = (compute[(17)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 344))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 290))]));
      compute[(31)] = (compute[(31)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 344))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 578))]));
      compute[(45)] = (compute[(45)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 344))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 866))]));
      compute[(59)] = (compute[(59)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 344))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1154))]));
      compute[(73)] = (compute[(73)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 344))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1442))]));
      compute[(87)] = (compute[(87)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 344))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1730))]));
      compute[(101)] = (compute[(101)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 344))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2018))]));
      compute[(10)] = (compute[(10)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 372))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2))]));
      compute[(24)] = (compute[(24)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 372))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 290))]));
      compute[(38)] = (compute[(38)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 372))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 578))]));
      compute[(52)] = (compute[(52)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 372))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 866))]));
      compute[(66)] = (compute[(66)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 372))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1154))]));
      compute[(80)] = (compute[(80)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 372))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1442))]));
      compute[(94)] = (compute[(94)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 372))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1730))]));
      compute[(108)] = (compute[(108)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 372))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2018))]));
      compute[(4)] = (compute[(4)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 458))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2))]));
      compute[(18)] = (compute[(18)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 458))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 290))]));
      compute[(32)] = (compute[(32)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 458))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 578))]));
      compute[(46)] = (compute[(46)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 458))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 866))]));
      compute[(60)] = (compute[(60)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 458))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1154))]));
      compute[(74)] = (compute[(74)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 458))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1442))]));
      compute[(88)] = (compute[(88)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 458))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1730))]));
      compute[(102)] = (compute[(102)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 458))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2018))]));
      compute[(11)] = (compute[(11)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 486))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2))]));
      compute[(25)] = (compute[(25)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 486))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 290))]));
      compute[(39)] = (compute[(39)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 486))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 578))]));
      compute[(53)] = (compute[(53)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 486))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 866))]));
      compute[(67)] = (compute[(67)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 486))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1154))]));
      compute[(81)] = (compute[(81)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 486))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1442))]));
      compute[(95)] = (compute[(95)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 486))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1730))]));
      compute[(109)] = (compute[(109)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 486))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2018))]));
      compute[(5)] = (compute[(5)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 572))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2))]));
      compute[(19)] = (compute[(19)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 572))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 290))]));
      compute[(33)] = (compute[(33)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 572))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 578))]));
      compute[(47)] = (compute[(47)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 572))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 866))]));
      compute[(61)] = (compute[(61)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 572))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1154))]));
      compute[(75)] = (compute[(75)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 572))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1442))]));
      compute[(89)] = (compute[(89)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 572))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1730))]));
      compute[(103)] = (compute[(103)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 572))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2018))]));
      compute[(12)] = (compute[(12)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 600))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2))]));
      compute[(26)] = (compute[(26)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 600))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 290))]));
      compute[(40)] = (compute[(40)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 600))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 578))]));
      compute[(54)] = (compute[(54)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 600))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 866))]));
      compute[(68)] = (compute[(68)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 600))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1154))]));
      compute[(82)] = (compute[(82)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 600))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1442))]));
      compute[(96)] = (compute[(96)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 600))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1730))]));
      compute[(110)] = (compute[(110)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 600))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2018))]));
      compute[(6)] = (compute[(6)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 686))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2))]));
      compute[(20)] = (compute[(20)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 686))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 290))]));
      compute[(34)] = (compute[(34)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 686))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 578))]));
      compute[(48)] = (compute[(48)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 686))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 866))]));
      compute[(62)] = (compute[(62)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 686))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1154))]));
      compute[(76)] = (compute[(76)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 686))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1442))]));
      compute[(90)] = (compute[(90)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 686))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1730))]));
      compute[(104)] = (compute[(104)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 686))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2018))]));
      compute[(13)] = (compute[(13)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 714))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2))]));
      compute[(27)] = (compute[(27)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 714))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 290))]));
      compute[(41)] = (compute[(41)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 714))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 578))]));
      compute[(55)] = (compute[(55)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 714))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 866))]));
      compute[(69)] = (compute[(69)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 714))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1154))]));
      compute[(83)] = (compute[(83)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 714))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1442))]));
      compute[(97)] = (compute[(97)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 714))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1730))]));
      compute[(111)] = (compute[(111)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 714))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2018))]));
      compute[(0)] = (compute[(0)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 57))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 3))]));
      compute[(14)] = (compute[(14)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 57))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 291))]));
      compute[(28)] = (compute[(28)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 57))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 579))]));
      compute[(42)] = (compute[(42)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 57))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 867))]));
      compute[(56)] = (compute[(56)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 57))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1155))]));
      compute[(70)] = (compute[(70)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 57))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1443))]));
      compute[(84)] = (compute[(84)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 57))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1731))]));
      compute[(98)] = (compute[(98)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 57))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2019))]));
      compute[(7)] = (compute[(7)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 85))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 3))]));
      compute[(21)] = (compute[(21)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 85))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 291))]));
      compute[(35)] = (compute[(35)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 85))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 579))]));
      compute[(49)] = (compute[(49)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 85))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 867))]));
      compute[(63)] = (compute[(63)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 85))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1155))]));
      compute[(77)] = (compute[(77)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 85))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1443))]));
      compute[(91)] = (compute[(91)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 85))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1731))]));
      compute[(105)] = (compute[(105)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 85))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2019))]));
      compute[(1)] = (compute[(1)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 171))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 3))]));
      compute[(15)] = (compute[(15)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 171))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 291))]));
      compute[(29)] = (compute[(29)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 171))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 579))]));
      compute[(43)] = (compute[(43)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 171))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 867))]));
      compute[(57)] = (compute[(57)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 171))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1155))]));
      compute[(71)] = (compute[(71)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 171))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1443))]));
      compute[(85)] = (compute[(85)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 171))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1731))]));
      compute[(99)] = (compute[(99)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 171))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2019))]));
      compute[(8)] = (compute[(8)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 199))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 3))]));
      compute[(22)] = (compute[(22)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 199))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 291))]));
      compute[(36)] = (compute[(36)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 199))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 579))]));
      compute[(50)] = (compute[(50)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 199))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 867))]));
      compute[(64)] = (compute[(64)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 199))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1155))]));
      compute[(78)] = (compute[(78)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 199))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1443))]));
      compute[(92)] = (compute[(92)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 199))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1731))]));
      compute[(106)] = (compute[(106)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 199))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2019))]));
      compute[(2)] = (compute[(2)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 285))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 3))]));
      compute[(16)] = (compute[(16)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 285))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 291))]));
      compute[(30)] = (compute[(30)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 285))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 579))]));
      compute[(44)] = (compute[(44)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 285))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 867))]));
      compute[(58)] = (compute[(58)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 285))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1155))]));
      compute[(72)] = (compute[(72)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 285))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1443))]));
      compute[(86)] = (compute[(86)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 285))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1731))]));
      compute[(100)] = (compute[(100)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 285))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2019))]));
      compute[(9)] = (compute[(9)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 313))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 3))]));
      compute[(23)] = (compute[(23)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 313))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 291))]));
      compute[(37)] = (compute[(37)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 313))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 579))]));
      compute[(51)] = (compute[(51)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 313))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 867))]));
      compute[(65)] = (compute[(65)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 313))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1155))]));
      compute[(79)] = (compute[(79)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 313))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1443))]));
      compute[(93)] = (compute[(93)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 313))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1731))]));
      compute[(107)] = (compute[(107)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 313))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2019))]));
      compute[(3)] = (compute[(3)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 399))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 3))]));
      compute[(17)] = (compute[(17)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 399))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 291))]));
      compute[(31)] = (compute[(31)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 399))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 579))]));
      compute[(45)] = (compute[(45)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 399))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 867))]));
      compute[(59)] = (compute[(59)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 399))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1155))]));
      compute[(73)] = (compute[(73)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 399))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1443))]));
      compute[(87)] = (compute[(87)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 399))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1731))]));
      compute[(101)] = (compute[(101)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 399))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2019))]));
      compute[(10)] = (compute[(10)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 427))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 3))]));
      compute[(24)] = (compute[(24)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 427))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 291))]));
      compute[(38)] = (compute[(38)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 427))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 579))]));
      compute[(52)] = (compute[(52)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 427))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 867))]));
      compute[(66)] = (compute[(66)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 427))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1155))]));
      compute[(80)] = (compute[(80)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 427))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1443))]));
      compute[(94)] = (compute[(94)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 427))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1731))]));
      compute[(108)] = (compute[(108)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 427))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2019))]));
      compute[(4)] = (compute[(4)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 513))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 3))]));
      compute[(18)] = (compute[(18)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 513))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 291))]));
      compute[(32)] = (compute[(32)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 513))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 579))]));
      compute[(46)] = (compute[(46)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 513))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 867))]));
      compute[(60)] = (compute[(60)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 513))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1155))]));
      compute[(74)] = (compute[(74)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 513))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1443))]));
      compute[(88)] = (compute[(88)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 513))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1731))]));
      compute[(102)] = (compute[(102)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 513))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2019))]));
      compute[(11)] = (compute[(11)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 541))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 3))]));
      compute[(25)] = (compute[(25)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 541))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 291))]));
      compute[(39)] = (compute[(39)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 541))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 579))]));
      compute[(53)] = (compute[(53)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 541))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 867))]));
      compute[(67)] = (compute[(67)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 541))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1155))]));
      compute[(81)] = (compute[(81)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 541))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1443))]));
      compute[(95)] = (compute[(95)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 541))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1731))]));
      compute[(109)] = (compute[(109)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 541))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2019))]));
      compute[(5)] = (compute[(5)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 627))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 3))]));
      compute[(19)] = (compute[(19)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 627))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 291))]));
      compute[(33)] = (compute[(33)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 627))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 579))]));
      compute[(47)] = (compute[(47)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 627))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 867))]));
      compute[(61)] = (compute[(61)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 627))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1155))]));
      compute[(75)] = (compute[(75)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 627))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1443))]));
      compute[(89)] = (compute[(89)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 627))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1731))]));
      compute[(103)] = (compute[(103)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 627))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2019))]));
      compute[(12)] = (compute[(12)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 655))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 3))]));
      compute[(26)] = (compute[(26)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 655))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 291))]));
      compute[(40)] = (compute[(40)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 655))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 579))]));
      compute[(54)] = (compute[(54)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 655))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 867))]));
      compute[(68)] = (compute[(68)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 655))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1155))]));
      compute[(82)] = (compute[(82)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 655))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1443))]));
      compute[(96)] = (compute[(96)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 655))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1731))]));
      compute[(110)] = (compute[(110)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 655))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2019))]));
      compute[(6)] = (compute[(6)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 741))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 3))]));
      compute[(20)] = (compute[(20)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 741))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 291))]));
      compute[(34)] = (compute[(34)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 741))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 579))]));
      compute[(48)] = (compute[(48)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 741))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 867))]));
      compute[(62)] = (compute[(62)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 741))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1155))]));
      compute[(76)] = (compute[(76)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 741))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1443))]));
      compute[(90)] = (compute[(90)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 741))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1731))]));
      compute[(104)] = (compute[(104)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 741))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2019))]));
      compute[(13)] = (compute[(13)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 769))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 3))]));
      compute[(27)] = (compute[(27)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 769))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 291))]));
      compute[(41)] = (compute[(41)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 769))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 579))]));
      compute[(55)] = (compute[(55)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 769))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 867))]));
      compute[(69)] = (compute[(69)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 769))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1155))]));
      compute[(83)] = (compute[(83)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 769))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1443))]));
      compute[(97)] = (compute[(97)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 769))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1731))]));
      compute[(111)] = (compute[(111)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 769))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2019))]));
      compute[(0)] = (compute[(0)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 58))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 4))]));
      compute[(14)] = (compute[(14)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 58))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 292))]));
      compute[(28)] = (compute[(28)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 58))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 580))]));
      compute[(42)] = (compute[(42)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 58))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 868))]));
      compute[(56)] = (compute[(56)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 58))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1156))]));
      compute[(70)] = (compute[(70)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 58))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1444))]));
      compute[(84)] = (compute[(84)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 58))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1732))]));
      compute[(98)] = (compute[(98)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 58))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2020))]));
      compute[(7)] = (compute[(7)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 86))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 4))]));
      compute[(21)] = (compute[(21)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 86))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 292))]));
      compute[(35)] = (compute[(35)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 86))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 580))]));
      compute[(49)] = (compute[(49)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 86))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 868))]));
      compute[(63)] = (compute[(63)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 86))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1156))]));
      compute[(77)] = (compute[(77)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 86))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1444))]));
      compute[(91)] = (compute[(91)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 86))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1732))]));
      compute[(105)] = (compute[(105)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 86))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2020))]));
      compute[(1)] = (compute[(1)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 172))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 4))]));
      compute[(15)] = (compute[(15)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 172))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 292))]));
      compute[(29)] = (compute[(29)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 172))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 580))]));
      compute[(43)] = (compute[(43)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 172))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 868))]));
      compute[(57)] = (compute[(57)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 172))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1156))]));
      compute[(71)] = (compute[(71)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 172))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1444))]));
      compute[(85)] = (compute[(85)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 172))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1732))]));
      compute[(99)] = (compute[(99)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 172))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2020))]));
      compute[(8)] = (compute[(8)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 200))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 4))]));
      compute[(22)] = (compute[(22)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 200))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 292))]));
      compute[(36)] = (compute[(36)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 200))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 580))]));
      compute[(50)] = (compute[(50)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 200))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 868))]));
      compute[(64)] = (compute[(64)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 200))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1156))]));
      compute[(78)] = (compute[(78)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 200))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1444))]));
      compute[(92)] = (compute[(92)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 200))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1732))]));
      compute[(106)] = (compute[(106)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 200))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2020))]));
      compute[(2)] = (compute[(2)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 286))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 4))]));
      compute[(16)] = (compute[(16)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 286))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 292))]));
      compute[(30)] = (compute[(30)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 286))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 580))]));
      compute[(44)] = (compute[(44)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 286))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 868))]));
      compute[(58)] = (compute[(58)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 286))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1156))]));
      compute[(72)] = (compute[(72)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 286))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1444))]));
      compute[(86)] = (compute[(86)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 286))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1732))]));
      compute[(100)] = (compute[(100)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 286))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2020))]));
      compute[(9)] = (compute[(9)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 314))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 4))]));
      compute[(23)] = (compute[(23)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 314))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 292))]));
      compute[(37)] = (compute[(37)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 314))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 580))]));
      compute[(51)] = (compute[(51)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 314))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 868))]));
      compute[(65)] = (compute[(65)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 314))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1156))]));
      compute[(79)] = (compute[(79)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 314))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1444))]));
      compute[(93)] = (compute[(93)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 314))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1732))]));
      compute[(107)] = (compute[(107)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 314))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2020))]));
      compute[(3)] = (compute[(3)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 400))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 4))]));
      compute[(17)] = (compute[(17)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 400))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 292))]));
      compute[(31)] = (compute[(31)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 400))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 580))]));
      compute[(45)] = (compute[(45)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 400))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 868))]));
      compute[(59)] = (compute[(59)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 400))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1156))]));
      compute[(73)] = (compute[(73)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 400))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1444))]));
      compute[(87)] = (compute[(87)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 400))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1732))]));
      compute[(101)] = (compute[(101)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 400))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2020))]));
      compute[(10)] = (compute[(10)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 428))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 4))]));
      compute[(24)] = (compute[(24)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 428))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 292))]));
      compute[(38)] = (compute[(38)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 428))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 580))]));
      compute[(52)] = (compute[(52)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 428))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 868))]));
      compute[(66)] = (compute[(66)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 428))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1156))]));
      compute[(80)] = (compute[(80)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 428))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1444))]));
      compute[(94)] = (compute[(94)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 428))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1732))]));
      compute[(108)] = (compute[(108)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 428))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2020))]));
      compute[(4)] = (compute[(4)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 514))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 4))]));
      compute[(18)] = (compute[(18)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 514))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 292))]));
      compute[(32)] = (compute[(32)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 514))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 580))]));
      compute[(46)] = (compute[(46)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 514))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 868))]));
      compute[(60)] = (compute[(60)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 514))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1156))]));
      compute[(74)] = (compute[(74)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 514))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1444))]));
      compute[(88)] = (compute[(88)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 514))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1732))]));
      compute[(102)] = (compute[(102)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 514))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2020))]));
      compute[(11)] = (compute[(11)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 542))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 4))]));
      compute[(25)] = (compute[(25)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 542))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 292))]));
      compute[(39)] = (compute[(39)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 542))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 580))]));
      compute[(53)] = (compute[(53)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 542))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 868))]));
      compute[(67)] = (compute[(67)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 542))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1156))]));
      compute[(81)] = (compute[(81)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 542))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1444))]));
      compute[(95)] = (compute[(95)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 542))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1732))]));
      compute[(109)] = (compute[(109)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 542))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2020))]));
      compute[(5)] = (compute[(5)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 628))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 4))]));
      compute[(19)] = (compute[(19)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 628))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 292))]));
      compute[(33)] = (compute[(33)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 628))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 580))]));
      compute[(47)] = (compute[(47)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 628))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 868))]));
      compute[(61)] = (compute[(61)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 628))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1156))]));
      compute[(75)] = (compute[(75)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 628))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1444))]));
      compute[(89)] = (compute[(89)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 628))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1732))]));
      compute[(103)] = (compute[(103)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 628))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2020))]));
      compute[(12)] = (compute[(12)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 656))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 4))]));
      compute[(26)] = (compute[(26)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 656))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 292))]));
      compute[(40)] = (compute[(40)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 656))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 580))]));
      compute[(54)] = (compute[(54)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 656))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 868))]));
      compute[(68)] = (compute[(68)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 656))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1156))]));
      compute[(82)] = (compute[(82)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 656))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1444))]));
      compute[(96)] = (compute[(96)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 656))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1732))]));
      compute[(110)] = (compute[(110)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 656))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2020))]));
      compute[(6)] = (compute[(6)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 742))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 4))]));
      compute[(20)] = (compute[(20)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 742))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 292))]));
      compute[(34)] = (compute[(34)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 742))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 580))]));
      compute[(48)] = (compute[(48)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 742))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 868))]));
      compute[(62)] = (compute[(62)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 742))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1156))]));
      compute[(76)] = (compute[(76)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 742))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1444))]));
      compute[(90)] = (compute[(90)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 742))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1732))]));
      compute[(104)] = (compute[(104)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 742))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2020))]));
      compute[(13)] = (compute[(13)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 770))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 4))]));
      compute[(27)] = (compute[(27)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 770))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 292))]));
      compute[(41)] = (compute[(41)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 770))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 580))]));
      compute[(55)] = (compute[(55)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 770))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 868))]));
      compute[(69)] = (compute[(69)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 770))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1156))]));
      compute[(83)] = (compute[(83)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 770))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1444))]));
      compute[(97)] = (compute[(97)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 770))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1732))]));
      compute[(111)] = (compute[(111)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 770))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2020))]));
      compute[(0)] = (compute[(0)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 59))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 5))]));
      compute[(14)] = (compute[(14)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 59))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 293))]));
      compute[(28)] = (compute[(28)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 59))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 581))]));
      compute[(42)] = (compute[(42)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 59))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 869))]));
      compute[(56)] = (compute[(56)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 59))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1157))]));
      compute[(70)] = (compute[(70)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 59))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1445))]));
      compute[(84)] = (compute[(84)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 59))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1733))]));
      compute[(98)] = (compute[(98)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 59))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2021))]));
      compute[(7)] = (compute[(7)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 87))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 5))]));
      compute[(21)] = (compute[(21)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 87))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 293))]));
      compute[(35)] = (compute[(35)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 87))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 581))]));
      compute[(49)] = (compute[(49)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 87))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 869))]));
      compute[(63)] = (compute[(63)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 87))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1157))]));
      compute[(77)] = (compute[(77)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 87))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1445))]));
      compute[(91)] = (compute[(91)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 87))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1733))]));
      compute[(105)] = (compute[(105)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 87))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2021))]));
      compute[(1)] = (compute[(1)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 173))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 5))]));
      compute[(15)] = (compute[(15)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 173))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 293))]));
      compute[(29)] = (compute[(29)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 173))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 581))]));
      compute[(43)] = (compute[(43)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 173))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 869))]));
      compute[(57)] = (compute[(57)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 173))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1157))]));
      compute[(71)] = (compute[(71)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 173))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1445))]));
      compute[(85)] = (compute[(85)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 173))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1733))]));
      compute[(99)] = (compute[(99)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 173))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2021))]));
      compute[(8)] = (compute[(8)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 201))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 5))]));
      compute[(22)] = (compute[(22)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 201))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 293))]));
      compute[(36)] = (compute[(36)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 201))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 581))]));
      compute[(50)] = (compute[(50)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 201))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 869))]));
      compute[(64)] = (compute[(64)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 201))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1157))]));
      compute[(78)] = (compute[(78)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 201))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1445))]));
      compute[(92)] = (compute[(92)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 201))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1733))]));
      compute[(106)] = (compute[(106)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 201))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2021))]));
      compute[(2)] = (compute[(2)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 287))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 5))]));
      compute[(16)] = (compute[(16)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 287))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 293))]));
      compute[(30)] = (compute[(30)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 287))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 581))]));
      compute[(44)] = (compute[(44)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 287))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 869))]));
      compute[(58)] = (compute[(58)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 287))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1157))]));
      compute[(72)] = (compute[(72)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 287))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1445))]));
      compute[(86)] = (compute[(86)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 287))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1733))]));
      compute[(100)] = (compute[(100)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 287))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2021))]));
      compute[(9)] = (compute[(9)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 315))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 5))]));
      compute[(23)] = (compute[(23)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 315))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 293))]));
      compute[(37)] = (compute[(37)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 315))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 581))]));
      compute[(51)] = (compute[(51)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 315))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 869))]));
      compute[(65)] = (compute[(65)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 315))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1157))]));
      compute[(79)] = (compute[(79)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 315))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1445))]));
      compute[(93)] = (compute[(93)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 315))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1733))]));
      compute[(107)] = (compute[(107)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 315))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2021))]));
      compute[(3)] = (compute[(3)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 401))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 5))]));
      compute[(17)] = (compute[(17)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 401))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 293))]));
      compute[(31)] = (compute[(31)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 401))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 581))]));
      compute[(45)] = (compute[(45)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 401))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 869))]));
      compute[(59)] = (compute[(59)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 401))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1157))]));
      compute[(73)] = (compute[(73)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 401))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1445))]));
      compute[(87)] = (compute[(87)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 401))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1733))]));
      compute[(101)] = (compute[(101)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 401))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2021))]));
      compute[(10)] = (compute[(10)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 429))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 5))]));
      compute[(24)] = (compute[(24)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 429))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 293))]));
      compute[(38)] = (compute[(38)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 429))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 581))]));
      compute[(52)] = (compute[(52)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 429))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 869))]));
      compute[(66)] = (compute[(66)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 429))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1157))]));
      compute[(80)] = (compute[(80)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 429))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1445))]));
      compute[(94)] = (compute[(94)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 429))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1733))]));
      compute[(108)] = (compute[(108)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 429))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2021))]));
      compute[(4)] = (compute[(4)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 515))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 5))]));
      compute[(18)] = (compute[(18)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 515))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 293))]));
      compute[(32)] = (compute[(32)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 515))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 581))]));
      compute[(46)] = (compute[(46)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 515))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 869))]));
      compute[(60)] = (compute[(60)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 515))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1157))]));
      compute[(74)] = (compute[(74)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 515))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1445))]));
      compute[(88)] = (compute[(88)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 515))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1733))]));
      compute[(102)] = (compute[(102)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 515))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2021))]));
      compute[(11)] = (compute[(11)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 543))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 5))]));
      compute[(25)] = (compute[(25)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 543))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 293))]));
      compute[(39)] = (compute[(39)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 543))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 581))]));
      compute[(53)] = (compute[(53)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 543))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 869))]));
      compute[(67)] = (compute[(67)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 543))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1157))]));
      compute[(81)] = (compute[(81)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 543))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1445))]));
      compute[(95)] = (compute[(95)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 543))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1733))]));
      compute[(109)] = (compute[(109)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 543))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2021))]));
      compute[(5)] = (compute[(5)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 629))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 5))]));
      compute[(19)] = (compute[(19)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 629))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 293))]));
      compute[(33)] = (compute[(33)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 629))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 581))]));
      compute[(47)] = (compute[(47)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 629))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 869))]));
      compute[(61)] = (compute[(61)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 629))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1157))]));
      compute[(75)] = (compute[(75)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 629))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1445))]));
      compute[(89)] = (compute[(89)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 629))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1733))]));
      compute[(103)] = (compute[(103)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 629))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2021))]));
      compute[(12)] = (compute[(12)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 657))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 5))]));
      compute[(26)] = (compute[(26)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 657))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 293))]));
      compute[(40)] = (compute[(40)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 657))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 581))]));
      compute[(54)] = (compute[(54)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 657))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 869))]));
      compute[(68)] = (compute[(68)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 657))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1157))]));
      compute[(82)] = (compute[(82)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 657))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1445))]));
      compute[(96)] = (compute[(96)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 657))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1733))]));
      compute[(110)] = (compute[(110)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 657))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2021))]));
      compute[(6)] = (compute[(6)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 743))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 5))]));
      compute[(20)] = (compute[(20)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 743))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 293))]));
      compute[(34)] = (compute[(34)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 743))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 581))]));
      compute[(48)] = (compute[(48)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 743))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 869))]));
      compute[(62)] = (compute[(62)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 743))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1157))]));
      compute[(76)] = (compute[(76)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 743))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1445))]));
      compute[(90)] = (compute[(90)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 743))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1733))]));
      compute[(104)] = (compute[(104)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 743))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2021))]));
      compute[(13)] = (compute[(13)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 771))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 5))]));
      compute[(27)] = (compute[(27)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 771))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 293))]));
      compute[(41)] = (compute[(41)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 771))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 581))]));
      compute[(55)] = (compute[(55)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 771))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 869))]));
      compute[(69)] = (compute[(69)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 771))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1157))]));
      compute[(83)] = (compute[(83)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 771))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1445))]));
      compute[(97)] = (compute[(97)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 771))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1733))]));
      compute[(111)] = (compute[(111)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 771))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2021))]));
      compute[(0)] = (compute[(0)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 114))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 6))]));
      compute[(14)] = (compute[(14)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 114))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 294))]));
      compute[(28)] = (compute[(28)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 114))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 582))]));
      compute[(42)] = (compute[(42)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 114))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 870))]));
      compute[(56)] = (compute[(56)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 114))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1158))]));
      compute[(70)] = (compute[(70)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 114))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1446))]));
      compute[(84)] = (compute[(84)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 114))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1734))]));
      compute[(98)] = (compute[(98)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 114))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2022))]));
      compute[(7)] = (compute[(7)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 142))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 6))]));
      compute[(21)] = (compute[(21)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 142))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 294))]));
      compute[(35)] = (compute[(35)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 142))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 582))]));
      compute[(49)] = (compute[(49)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 142))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 870))]));
      compute[(63)] = (compute[(63)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 142))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1158))]));
      compute[(77)] = (compute[(77)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 142))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1446))]));
      compute[(91)] = (compute[(91)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 142))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1734))]));
      compute[(105)] = (compute[(105)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 142))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2022))]));
      compute[(1)] = (compute[(1)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 228))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 6))]));
      compute[(15)] = (compute[(15)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 228))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 294))]));
      compute[(29)] = (compute[(29)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 228))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 582))]));
      compute[(43)] = (compute[(43)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 228))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 870))]));
      compute[(57)] = (compute[(57)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 228))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1158))]));
      compute[(71)] = (compute[(71)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 228))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1446))]));
      compute[(85)] = (compute[(85)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 228))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1734))]));
      compute[(99)] = (compute[(99)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 228))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2022))]));
      compute[(8)] = (compute[(8)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 256))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 6))]));
      compute[(22)] = (compute[(22)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 256))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 294))]));
      compute[(36)] = (compute[(36)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 256))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 582))]));
      compute[(50)] = (compute[(50)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 256))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 870))]));
      compute[(64)] = (compute[(64)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 256))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1158))]));
      compute[(78)] = (compute[(78)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 256))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1446))]));
      compute[(92)] = (compute[(92)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 256))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1734))]));
      compute[(106)] = (compute[(106)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 256))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2022))]));
      compute[(2)] = (compute[(2)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 342))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 6))]));
      compute[(16)] = (compute[(16)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 342))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 294))]));
      compute[(30)] = (compute[(30)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 342))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 582))]));
      compute[(44)] = (compute[(44)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 342))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 870))]));
      compute[(58)] = (compute[(58)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 342))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1158))]));
      compute[(72)] = (compute[(72)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 342))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1446))]));
      compute[(86)] = (compute[(86)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 342))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1734))]));
      compute[(100)] = (compute[(100)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 342))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2022))]));
      compute[(9)] = (compute[(9)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 370))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 6))]));
      compute[(23)] = (compute[(23)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 370))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 294))]));
      compute[(37)] = (compute[(37)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 370))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 582))]));
      compute[(51)] = (compute[(51)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 370))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 870))]));
      compute[(65)] = (compute[(65)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 370))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1158))]));
      compute[(79)] = (compute[(79)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 370))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1446))]));
      compute[(93)] = (compute[(93)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 370))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1734))]));
      compute[(107)] = (compute[(107)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 370))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2022))]));
      compute[(3)] = (compute[(3)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 456))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 6))]));
      compute[(17)] = (compute[(17)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 456))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 294))]));
      compute[(31)] = (compute[(31)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 456))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 582))]));
      compute[(45)] = (compute[(45)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 456))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 870))]));
      compute[(59)] = (compute[(59)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 456))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1158))]));
      compute[(73)] = (compute[(73)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 456))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1446))]));
      compute[(87)] = (compute[(87)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 456))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1734))]));
      compute[(101)] = (compute[(101)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 456))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2022))]));
      compute[(10)] = (compute[(10)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 484))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 6))]));
      compute[(24)] = (compute[(24)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 484))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 294))]));
      compute[(38)] = (compute[(38)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 484))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 582))]));
      compute[(52)] = (compute[(52)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 484))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 870))]));
      compute[(66)] = (compute[(66)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 484))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1158))]));
      compute[(80)] = (compute[(80)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 484))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1446))]));
      compute[(94)] = (compute[(94)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 484))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1734))]));
      compute[(108)] = (compute[(108)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 484))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2022))]));
      compute[(4)] = (compute[(4)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 570))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 6))]));
      compute[(18)] = (compute[(18)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 570))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 294))]));
      compute[(32)] = (compute[(32)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 570))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 582))]));
      compute[(46)] = (compute[(46)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 570))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 870))]));
      compute[(60)] = (compute[(60)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 570))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1158))]));
      compute[(74)] = (compute[(74)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 570))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1446))]));
      compute[(88)] = (compute[(88)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 570))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1734))]));
      compute[(102)] = (compute[(102)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 570))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2022))]));
      compute[(11)] = (compute[(11)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 598))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 6))]));
      compute[(25)] = (compute[(25)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 598))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 294))]));
      compute[(39)] = (compute[(39)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 598))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 582))]));
      compute[(53)] = (compute[(53)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 598))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 870))]));
      compute[(67)] = (compute[(67)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 598))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1158))]));
      compute[(81)] = (compute[(81)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 598))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1446))]));
      compute[(95)] = (compute[(95)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 598))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1734))]));
      compute[(109)] = (compute[(109)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 598))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2022))]));
      compute[(5)] = (compute[(5)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 684))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 6))]));
      compute[(19)] = (compute[(19)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 684))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 294))]));
      compute[(33)] = (compute[(33)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 684))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 582))]));
      compute[(47)] = (compute[(47)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 684))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 870))]));
      compute[(61)] = (compute[(61)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 684))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1158))]));
      compute[(75)] = (compute[(75)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 684))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1446))]));
      compute[(89)] = (compute[(89)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 684))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1734))]));
      compute[(103)] = (compute[(103)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 684))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2022))]));
      compute[(12)] = (compute[(12)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 712))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 6))]));
      compute[(26)] = (compute[(26)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 712))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 294))]));
      compute[(40)] = (compute[(40)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 712))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 582))]));
      compute[(54)] = (compute[(54)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 712))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 870))]));
      compute[(68)] = (compute[(68)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 712))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1158))]));
      compute[(82)] = (compute[(82)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 712))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1446))]));
      compute[(96)] = (compute[(96)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 712))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1734))]));
      compute[(110)] = (compute[(110)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 712))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2022))]));
      compute[(6)] = (compute[(6)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 798))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 6))]));
      compute[(20)] = (compute[(20)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 798))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 294))]));
      compute[(34)] = (compute[(34)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 798))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 582))]));
      compute[(48)] = (compute[(48)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 798))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 870))]));
      compute[(62)] = (compute[(62)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 798))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1158))]));
      compute[(76)] = (compute[(76)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 798))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1446))]));
      compute[(90)] = (compute[(90)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 798))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1734))]));
      compute[(104)] = (compute[(104)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 798))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2022))]));
      compute[(13)] = (compute[(13)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 826))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 6))]));
      compute[(27)] = (compute[(27)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 826))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 294))]));
      compute[(41)] = (compute[(41)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 826))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 582))]));
      compute[(55)] = (compute[(55)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 826))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 870))]));
      compute[(69)] = (compute[(69)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 826))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1158))]));
      compute[(83)] = (compute[(83)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 826))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1446))]));
      compute[(97)] = (compute[(97)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 826))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1734))]));
      compute[(111)] = (compute[(111)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 826))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2022))]));
      compute[(0)] = (compute[(0)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 115))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 7))]));
      compute[(14)] = (compute[(14)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 115))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 295))]));
      compute[(28)] = (compute[(28)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 115))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 583))]));
      compute[(42)] = (compute[(42)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 115))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 871))]));
      compute[(56)] = (compute[(56)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 115))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1159))]));
      compute[(70)] = (compute[(70)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 115))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1447))]));
      compute[(84)] = (compute[(84)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 115))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1735))]));
      compute[(98)] = (compute[(98)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 115))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2023))]));
      compute[(7)] = (compute[(7)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 143))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 7))]));
      compute[(21)] = (compute[(21)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 143))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 295))]));
      compute[(35)] = (compute[(35)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 143))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 583))]));
      compute[(49)] = (compute[(49)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 143))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 871))]));
      compute[(63)] = (compute[(63)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 143))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1159))]));
      compute[(77)] = (compute[(77)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 143))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1447))]));
      compute[(91)] = (compute[(91)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 143))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1735))]));
      compute[(105)] = (compute[(105)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 143))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2023))]));
      compute[(1)] = (compute[(1)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 229))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 7))]));
      compute[(15)] = (compute[(15)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 229))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 295))]));
      compute[(29)] = (compute[(29)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 229))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 583))]));
      compute[(43)] = (compute[(43)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 229))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 871))]));
      compute[(57)] = (compute[(57)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 229))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1159))]));
      compute[(71)] = (compute[(71)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 229))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1447))]));
      compute[(85)] = (compute[(85)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 229))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1735))]));
      compute[(99)] = (compute[(99)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 229))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2023))]));
      compute[(8)] = (compute[(8)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 257))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 7))]));
      compute[(22)] = (compute[(22)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 257))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 295))]));
      compute[(36)] = (compute[(36)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 257))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 583))]));
      compute[(50)] = (compute[(50)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 257))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 871))]));
      compute[(64)] = (compute[(64)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 257))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1159))]));
      compute[(78)] = (compute[(78)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 257))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1447))]));
      compute[(92)] = (compute[(92)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 257))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1735))]));
      compute[(106)] = (compute[(106)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 257))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2023))]));
      compute[(2)] = (compute[(2)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 343))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 7))]));
      compute[(16)] = (compute[(16)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 343))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 295))]));
      compute[(30)] = (compute[(30)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 343))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 583))]));
      compute[(44)] = (compute[(44)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 343))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 871))]));
      compute[(58)] = (compute[(58)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 343))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1159))]));
      compute[(72)] = (compute[(72)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 343))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1447))]));
      compute[(86)] = (compute[(86)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 343))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1735))]));
      compute[(100)] = (compute[(100)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 343))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2023))]));
      compute[(9)] = (compute[(9)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 371))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 7))]));
      compute[(23)] = (compute[(23)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 371))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 295))]));
      compute[(37)] = (compute[(37)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 371))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 583))]));
      compute[(51)] = (compute[(51)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 371))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 871))]));
      compute[(65)] = (compute[(65)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 371))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1159))]));
      compute[(79)] = (compute[(79)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 371))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1447))]));
      compute[(93)] = (compute[(93)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 371))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1735))]));
      compute[(107)] = (compute[(107)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 371))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2023))]));
      compute[(3)] = (compute[(3)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 457))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 7))]));
      compute[(17)] = (compute[(17)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 457))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 295))]));
      compute[(31)] = (compute[(31)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 457))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 583))]));
      compute[(45)] = (compute[(45)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 457))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 871))]));
      compute[(59)] = (compute[(59)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 457))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1159))]));
      compute[(73)] = (compute[(73)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 457))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1447))]));
      compute[(87)] = (compute[(87)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 457))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1735))]));
      compute[(101)] = (compute[(101)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 457))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2023))]));
      compute[(10)] = (compute[(10)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 485))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 7))]));
      compute[(24)] = (compute[(24)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 485))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 295))]));
      compute[(38)] = (compute[(38)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 485))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 583))]));
      compute[(52)] = (compute[(52)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 485))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 871))]));
      compute[(66)] = (compute[(66)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 485))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1159))]));
      compute[(80)] = (compute[(80)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 485))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1447))]));
      compute[(94)] = (compute[(94)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 485))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1735))]));
      compute[(108)] = (compute[(108)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 485))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2023))]));
      compute[(4)] = (compute[(4)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 571))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 7))]));
      compute[(18)] = (compute[(18)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 571))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 295))]));
      compute[(32)] = (compute[(32)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 571))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 583))]));
      compute[(46)] = (compute[(46)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 571))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 871))]));
      compute[(60)] = (compute[(60)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 571))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1159))]));
      compute[(74)] = (compute[(74)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 571))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1447))]));
      compute[(88)] = (compute[(88)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 571))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1735))]));
      compute[(102)] = (compute[(102)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 571))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2023))]));
      compute[(11)] = (compute[(11)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 599))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 7))]));
      compute[(25)] = (compute[(25)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 599))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 295))]));
      compute[(39)] = (compute[(39)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 599))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 583))]));
      compute[(53)] = (compute[(53)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 599))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 871))]));
      compute[(67)] = (compute[(67)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 599))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1159))]));
      compute[(81)] = (compute[(81)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 599))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1447))]));
      compute[(95)] = (compute[(95)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 599))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1735))]));
      compute[(109)] = (compute[(109)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 599))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2023))]));
      compute[(5)] = (compute[(5)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 685))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 7))]));
      compute[(19)] = (compute[(19)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 685))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 295))]));
      compute[(33)] = (compute[(33)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 685))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 583))]));
      compute[(47)] = (compute[(47)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 685))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 871))]));
      compute[(61)] = (compute[(61)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 685))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1159))]));
      compute[(75)] = (compute[(75)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 685))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1447))]));
      compute[(89)] = (compute[(89)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 685))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1735))]));
      compute[(103)] = (compute[(103)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 685))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2023))]));
      compute[(12)] = (compute[(12)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 713))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 7))]));
      compute[(26)] = (compute[(26)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 713))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 295))]));
      compute[(40)] = (compute[(40)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 713))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 583))]));
      compute[(54)] = (compute[(54)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 713))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 871))]));
      compute[(68)] = (compute[(68)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 713))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1159))]));
      compute[(82)] = (compute[(82)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 713))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1447))]));
      compute[(96)] = (compute[(96)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 713))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1735))]));
      compute[(110)] = (compute[(110)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 713))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2023))]));
      compute[(6)] = (compute[(6)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 799))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 7))]));
      compute[(20)] = (compute[(20)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 799))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 295))]));
      compute[(34)] = (compute[(34)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 799))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 583))]));
      compute[(48)] = (compute[(48)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 799))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 871))]));
      compute[(62)] = (compute[(62)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 799))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1159))]));
      compute[(76)] = (compute[(76)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 799))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1447))]));
      compute[(90)] = (compute[(90)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 799))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1735))]));
      compute[(104)] = (compute[(104)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 799))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2023))]));
      compute[(13)] = (compute[(13)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 827))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 7))]));
      compute[(27)] = (compute[(27)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 827))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 295))]));
      compute[(41)] = (compute[(41)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 827))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 583))]));
      compute[(55)] = (compute[(55)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 827))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 871))]));
      compute[(69)] = (compute[(69)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 827))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1159))]));
      compute[(83)] = (compute[(83)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 827))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1447))]));
      compute[(97)] = (compute[(97)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 827))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1735))]));
      compute[(111)] = (compute[(111)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 827))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2023))]));
      compute[(0)] = (compute[(0)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 116))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 8))]));
      compute[(14)] = (compute[(14)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 116))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 296))]));
      compute[(28)] = (compute[(28)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 116))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 584))]));
      compute[(42)] = (compute[(42)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 116))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 872))]));
      compute[(56)] = (compute[(56)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 116))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1160))]));
      compute[(70)] = (compute[(70)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 116))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1448))]));
      compute[(84)] = (compute[(84)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 116))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1736))]));
      compute[(98)] = (compute[(98)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 116))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2024))]));
      compute[(7)] = (compute[(7)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 144))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 8))]));
      compute[(21)] = (compute[(21)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 144))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 296))]));
      compute[(35)] = (compute[(35)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 144))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 584))]));
      compute[(49)] = (compute[(49)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 144))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 872))]));
      compute[(63)] = (compute[(63)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 144))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1160))]));
      compute[(77)] = (compute[(77)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 144))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1448))]));
      compute[(91)] = (compute[(91)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 144))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1736))]));
      compute[(105)] = (compute[(105)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 144))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2024))]));
      compute[(1)] = (compute[(1)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 230))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 8))]));
      compute[(15)] = (compute[(15)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 230))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 296))]));
      compute[(29)] = (compute[(29)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 230))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 584))]));
      compute[(43)] = (compute[(43)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 230))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 872))]));
      compute[(57)] = (compute[(57)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 230))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1160))]));
      compute[(71)] = (compute[(71)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 230))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1448))]));
      compute[(85)] = (compute[(85)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 230))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1736))]));
      compute[(99)] = (compute[(99)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 230))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2024))]));
      compute[(8)] = (compute[(8)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 258))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 8))]));
      compute[(22)] = (compute[(22)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 258))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 296))]));
      compute[(36)] = (compute[(36)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 258))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 584))]));
      compute[(50)] = (compute[(50)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 258))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 872))]));
      compute[(64)] = (compute[(64)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 258))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1160))]));
      compute[(78)] = (compute[(78)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 258))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1448))]));
      compute[(92)] = (compute[(92)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 258))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1736))]));
      compute[(106)] = (compute[(106)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 258))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2024))]));
      compute[(2)] = (compute[(2)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 344))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 8))]));
      compute[(16)] = (compute[(16)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 344))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 296))]));
      compute[(30)] = (compute[(30)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 344))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 584))]));
      compute[(44)] = (compute[(44)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 344))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 872))]));
      compute[(58)] = (compute[(58)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 344))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1160))]));
      compute[(72)] = (compute[(72)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 344))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1448))]));
      compute[(86)] = (compute[(86)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 344))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1736))]));
      compute[(100)] = (compute[(100)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 344))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2024))]));
      compute[(9)] = (compute[(9)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 372))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 8))]));
      compute[(23)] = (compute[(23)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 372))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 296))]));
      compute[(37)] = (compute[(37)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 372))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 584))]));
      compute[(51)] = (compute[(51)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 372))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 872))]));
      compute[(65)] = (compute[(65)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 372))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1160))]));
      compute[(79)] = (compute[(79)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 372))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1448))]));
      compute[(93)] = (compute[(93)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 372))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1736))]));
      compute[(107)] = (compute[(107)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 372))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2024))]));
      compute[(3)] = (compute[(3)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 458))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 8))]));
      compute[(17)] = (compute[(17)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 458))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 296))]));
      compute[(31)] = (compute[(31)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 458))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 584))]));
      compute[(45)] = (compute[(45)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 458))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 872))]));
      compute[(59)] = (compute[(59)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 458))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1160))]));
      compute[(73)] = (compute[(73)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 458))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1448))]));
      compute[(87)] = (compute[(87)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 458))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1736))]));
      compute[(101)] = (compute[(101)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 458))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2024))]));
      compute[(10)] = (compute[(10)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 486))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 8))]));
      compute[(24)] = (compute[(24)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 486))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 296))]));
      compute[(38)] = (compute[(38)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 486))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 584))]));
      compute[(52)] = (compute[(52)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 486))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 872))]));
      compute[(66)] = (compute[(66)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 486))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1160))]));
      compute[(80)] = (compute[(80)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 486))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1448))]));
      compute[(94)] = (compute[(94)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 486))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1736))]));
      compute[(108)] = (compute[(108)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 486))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2024))]));
      compute[(4)] = (compute[(4)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 572))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 8))]));
      compute[(18)] = (compute[(18)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 572))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 296))]));
      compute[(32)] = (compute[(32)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 572))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 584))]));
      compute[(46)] = (compute[(46)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 572))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 872))]));
      compute[(60)] = (compute[(60)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 572))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1160))]));
      compute[(74)] = (compute[(74)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 572))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1448))]));
      compute[(88)] = (compute[(88)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 572))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1736))]));
      compute[(102)] = (compute[(102)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 572))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2024))]));
      compute[(11)] = (compute[(11)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 600))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 8))]));
      compute[(25)] = (compute[(25)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 600))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 296))]));
      compute[(39)] = (compute[(39)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 600))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 584))]));
      compute[(53)] = (compute[(53)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 600))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 872))]));
      compute[(67)] = (compute[(67)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 600))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1160))]));
      compute[(81)] = (compute[(81)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 600))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1448))]));
      compute[(95)] = (compute[(95)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 600))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1736))]));
      compute[(109)] = (compute[(109)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 600))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2024))]));
      compute[(5)] = (compute[(5)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 686))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 8))]));
      compute[(19)] = (compute[(19)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 686))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 296))]));
      compute[(33)] = (compute[(33)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 686))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 584))]));
      compute[(47)] = (compute[(47)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 686))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 872))]));
      compute[(61)] = (compute[(61)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 686))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1160))]));
      compute[(75)] = (compute[(75)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 686))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1448))]));
      compute[(89)] = (compute[(89)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 686))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1736))]));
      compute[(103)] = (compute[(103)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 686))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2024))]));
      compute[(12)] = (compute[(12)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 714))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 8))]));
      compute[(26)] = (compute[(26)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 714))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 296))]));
      compute[(40)] = (compute[(40)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 714))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 584))]));
      compute[(54)] = (compute[(54)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 714))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 872))]));
      compute[(68)] = (compute[(68)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 714))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1160))]));
      compute[(82)] = (compute[(82)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 714))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1448))]));
      compute[(96)] = (compute[(96)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 714))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1736))]));
      compute[(110)] = (compute[(110)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 714))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2024))]));
      compute[(6)] = (compute[(6)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 800))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 8))]));
      compute[(20)] = (compute[(20)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 800))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 296))]));
      compute[(34)] = (compute[(34)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 800))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 584))]));
      compute[(48)] = (compute[(48)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 800))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 872))]));
      compute[(62)] = (compute[(62)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 800))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1160))]));
      compute[(76)] = (compute[(76)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 800))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1448))]));
      compute[(90)] = (compute[(90)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 800))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1736))]));
      compute[(104)] = (compute[(104)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 800))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2024))]));
      compute[(13)] = (compute[(13)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 828))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 8))]));
      compute[(27)] = (compute[(27)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 828))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 296))]));
      compute[(41)] = (compute[(41)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 828))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 584))]));
      compute[(55)] = (compute[(55)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 828))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 872))]));
      compute[(69)] = (compute[(69)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 828))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1160))]));
      compute[(83)] = (compute[(83)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 828))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1448))]));
      compute[(97)] = (compute[(97)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 828))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 1736))]));
      compute[(111)] = (compute[(111)] + (pad_temp_shared[((((rc_inner * 855) + (((int)threadIdx.x) * 2)) + 828))] * placeholder_shared[((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + 2024))]));
    }
  }
  ((float*)T_relu)[(((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)))] = max((float)((compute[(0)] + ((float*)placeholder2)[(((int)threadIdx.z))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 12544))] = max((float)((compute[(14)] + ((float*)placeholder2)[((((int)threadIdx.z) + 16))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 25088))] = max((float)((compute[(28)] + ((float*)placeholder2)[((((int)threadIdx.z) + 32))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 37632))] = max((float)((compute[(42)] + ((float*)placeholder2)[((((int)threadIdx.z) + 48))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 50176))] = max((float)((compute[(56)] + ((float*)placeholder2)[((((int)threadIdx.z) + 64))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 62720))] = max((float)((compute[(70)] + ((float*)placeholder2)[((((int)threadIdx.z) + 80))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 75264))] = max((float)((compute[(84)] + ((float*)placeholder2)[((((int)threadIdx.z) + 96))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 87808))] = max((float)((compute[(98)] + ((float*)placeholder2)[((((int)threadIdx.z) + 112))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 14))] = max((float)((compute[(7)] + ((float*)placeholder2)[(((int)threadIdx.z))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 12558))] = max((float)((compute[(21)] + ((float*)placeholder2)[((((int)threadIdx.z) + 16))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 25102))] = max((float)((compute[(35)] + ((float*)placeholder2)[((((int)threadIdx.z) + 32))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 37646))] = max((float)((compute[(49)] + ((float*)placeholder2)[((((int)threadIdx.z) + 48))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 50190))] = max((float)((compute[(63)] + ((float*)placeholder2)[((((int)threadIdx.z) + 64))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 62734))] = max((float)((compute[(77)] + ((float*)placeholder2)[((((int)threadIdx.z) + 80))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 75278))] = max((float)((compute[(91)] + ((float*)placeholder2)[((((int)threadIdx.z) + 96))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 87822))] = max((float)((compute[(105)] + ((float*)placeholder2)[((((int)threadIdx.z) + 112))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 28))] = max((float)((compute[(1)] + ((float*)placeholder2)[(((int)threadIdx.z))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 12572))] = max((float)((compute[(15)] + ((float*)placeholder2)[((((int)threadIdx.z) + 16))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 25116))] = max((float)((compute[(29)] + ((float*)placeholder2)[((((int)threadIdx.z) + 32))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 37660))] = max((float)((compute[(43)] + ((float*)placeholder2)[((((int)threadIdx.z) + 48))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 50204))] = max((float)((compute[(57)] + ((float*)placeholder2)[((((int)threadIdx.z) + 64))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 62748))] = max((float)((compute[(71)] + ((float*)placeholder2)[((((int)threadIdx.z) + 80))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 75292))] = max((float)((compute[(85)] + ((float*)placeholder2)[((((int)threadIdx.z) + 96))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 87836))] = max((float)((compute[(99)] + ((float*)placeholder2)[((((int)threadIdx.z) + 112))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 42))] = max((float)((compute[(8)] + ((float*)placeholder2)[(((int)threadIdx.z))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 12586))] = max((float)((compute[(22)] + ((float*)placeholder2)[((((int)threadIdx.z) + 16))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 25130))] = max((float)((compute[(36)] + ((float*)placeholder2)[((((int)threadIdx.z) + 32))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 37674))] = max((float)((compute[(50)] + ((float*)placeholder2)[((((int)threadIdx.z) + 48))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 50218))] = max((float)((compute[(64)] + ((float*)placeholder2)[((((int)threadIdx.z) + 64))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 62762))] = max((float)((compute[(78)] + ((float*)placeholder2)[((((int)threadIdx.z) + 80))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 75306))] = max((float)((compute[(92)] + ((float*)placeholder2)[((((int)threadIdx.z) + 96))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 87850))] = max((float)((compute[(106)] + ((float*)placeholder2)[((((int)threadIdx.z) + 112))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 56))] = max((float)((compute[(2)] + ((float*)placeholder2)[(((int)threadIdx.z))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 12600))] = max((float)((compute[(16)] + ((float*)placeholder2)[((((int)threadIdx.z) + 16))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 25144))] = max((float)((compute[(30)] + ((float*)placeholder2)[((((int)threadIdx.z) + 32))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 37688))] = max((float)((compute[(44)] + ((float*)placeholder2)[((((int)threadIdx.z) + 48))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 50232))] = max((float)((compute[(58)] + ((float*)placeholder2)[((((int)threadIdx.z) + 64))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 62776))] = max((float)((compute[(72)] + ((float*)placeholder2)[((((int)threadIdx.z) + 80))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 75320))] = max((float)((compute[(86)] + ((float*)placeholder2)[((((int)threadIdx.z) + 96))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 87864))] = max((float)((compute[(100)] + ((float*)placeholder2)[((((int)threadIdx.z) + 112))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 70))] = max((float)((compute[(9)] + ((float*)placeholder2)[(((int)threadIdx.z))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 12614))] = max((float)((compute[(23)] + ((float*)placeholder2)[((((int)threadIdx.z) + 16))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 25158))] = max((float)((compute[(37)] + ((float*)placeholder2)[((((int)threadIdx.z) + 32))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 37702))] = max((float)((compute[(51)] + ((float*)placeholder2)[((((int)threadIdx.z) + 48))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 50246))] = max((float)((compute[(65)] + ((float*)placeholder2)[((((int)threadIdx.z) + 64))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 62790))] = max((float)((compute[(79)] + ((float*)placeholder2)[((((int)threadIdx.z) + 80))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 75334))] = max((float)((compute[(93)] + ((float*)placeholder2)[((((int)threadIdx.z) + 96))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 87878))] = max((float)((compute[(107)] + ((float*)placeholder2)[((((int)threadIdx.z) + 112))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 84))] = max((float)((compute[(3)] + ((float*)placeholder2)[(((int)threadIdx.z))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 12628))] = max((float)((compute[(17)] + ((float*)placeholder2)[((((int)threadIdx.z) + 16))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 25172))] = max((float)((compute[(31)] + ((float*)placeholder2)[((((int)threadIdx.z) + 32))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 37716))] = max((float)((compute[(45)] + ((float*)placeholder2)[((((int)threadIdx.z) + 48))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 50260))] = max((float)((compute[(59)] + ((float*)placeholder2)[((((int)threadIdx.z) + 64))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 62804))] = max((float)((compute[(73)] + ((float*)placeholder2)[((((int)threadIdx.z) + 80))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 75348))] = max((float)((compute[(87)] + ((float*)placeholder2)[((((int)threadIdx.z) + 96))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 87892))] = max((float)((compute[(101)] + ((float*)placeholder2)[((((int)threadIdx.z) + 112))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 98))] = max((float)((compute[(10)] + ((float*)placeholder2)[(((int)threadIdx.z))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 12642))] = max((float)((compute[(24)] + ((float*)placeholder2)[((((int)threadIdx.z) + 16))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 25186))] = max((float)((compute[(38)] + ((float*)placeholder2)[((((int)threadIdx.z) + 32))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 37730))] = max((float)((compute[(52)] + ((float*)placeholder2)[((((int)threadIdx.z) + 48))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 50274))] = max((float)((compute[(66)] + ((float*)placeholder2)[((((int)threadIdx.z) + 64))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 62818))] = max((float)((compute[(80)] + ((float*)placeholder2)[((((int)threadIdx.z) + 80))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 75362))] = max((float)((compute[(94)] + ((float*)placeholder2)[((((int)threadIdx.z) + 96))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 87906))] = max((float)((compute[(108)] + ((float*)placeholder2)[((((int)threadIdx.z) + 112))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 112))] = max((float)((compute[(4)] + ((float*)placeholder2)[(((int)threadIdx.z))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 12656))] = max((float)((compute[(18)] + ((float*)placeholder2)[((((int)threadIdx.z) + 16))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 25200))] = max((float)((compute[(32)] + ((float*)placeholder2)[((((int)threadIdx.z) + 32))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 37744))] = max((float)((compute[(46)] + ((float*)placeholder2)[((((int)threadIdx.z) + 48))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 50288))] = max((float)((compute[(60)] + ((float*)placeholder2)[((((int)threadIdx.z) + 64))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 62832))] = max((float)((compute[(74)] + ((float*)placeholder2)[((((int)threadIdx.z) + 80))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 75376))] = max((float)((compute[(88)] + ((float*)placeholder2)[((((int)threadIdx.z) + 96))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 87920))] = max((float)((compute[(102)] + ((float*)placeholder2)[((((int)threadIdx.z) + 112))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 126))] = max((float)((compute[(11)] + ((float*)placeholder2)[(((int)threadIdx.z))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 12670))] = max((float)((compute[(25)] + ((float*)placeholder2)[((((int)threadIdx.z) + 16))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 25214))] = max((float)((compute[(39)] + ((float*)placeholder2)[((((int)threadIdx.z) + 32))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 37758))] = max((float)((compute[(53)] + ((float*)placeholder2)[((((int)threadIdx.z) + 48))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 50302))] = max((float)((compute[(67)] + ((float*)placeholder2)[((((int)threadIdx.z) + 64))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 62846))] = max((float)((compute[(81)] + ((float*)placeholder2)[((((int)threadIdx.z) + 80))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 75390))] = max((float)((compute[(95)] + ((float*)placeholder2)[((((int)threadIdx.z) + 96))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 87934))] = max((float)((compute[(109)] + ((float*)placeholder2)[((((int)threadIdx.z) + 112))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 140))] = max((float)((compute[(5)] + ((float*)placeholder2)[(((int)threadIdx.z))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 12684))] = max((float)((compute[(19)] + ((float*)placeholder2)[((((int)threadIdx.z) + 16))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 25228))] = max((float)((compute[(33)] + ((float*)placeholder2)[((((int)threadIdx.z) + 32))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 37772))] = max((float)((compute[(47)] + ((float*)placeholder2)[((((int)threadIdx.z) + 48))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 50316))] = max((float)((compute[(61)] + ((float*)placeholder2)[((((int)threadIdx.z) + 64))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 62860))] = max((float)((compute[(75)] + ((float*)placeholder2)[((((int)threadIdx.z) + 80))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 75404))] = max((float)((compute[(89)] + ((float*)placeholder2)[((((int)threadIdx.z) + 96))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 87948))] = max((float)((compute[(103)] + ((float*)placeholder2)[((((int)threadIdx.z) + 112))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 154))] = max((float)((compute[(12)] + ((float*)placeholder2)[(((int)threadIdx.z))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 12698))] = max((float)((compute[(26)] + ((float*)placeholder2)[((((int)threadIdx.z) + 16))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 25242))] = max((float)((compute[(40)] + ((float*)placeholder2)[((((int)threadIdx.z) + 32))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 37786))] = max((float)((compute[(54)] + ((float*)placeholder2)[((((int)threadIdx.z) + 48))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 50330))] = max((float)((compute[(68)] + ((float*)placeholder2)[((((int)threadIdx.z) + 64))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 62874))] = max((float)((compute[(82)] + ((float*)placeholder2)[((((int)threadIdx.z) + 80))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 75418))] = max((float)((compute[(96)] + ((float*)placeholder2)[((((int)threadIdx.z) + 96))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 87962))] = max((float)((compute[(110)] + ((float*)placeholder2)[((((int)threadIdx.z) + 112))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 168))] = max((float)((compute[(6)] + ((float*)placeholder2)[(((int)threadIdx.z))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 12712))] = max((float)((compute[(20)] + ((float*)placeholder2)[((((int)threadIdx.z) + 16))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 25256))] = max((float)((compute[(34)] + ((float*)placeholder2)[((((int)threadIdx.z) + 32))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 37800))] = max((float)((compute[(48)] + ((float*)placeholder2)[((((int)threadIdx.z) + 48))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 50344))] = max((float)((compute[(62)] + ((float*)placeholder2)[((((int)threadIdx.z) + 64))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 62888))] = max((float)((compute[(76)] + ((float*)placeholder2)[((((int)threadIdx.z) + 80))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 75432))] = max((float)((compute[(90)] + ((float*)placeholder2)[((((int)threadIdx.z) + 96))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 87976))] = max((float)((compute[(104)] + ((float*)placeholder2)[((((int)threadIdx.z) + 112))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 182))] = max((float)((compute[(13)] + ((float*)placeholder2)[(((int)threadIdx.z))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 12726))] = max((float)((compute[(27)] + ((float*)placeholder2)[((((int)threadIdx.z) + 16))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 25270))] = max((float)((compute[(41)] + ((float*)placeholder2)[((((int)threadIdx.z) + 32))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 37814))] = max((float)((compute[(55)] + ((float*)placeholder2)[((((int)threadIdx.z) + 48))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 50358))] = max((float)((compute[(69)] + ((float*)placeholder2)[((((int)threadIdx.z) + 64))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 62902))] = max((float)((compute[(83)] + ((float*)placeholder2)[((((int)threadIdx.z) + 80))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 75446))] = max((float)((compute[(97)] + ((float*)placeholder2)[((((int)threadIdx.z) + 96))])), (float)(0.000000e+00f));
  ((float*)T_relu)[((((((((int)blockIdx.z) * 100352) + (((int)threadIdx.z) * 784)) + (((int)blockIdx.y) * 196)) + ((int)threadIdx.x)) + 87990))] = max((float)((compute[(111)] + ((float*)placeholder2)[((((int)threadIdx.z) + 112))])), (float)(0.000000e+00f));
}

extern "C" __global__ void fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_kernel0(void* __restrict__ placeholder, float* __restrict__ data_pack) {
  float d[36];
  float data_pack_local[36];
  for (int eps = 0; eps < 6; ++eps) {
    for (int nu = 0; nu < 6; ++nu) {
      d[(((eps * 6) + nu))] = (((((1 <= ((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196) / 14) * 4) + eps)) && (((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196) / 14) * 4) + eps) < 57)) && (1 <= (((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 14) * 4) + nu))) && ((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 14) * 4) + nu) < 57)) ? (float)((float*)placeholder)[((((((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 6272) / 196) * 200704) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 6272) * 3136)) + (((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 196) / 14) * 224)) + (eps * 56)) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 14) * 4)) + nu) - 57))] : (float)0.000000e+00f);
    }
  }
  data_pack_local[(0)] = 0.000000e+00f;
  data_pack_local[(0)] = (data_pack_local[(0)] + d[(0)]);
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(1)] * -1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(2)] * -2.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(3)] * 1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + d[(4)]);
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(6)] * -1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(7)] * -1.500000e+00f) * -1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(8)] * -1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(9)] * -1.500000e+00f) * 1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(10)] * -1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(12)] * -2.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(13)] * -2.000000e+00f) * -1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(14)] * -2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(15)] * -2.000000e+00f) * 1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(16)] * -2.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(18)] * 1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(19)] * 1.500000e+00f) * -1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(20)] * 1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(21)] * 1.500000e+00f) * 1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(22)] * 1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + d[(24)]);
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(25)] * -1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(26)] * -2.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(27)] * 1.500000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + d[(28)]);
  data_pack_local[(1)] = 0.000000e+00f;
  data_pack_local[(1)] = (data_pack_local[(1)] + d[(1)]);
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(2)] * -2.500000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(3)] * 5.000000e-01f));
  data_pack_local[(1)] = (data_pack_local[(1)] + d[(4)]);
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(7)] * -1.500000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + ((d[(8)] * -1.500000e+00f) * -2.500000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + ((d[(9)] * -1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(10)] * -1.500000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(13)] * -2.000000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + ((d[(14)] * -2.000000e+00f) * -2.500000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + ((d[(15)] * -2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(16)] * -2.000000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(19)] * 1.500000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + ((d[(20)] * 1.500000e+00f) * -2.500000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + ((d[(21)] * 1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(22)] * 1.500000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + d[(25)]);
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(26)] * -2.500000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(27)] * 5.000000e-01f));
  data_pack_local[(1)] = (data_pack_local[(1)] + d[(28)]);
  data_pack_local[(2)] = 0.000000e+00f;
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(1)] * -1.000000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(2)] * 5.000000e-01f));
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(3)] * 2.500000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + d[(4)]);
  data_pack_local[(2)] = (data_pack_local[(2)] + ((d[(7)] * -1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + ((d[(8)] * -1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(2)] = (data_pack_local[(2)] + ((d[(9)] * -1.500000e+00f) * 2.500000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(10)] * -1.500000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + ((d[(13)] * -2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + ((d[(14)] * -2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(2)] = (data_pack_local[(2)] + ((d[(15)] * -2.000000e+00f) * 2.500000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(16)] * -2.000000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + ((d[(19)] * 1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + ((d[(20)] * 1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(2)] = (data_pack_local[(2)] + ((d[(21)] * 1.500000e+00f) * 2.500000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(22)] * 1.500000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(25)] * -1.000000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(26)] * 5.000000e-01f));
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(27)] * 2.500000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + d[(28)]);
  data_pack_local[(3)] = 0.000000e+00f;
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(1)] * -2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(2)] * -1.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(3)] * 2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + d[(4)]);
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(7)] * -1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(8)] * -1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(9)] * -1.500000e+00f) * 2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(10)] * -1.500000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(13)] * -2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(14)] * -2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(15)] * -2.000000e+00f) * 2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(16)] * -2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(19)] * 1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(20)] * 1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(21)] * 1.500000e+00f) * 2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(22)] * 1.500000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(25)] * -2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(26)] * -1.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(27)] * 2.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + d[(28)]);
  data_pack_local[(4)] = 0.000000e+00f;
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(1)] * 5.000000e-01f));
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(2)] * -1.000000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(3)] * -5.000000e-01f));
  data_pack_local[(4)] = (data_pack_local[(4)] + d[(4)]);
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(7)] * -1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(8)] * -1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(9)] * -1.500000e+00f) * -5.000000e-01f));
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(10)] * -1.500000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(13)] * -2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(14)] * -2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(15)] * -2.000000e+00f) * -5.000000e-01f));
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(16)] * -2.000000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(19)] * 1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(20)] * 1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(21)] * 1.500000e+00f) * -5.000000e-01f));
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(22)] * 1.500000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(25)] * 5.000000e-01f));
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(26)] * -1.000000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(27)] * -5.000000e-01f));
  data_pack_local[(4)] = (data_pack_local[(4)] + d[(28)]);
  data_pack_local[(5)] = 0.000000e+00f;
  data_pack_local[(5)] = (data_pack_local[(5)] + d[(1)]);
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(2)] * -1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(3)] * -2.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(4)] * 1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + d[(5)]);
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(7)] * -1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(8)] * -1.500000e+00f) * -1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(9)] * -1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(10)] * -1.500000e+00f) * 1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(11)] * -1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(13)] * -2.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(14)] * -2.000000e+00f) * -1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(15)] * -2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(16)] * -2.000000e+00f) * 1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(17)] * -2.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(19)] * 1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(20)] * 1.500000e+00f) * -1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(21)] * 1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(22)] * 1.500000e+00f) * 1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(23)] * 1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + d[(25)]);
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(26)] * -1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(27)] * -2.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(28)] * 1.500000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + d[(29)]);
  data_pack_local[(6)] = 0.000000e+00f;
  data_pack_local[(6)] = (data_pack_local[(6)] + d[(6)]);
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(7)] * -1.500000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(8)] * -2.000000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(9)] * 1.500000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + d[(10)]);
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(12)] * -2.500000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + ((d[(13)] * -2.500000e+00f) * -1.500000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + ((d[(14)] * -2.500000e+00f) * -2.000000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + ((d[(15)] * -2.500000e+00f) * 1.500000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(16)] * -2.500000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(18)] * 5.000000e-01f));
  data_pack_local[(6)] = (data_pack_local[(6)] + ((d[(19)] * 5.000000e-01f) * -1.500000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + ((d[(20)] * 5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + ((d[(21)] * 5.000000e-01f) * 1.500000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(22)] * 5.000000e-01f));
  data_pack_local[(6)] = (data_pack_local[(6)] + d[(24)]);
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(25)] * -1.500000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(26)] * -2.000000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(27)] * 1.500000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + d[(28)]);
  data_pack_local[(7)] = 0.000000e+00f;
  data_pack_local[(7)] = (data_pack_local[(7)] + d[(7)]);
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(8)] * -2.500000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(9)] * 5.000000e-01f));
  data_pack_local[(7)] = (data_pack_local[(7)] + d[(10)]);
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(13)] * -2.500000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + ((d[(14)] * -2.500000e+00f) * -2.500000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + ((d[(15)] * -2.500000e+00f) * 5.000000e-01f));
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(16)] * -2.500000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(19)] * 5.000000e-01f));
  data_pack_local[(7)] = (data_pack_local[(7)] + ((d[(20)] * 5.000000e-01f) * -2.500000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + ((d[(21)] * 5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(22)] * 5.000000e-01f));
  data_pack_local[(7)] = (data_pack_local[(7)] + d[(25)]);
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(26)] * -2.500000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(27)] * 5.000000e-01f));
  data_pack_local[(7)] = (data_pack_local[(7)] + d[(28)]);
  data_pack_local[(8)] = 0.000000e+00f;
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(7)] * -1.000000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(8)] * 5.000000e-01f));
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(9)] * 2.500000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + d[(10)]);
  data_pack_local[(8)] = (data_pack_local[(8)] + ((d[(13)] * -2.500000e+00f) * -1.000000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + ((d[(14)] * -2.500000e+00f) * 5.000000e-01f));
  data_pack_local[(8)] = (data_pack_local[(8)] + ((d[(15)] * -2.500000e+00f) * 2.500000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(16)] * -2.500000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + ((d[(19)] * 5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + ((d[(20)] * 5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(8)] = (data_pack_local[(8)] + ((d[(21)] * 5.000000e-01f) * 2.500000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(22)] * 5.000000e-01f));
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(25)] * -1.000000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(26)] * 5.000000e-01f));
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(27)] * 2.500000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + d[(28)]);
  data_pack_local[(9)] = 0.000000e+00f;
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(7)] * -2.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(8)] * -1.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(9)] * 2.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + d[(10)]);
  data_pack_local[(9)] = (data_pack_local[(9)] + ((d[(13)] * -2.500000e+00f) * -2.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + ((d[(14)] * -2.500000e+00f) * -1.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + ((d[(15)] * -2.500000e+00f) * 2.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(16)] * -2.500000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + ((d[(19)] * 5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + ((d[(20)] * 5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + ((d[(21)] * 5.000000e-01f) * 2.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(22)] * 5.000000e-01f));
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(25)] * -2.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(26)] * -1.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(27)] * 2.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + d[(28)]);
  data_pack_local[(10)] = 0.000000e+00f;
  data_pack_local[(10)] = (data_pack_local[(10)] + (d[(7)] * 5.000000e-01f));
  data_pack_local[(10)] = (data_pack_local[(10)] + (d[(8)] * -1.000000e+00f));
  data_pack_local[(10)] = (data_pack_local[(10)] + (d[(9)] * -5.000000e-01f));
  data_pack_local[(10)] = (data_pack_local[(10)] + d[(10)]);
  data_pack_local[(10)] = (data_pack_local[(10)] + ((d[(13)] * -2.500000e+00f) * 5.000000e-01f));
  data_pack_local[(10)] = (data_pack_local[(10)] + ((d[(14)] * -2.500000e+00f) * -1.000000e+00f));
  data_pack_local[(10)] = (data_pack_local[(10)] + ((d[(15)] * -2.500000e+00f) * -5.000000e-01f));
  data_pack_local[(10)] = (data_pack_local[(10)] + (d[(16)] * -2.500000e+00f));
  data_pack_local[(10)] = (data_pack_local[(10)] + ((d[(19)] * 5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(10)] = (data_pack_local[(10)] + ((d[(20)] * 5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(10)] = (data_pack_local[(10)] + ((d[(21)] * 5.000000e-01f) * -5.000000e-01f));
  data_pack_local[(10)] = (data_pack_local[(10)] + (d[(22)] * 5.000000e-01f));
  data_pack_local[(10)] = (data_pack_local[(10)] + (d[(25)] * 5.000000e-01f));
  data_pack_local[(10)] = (data_pack_local[(10)] + (d[(26)] * -1.000000e+00f));
  data_pack_local[(10)] = (data_pack_local[(10)] + (d[(27)] * -5.000000e-01f));
  data_pack_local[(10)] = (data_pack_local[(10)] + d[(28)]);
  data_pack_local[(11)] = 0.000000e+00f;
  data_pack_local[(11)] = (data_pack_local[(11)] + d[(7)]);
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(8)] * -1.500000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(9)] * -2.000000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(10)] * 1.500000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + d[(11)]);
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(13)] * -2.500000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + ((d[(14)] * -2.500000e+00f) * -1.500000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + ((d[(15)] * -2.500000e+00f) * -2.000000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + ((d[(16)] * -2.500000e+00f) * 1.500000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(17)] * -2.500000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(19)] * 5.000000e-01f));
  data_pack_local[(11)] = (data_pack_local[(11)] + ((d[(20)] * 5.000000e-01f) * -1.500000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + ((d[(21)] * 5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + ((d[(22)] * 5.000000e-01f) * 1.500000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(23)] * 5.000000e-01f));
  data_pack_local[(11)] = (data_pack_local[(11)] + d[(25)]);
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(26)] * -1.500000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(27)] * -2.000000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(28)] * 1.500000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + d[(29)]);
  data_pack_local[(12)] = 0.000000e+00f;
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(6)] * -1.000000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(7)] * -1.000000e+00f) * -1.500000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(8)] * -1.000000e+00f) * -2.000000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(9)] * -1.000000e+00f) * 1.500000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(12)] * 5.000000e-01f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(13)] * 5.000000e-01f) * -1.500000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(14)] * 5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(15)] * 5.000000e-01f) * 1.500000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(16)] * 5.000000e-01f));
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(18)] * 2.500000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(19)] * 2.500000e+00f) * -1.500000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(20)] * 2.500000e+00f) * -2.000000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(21)] * 2.500000e+00f) * 1.500000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(22)] * 2.500000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + d[(24)]);
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(25)] * -1.500000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(26)] * -2.000000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(27)] * 1.500000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + d[(28)]);
  data_pack_local[(13)] = 0.000000e+00f;
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(7)] * -1.000000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + ((d[(8)] * -1.000000e+00f) * -2.500000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + ((d[(9)] * -1.000000e+00f) * 5.000000e-01f));
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(13)] * 5.000000e-01f));
  data_pack_local[(13)] = (data_pack_local[(13)] + ((d[(14)] * 5.000000e-01f) * -2.500000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + ((d[(15)] * 5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(16)] * 5.000000e-01f));
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(19)] * 2.500000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + ((d[(20)] * 2.500000e+00f) * -2.500000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + ((d[(21)] * 2.500000e+00f) * 5.000000e-01f));
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(22)] * 2.500000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + d[(25)]);
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(26)] * -2.500000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(27)] * 5.000000e-01f));
  data_pack_local[(13)] = (data_pack_local[(13)] + d[(28)]);
  data_pack_local[(14)] = 0.000000e+00f;
  data_pack_local[(14)] = (data_pack_local[(14)] + ((d[(7)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + ((d[(8)] * -1.000000e+00f) * 5.000000e-01f));
  data_pack_local[(14)] = (data_pack_local[(14)] + ((d[(9)] * -1.000000e+00f) * 2.500000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + ((d[(13)] * 5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + ((d[(14)] * 5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(14)] = (data_pack_local[(14)] + ((d[(15)] * 5.000000e-01f) * 2.500000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + (d[(16)] * 5.000000e-01f));
  data_pack_local[(14)] = (data_pack_local[(14)] + ((d[(19)] * 2.500000e+00f) * -1.000000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + ((d[(20)] * 2.500000e+00f) * 5.000000e-01f));
  data_pack_local[(14)] = (data_pack_local[(14)] + ((d[(21)] * 2.500000e+00f) * 2.500000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + (d[(22)] * 2.500000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + (d[(25)] * -1.000000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + (d[(26)] * 5.000000e-01f));
  data_pack_local[(14)] = (data_pack_local[(14)] + (d[(27)] * 2.500000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + d[(28)]);
  data_pack_local[(15)] = 0.000000e+00f;
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(7)] * -1.000000e+00f) * -2.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(8)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(9)] * -1.000000e+00f) * 2.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(13)] * 5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(14)] * 5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(15)] * 5.000000e-01f) * 2.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + (d[(16)] * 5.000000e-01f));
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(19)] * 2.500000e+00f) * -2.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(20)] * 2.500000e+00f) * -1.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(21)] * 2.500000e+00f) * 2.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + (d[(22)] * 2.500000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + (d[(25)] * -2.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + (d[(26)] * -1.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + (d[(27)] * 2.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + d[(28)]);
  data_pack_local[(16)] = 0.000000e+00f;
  data_pack_local[(16)] = (data_pack_local[(16)] + ((d[(7)] * -1.000000e+00f) * 5.000000e-01f));
  data_pack_local[(16)] = (data_pack_local[(16)] + ((d[(8)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(16)] = (data_pack_local[(16)] + ((d[(9)] * -1.000000e+00f) * -5.000000e-01f));
  data_pack_local[(16)] = (data_pack_local[(16)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(16)] = (data_pack_local[(16)] + ((d[(13)] * 5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(16)] = (data_pack_local[(16)] + ((d[(14)] * 5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(16)] = (data_pack_local[(16)] + ((d[(15)] * 5.000000e-01f) * -5.000000e-01f));
  data_pack_local[(16)] = (data_pack_local[(16)] + (d[(16)] * 5.000000e-01f));
  data_pack_local[(16)] = (data_pack_local[(16)] + ((d[(19)] * 2.500000e+00f) * 5.000000e-01f));
  data_pack_local[(16)] = (data_pack_local[(16)] + ((d[(20)] * 2.500000e+00f) * -1.000000e+00f));
  data_pack_local[(16)] = (data_pack_local[(16)] + ((d[(21)] * 2.500000e+00f) * -5.000000e-01f));
  data_pack_local[(16)] = (data_pack_local[(16)] + (d[(22)] * 2.500000e+00f));
  data_pack_local[(16)] = (data_pack_local[(16)] + (d[(25)] * 5.000000e-01f));
  data_pack_local[(16)] = (data_pack_local[(16)] + (d[(26)] * -1.000000e+00f));
  data_pack_local[(16)] = (data_pack_local[(16)] + (d[(27)] * -5.000000e-01f));
  data_pack_local[(16)] = (data_pack_local[(16)] + d[(28)]);
  data_pack_local[(17)] = 0.000000e+00f;
  data_pack_local[(17)] = (data_pack_local[(17)] + (d[(7)] * -1.000000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + ((d[(8)] * -1.000000e+00f) * -1.500000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + ((d[(9)] * -1.000000e+00f) * -2.000000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + ((d[(10)] * -1.000000e+00f) * 1.500000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + (d[(11)] * -1.000000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + (d[(13)] * 5.000000e-01f));
  data_pack_local[(17)] = (data_pack_local[(17)] + ((d[(14)] * 5.000000e-01f) * -1.500000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + ((d[(15)] * 5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + ((d[(16)] * 5.000000e-01f) * 1.500000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + (d[(17)] * 5.000000e-01f));
  data_pack_local[(17)] = (data_pack_local[(17)] + (d[(19)] * 2.500000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + ((d[(20)] * 2.500000e+00f) * -1.500000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + ((d[(21)] * 2.500000e+00f) * -2.000000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + ((d[(22)] * 2.500000e+00f) * 1.500000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + (d[(23)] * 2.500000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + d[(25)]);
  data_pack_local[(17)] = (data_pack_local[(17)] + (d[(26)] * -1.500000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + (d[(27)] * -2.000000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + (d[(28)] * 1.500000e+00f));
  data_pack_local[(17)] = (data_pack_local[(17)] + d[(29)]);
  data_pack_local[(18)] = 0.000000e+00f;
  data_pack_local[(18)] = (data_pack_local[(18)] + (d[(6)] * -2.000000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + ((d[(7)] * -2.000000e+00f) * -1.500000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + ((d[(8)] * -2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + ((d[(9)] * -2.000000e+00f) * 1.500000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + (d[(10)] * -2.000000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + (d[(12)] * -1.000000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + ((d[(13)] * -1.000000e+00f) * -1.500000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + ((d[(14)] * -1.000000e+00f) * -2.000000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + ((d[(15)] * -1.000000e+00f) * 1.500000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + (d[(16)] * -1.000000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + (d[(18)] * 2.000000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + ((d[(19)] * 2.000000e+00f) * -1.500000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + ((d[(20)] * 2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + ((d[(21)] * 2.000000e+00f) * 1.500000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + (d[(22)] * 2.000000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + d[(24)]);
  data_pack_local[(18)] = (data_pack_local[(18)] + (d[(25)] * -1.500000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + (d[(26)] * -2.000000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + (d[(27)] * 1.500000e+00f));
  data_pack_local[(18)] = (data_pack_local[(18)] + d[(28)]);
  data_pack_local[(19)] = 0.000000e+00f;
  data_pack_local[(19)] = (data_pack_local[(19)] + (d[(7)] * -2.000000e+00f));
  data_pack_local[(19)] = (data_pack_local[(19)] + ((d[(8)] * -2.000000e+00f) * -2.500000e+00f));
  data_pack_local[(19)] = (data_pack_local[(19)] + ((d[(9)] * -2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(19)] = (data_pack_local[(19)] + (d[(10)] * -2.000000e+00f));
  data_pack_local[(19)] = (data_pack_local[(19)] + (d[(13)] * -1.000000e+00f));
  data_pack_local[(19)] = (data_pack_local[(19)] + ((d[(14)] * -1.000000e+00f) * -2.500000e+00f));
  data_pack_local[(19)] = (data_pack_local[(19)] + ((d[(15)] * -1.000000e+00f) * 5.000000e-01f));
  data_pack_local[(19)] = (data_pack_local[(19)] + (d[(16)] * -1.000000e+00f));
  data_pack_local[(19)] = (data_pack_local[(19)] + (d[(19)] * 2.000000e+00f));
  data_pack_local[(19)] = (data_pack_local[(19)] + ((d[(20)] * 2.000000e+00f) * -2.500000e+00f));
  data_pack_local[(19)] = (data_pack_local[(19)] + ((d[(21)] * 2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(19)] = (data_pack_local[(19)] + (d[(22)] * 2.000000e+00f));
  data_pack_local[(19)] = (data_pack_local[(19)] + d[(25)]);
  data_pack_local[(19)] = (data_pack_local[(19)] + (d[(26)] * -2.500000e+00f));
  data_pack_local[(19)] = (data_pack_local[(19)] + (d[(27)] * 5.000000e-01f));
  data_pack_local[(19)] = (data_pack_local[(19)] + d[(28)]);
  data_pack_local[(20)] = 0.000000e+00f;
  data_pack_local[(20)] = (data_pack_local[(20)] + ((d[(7)] * -2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + ((d[(8)] * -2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(20)] = (data_pack_local[(20)] + ((d[(9)] * -2.000000e+00f) * 2.500000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + (d[(10)] * -2.000000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + ((d[(13)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + ((d[(14)] * -1.000000e+00f) * 5.000000e-01f));
  data_pack_local[(20)] = (data_pack_local[(20)] + ((d[(15)] * -1.000000e+00f) * 2.500000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + (d[(16)] * -1.000000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + ((d[(19)] * 2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + ((d[(20)] * 2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(20)] = (data_pack_local[(20)] + ((d[(21)] * 2.000000e+00f) * 2.500000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + (d[(22)] * 2.000000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + (d[(25)] * -1.000000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + (d[(26)] * 5.000000e-01f));
  data_pack_local[(20)] = (data_pack_local[(20)] + (d[(27)] * 2.500000e+00f));
  data_pack_local[(20)] = (data_pack_local[(20)] + d[(28)]);
  data_pack_local[(21)] = 0.000000e+00f;
  data_pack_local[(21)] = (data_pack_local[(21)] + ((d[(7)] * -2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + ((d[(8)] * -2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + ((d[(9)] * -2.000000e+00f) * 2.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + (d[(10)] * -2.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + ((d[(13)] * -1.000000e+00f) * -2.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + ((d[(14)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + ((d[(15)] * -1.000000e+00f) * 2.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + (d[(16)] * -1.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + ((d[(19)] * 2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + ((d[(20)] * 2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + ((d[(21)] * 2.000000e+00f) * 2.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + (d[(22)] * 2.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + (d[(25)] * -2.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + (d[(26)] * -1.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + (d[(27)] * 2.000000e+00f));
  data_pack_local[(21)] = (data_pack_local[(21)] + d[(28)]);
  data_pack_local[(22)] = 0.000000e+00f;
  data_pack_local[(22)] = (data_pack_local[(22)] + ((d[(7)] * -2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(22)] = (data_pack_local[(22)] + ((d[(8)] * -2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(22)] = (data_pack_local[(22)] + ((d[(9)] * -2.000000e+00f) * -5.000000e-01f));
  data_pack_local[(22)] = (data_pack_local[(22)] + (d[(10)] * -2.000000e+00f));
  data_pack_local[(22)] = (data_pack_local[(22)] + ((d[(13)] * -1.000000e+00f) * 5.000000e-01f));
  data_pack_local[(22)] = (data_pack_local[(22)] + ((d[(14)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(22)] = (data_pack_local[(22)] + ((d[(15)] * -1.000000e+00f) * -5.000000e-01f));
  data_pack_local[(22)] = (data_pack_local[(22)] + (d[(16)] * -1.000000e+00f));
  data_pack_local[(22)] = (data_pack_local[(22)] + ((d[(19)] * 2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(22)] = (data_pack_local[(22)] + ((d[(20)] * 2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(22)] = (data_pack_local[(22)] + ((d[(21)] * 2.000000e+00f) * -5.000000e-01f));
  data_pack_local[(22)] = (data_pack_local[(22)] + (d[(22)] * 2.000000e+00f));
  data_pack_local[(22)] = (data_pack_local[(22)] + (d[(25)] * 5.000000e-01f));
  data_pack_local[(22)] = (data_pack_local[(22)] + (d[(26)] * -1.000000e+00f));
  data_pack_local[(22)] = (data_pack_local[(22)] + (d[(27)] * -5.000000e-01f));
  data_pack_local[(22)] = (data_pack_local[(22)] + d[(28)]);
  data_pack_local[(23)] = 0.000000e+00f;
  data_pack_local[(23)] = (data_pack_local[(23)] + (d[(7)] * -2.000000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + ((d[(8)] * -2.000000e+00f) * -1.500000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + ((d[(9)] * -2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + ((d[(10)] * -2.000000e+00f) * 1.500000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + (d[(11)] * -2.000000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + (d[(13)] * -1.000000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + ((d[(14)] * -1.000000e+00f) * -1.500000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + ((d[(15)] * -1.000000e+00f) * -2.000000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + ((d[(16)] * -1.000000e+00f) * 1.500000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + (d[(17)] * -1.000000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + (d[(19)] * 2.000000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + ((d[(20)] * 2.000000e+00f) * -1.500000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + ((d[(21)] * 2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + ((d[(22)] * 2.000000e+00f) * 1.500000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + (d[(23)] * 2.000000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + d[(25)]);
  data_pack_local[(23)] = (data_pack_local[(23)] + (d[(26)] * -1.500000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + (d[(27)] * -2.000000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + (d[(28)] * 1.500000e+00f));
  data_pack_local[(23)] = (data_pack_local[(23)] + d[(29)]);
  data_pack_local[(24)] = 0.000000e+00f;
  data_pack_local[(24)] = (data_pack_local[(24)] + (d[(6)] * 5.000000e-01f));
  data_pack_local[(24)] = (data_pack_local[(24)] + ((d[(7)] * 5.000000e-01f) * -1.500000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + ((d[(8)] * 5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + ((d[(9)] * 5.000000e-01f) * 1.500000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + (d[(10)] * 5.000000e-01f));
  data_pack_local[(24)] = (data_pack_local[(24)] + (d[(12)] * -1.000000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + ((d[(13)] * -1.000000e+00f) * -1.500000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + ((d[(14)] * -1.000000e+00f) * -2.000000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + ((d[(15)] * -1.000000e+00f) * 1.500000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + (d[(16)] * -1.000000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + (d[(18)] * -5.000000e-01f));
  data_pack_local[(24)] = (data_pack_local[(24)] + ((d[(19)] * -5.000000e-01f) * -1.500000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + ((d[(20)] * -5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + ((d[(21)] * -5.000000e-01f) * 1.500000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + (d[(22)] * -5.000000e-01f));
  data_pack_local[(24)] = (data_pack_local[(24)] + d[(24)]);
  data_pack_local[(24)] = (data_pack_local[(24)] + (d[(25)] * -1.500000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + (d[(26)] * -2.000000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + (d[(27)] * 1.500000e+00f));
  data_pack_local[(24)] = (data_pack_local[(24)] + d[(28)]);
  data_pack_local[(25)] = 0.000000e+00f;
  data_pack_local[(25)] = (data_pack_local[(25)] + (d[(7)] * 5.000000e-01f));
  data_pack_local[(25)] = (data_pack_local[(25)] + ((d[(8)] * 5.000000e-01f) * -2.500000e+00f));
  data_pack_local[(25)] = (data_pack_local[(25)] + ((d[(9)] * 5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(25)] = (data_pack_local[(25)] + (d[(10)] * 5.000000e-01f));
  data_pack_local[(25)] = (data_pack_local[(25)] + (d[(13)] * -1.000000e+00f));
  data_pack_local[(25)] = (data_pack_local[(25)] + ((d[(14)] * -1.000000e+00f) * -2.500000e+00f));
  data_pack_local[(25)] = (data_pack_local[(25)] + ((d[(15)] * -1.000000e+00f) * 5.000000e-01f));
  data_pack_local[(25)] = (data_pack_local[(25)] + (d[(16)] * -1.000000e+00f));
  data_pack_local[(25)] = (data_pack_local[(25)] + (d[(19)] * -5.000000e-01f));
  data_pack_local[(25)] = (data_pack_local[(25)] + ((d[(20)] * -5.000000e-01f) * -2.500000e+00f));
  data_pack_local[(25)] = (data_pack_local[(25)] + ((d[(21)] * -5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(25)] = (data_pack_local[(25)] + (d[(22)] * -5.000000e-01f));
  data_pack_local[(25)] = (data_pack_local[(25)] + d[(25)]);
  data_pack_local[(25)] = (data_pack_local[(25)] + (d[(26)] * -2.500000e+00f));
  data_pack_local[(25)] = (data_pack_local[(25)] + (d[(27)] * 5.000000e-01f));
  data_pack_local[(25)] = (data_pack_local[(25)] + d[(28)]);
  data_pack_local[(26)] = 0.000000e+00f;
  data_pack_local[(26)] = (data_pack_local[(26)] + ((d[(7)] * 5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(26)] = (data_pack_local[(26)] + ((d[(8)] * 5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(26)] = (data_pack_local[(26)] + ((d[(9)] * 5.000000e-01f) * 2.500000e+00f));
  data_pack_local[(26)] = (data_pack_local[(26)] + (d[(10)] * 5.000000e-01f));
  data_pack_local[(26)] = (data_pack_local[(26)] + ((d[(13)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(26)] = (data_pack_local[(26)] + ((d[(14)] * -1.000000e+00f) * 5.000000e-01f));
  data_pack_local[(26)] = (data_pack_local[(26)] + ((d[(15)] * -1.000000e+00f) * 2.500000e+00f));
  data_pack_local[(26)] = (data_pack_local[(26)] + (d[(16)] * -1.000000e+00f));
  data_pack_local[(26)] = (data_pack_local[(26)] + ((d[(19)] * -5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(26)] = (data_pack_local[(26)] + ((d[(20)] * -5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(26)] = (data_pack_local[(26)] + ((d[(21)] * -5.000000e-01f) * 2.500000e+00f));
  data_pack_local[(26)] = (data_pack_local[(26)] + (d[(22)] * -5.000000e-01f));
  data_pack_local[(26)] = (data_pack_local[(26)] + (d[(25)] * -1.000000e+00f));
  data_pack_local[(26)] = (data_pack_local[(26)] + (d[(26)] * 5.000000e-01f));
  data_pack_local[(26)] = (data_pack_local[(26)] + (d[(27)] * 2.500000e+00f));
  data_pack_local[(26)] = (data_pack_local[(26)] + d[(28)]);
  data_pack_local[(27)] = 0.000000e+00f;
  data_pack_local[(27)] = (data_pack_local[(27)] + ((d[(7)] * 5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + ((d[(8)] * 5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + ((d[(9)] * 5.000000e-01f) * 2.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + (d[(10)] * 5.000000e-01f));
  data_pack_local[(27)] = (data_pack_local[(27)] + ((d[(13)] * -1.000000e+00f) * -2.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + ((d[(14)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + ((d[(15)] * -1.000000e+00f) * 2.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + (d[(16)] * -1.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + ((d[(19)] * -5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + ((d[(20)] * -5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + ((d[(21)] * -5.000000e-01f) * 2.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + (d[(22)] * -5.000000e-01f));
  data_pack_local[(27)] = (data_pack_local[(27)] + (d[(25)] * -2.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + (d[(26)] * -1.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + (d[(27)] * 2.000000e+00f));
  data_pack_local[(27)] = (data_pack_local[(27)] + d[(28)]);
  data_pack_local[(28)] = 0.000000e+00f;
  data_pack_local[(28)] = (data_pack_local[(28)] + ((d[(7)] * 5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(28)] = (data_pack_local[(28)] + ((d[(8)] * 5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(28)] = (data_pack_local[(28)] + ((d[(9)] * 5.000000e-01f) * -5.000000e-01f));
  data_pack_local[(28)] = (data_pack_local[(28)] + (d[(10)] * 5.000000e-01f));
  data_pack_local[(28)] = (data_pack_local[(28)] + ((d[(13)] * -1.000000e+00f) * 5.000000e-01f));
  data_pack_local[(28)] = (data_pack_local[(28)] + ((d[(14)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(28)] = (data_pack_local[(28)] + ((d[(15)] * -1.000000e+00f) * -5.000000e-01f));
  data_pack_local[(28)] = (data_pack_local[(28)] + (d[(16)] * -1.000000e+00f));
  data_pack_local[(28)] = (data_pack_local[(28)] + ((d[(19)] * -5.000000e-01f) * 5.000000e-01f));
  data_pack_local[(28)] = (data_pack_local[(28)] + ((d[(20)] * -5.000000e-01f) * -1.000000e+00f));
  data_pack_local[(28)] = (data_pack_local[(28)] + ((d[(21)] * -5.000000e-01f) * -5.000000e-01f));
  data_pack_local[(28)] = (data_pack_local[(28)] + (d[(22)] * -5.000000e-01f));
  data_pack_local[(28)] = (data_pack_local[(28)] + (d[(25)] * 5.000000e-01f));
  data_pack_local[(28)] = (data_pack_local[(28)] + (d[(26)] * -1.000000e+00f));
  data_pack_local[(28)] = (data_pack_local[(28)] + (d[(27)] * -5.000000e-01f));
  data_pack_local[(28)] = (data_pack_local[(28)] + d[(28)]);
  data_pack_local[(29)] = 0.000000e+00f;
  data_pack_local[(29)] = (data_pack_local[(29)] + (d[(7)] * 5.000000e-01f));
  data_pack_local[(29)] = (data_pack_local[(29)] + ((d[(8)] * 5.000000e-01f) * -1.500000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + ((d[(9)] * 5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + ((d[(10)] * 5.000000e-01f) * 1.500000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + (d[(11)] * 5.000000e-01f));
  data_pack_local[(29)] = (data_pack_local[(29)] + (d[(13)] * -1.000000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + ((d[(14)] * -1.000000e+00f) * -1.500000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + ((d[(15)] * -1.000000e+00f) * -2.000000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + ((d[(16)] * -1.000000e+00f) * 1.500000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + (d[(17)] * -1.000000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + (d[(19)] * -5.000000e-01f));
  data_pack_local[(29)] = (data_pack_local[(29)] + ((d[(20)] * -5.000000e-01f) * -1.500000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + ((d[(21)] * -5.000000e-01f) * -2.000000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + ((d[(22)] * -5.000000e-01f) * 1.500000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + (d[(23)] * -5.000000e-01f));
  data_pack_local[(29)] = (data_pack_local[(29)] + d[(25)]);
  data_pack_local[(29)] = (data_pack_local[(29)] + (d[(26)] * -1.500000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + (d[(27)] * -2.000000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + (d[(28)] * 1.500000e+00f));
  data_pack_local[(29)] = (data_pack_local[(29)] + d[(29)]);
  data_pack_local[(30)] = 0.000000e+00f;
  data_pack_local[(30)] = (data_pack_local[(30)] + d[(6)]);
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(7)] * -1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(8)] * -2.000000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(9)] * 1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + d[(10)]);
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(12)] * -1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + ((d[(13)] * -1.500000e+00f) * -1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + ((d[(14)] * -1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + ((d[(15)] * -1.500000e+00f) * 1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(16)] * -1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(18)] * -2.000000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + ((d[(19)] * -2.000000e+00f) * -1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + ((d[(20)] * -2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + ((d[(21)] * -2.000000e+00f) * 1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(22)] * -2.000000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(24)] * 1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + ((d[(25)] * 1.500000e+00f) * -1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + ((d[(26)] * 1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + ((d[(27)] * 1.500000e+00f) * 1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(28)] * 1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + d[(30)]);
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(31)] * -1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(32)] * -2.000000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + (d[(33)] * 1.500000e+00f));
  data_pack_local[(30)] = (data_pack_local[(30)] + d[(34)]);
  data_pack_local[(31)] = 0.000000e+00f;
  data_pack_local[(31)] = (data_pack_local[(31)] + d[(7)]);
  data_pack_local[(31)] = (data_pack_local[(31)] + (d[(8)] * -2.500000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + (d[(9)] * 5.000000e-01f));
  data_pack_local[(31)] = (data_pack_local[(31)] + d[(10)]);
  data_pack_local[(31)] = (data_pack_local[(31)] + (d[(13)] * -1.500000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + ((d[(14)] * -1.500000e+00f) * -2.500000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + ((d[(15)] * -1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(31)] = (data_pack_local[(31)] + (d[(16)] * -1.500000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + (d[(19)] * -2.000000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + ((d[(20)] * -2.000000e+00f) * -2.500000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + ((d[(21)] * -2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(31)] = (data_pack_local[(31)] + (d[(22)] * -2.000000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + (d[(25)] * 1.500000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + ((d[(26)] * 1.500000e+00f) * -2.500000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + ((d[(27)] * 1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(31)] = (data_pack_local[(31)] + (d[(28)] * 1.500000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + d[(31)]);
  data_pack_local[(31)] = (data_pack_local[(31)] + (d[(32)] * -2.500000e+00f));
  data_pack_local[(31)] = (data_pack_local[(31)] + (d[(33)] * 5.000000e-01f));
  data_pack_local[(31)] = (data_pack_local[(31)] + d[(34)]);
  data_pack_local[(32)] = 0.000000e+00f;
  data_pack_local[(32)] = (data_pack_local[(32)] + (d[(7)] * -1.000000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + (d[(8)] * 5.000000e-01f));
  data_pack_local[(32)] = (data_pack_local[(32)] + (d[(9)] * 2.500000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + d[(10)]);
  data_pack_local[(32)] = (data_pack_local[(32)] + ((d[(13)] * -1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + ((d[(14)] * -1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(32)] = (data_pack_local[(32)] + ((d[(15)] * -1.500000e+00f) * 2.500000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + (d[(16)] * -1.500000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + ((d[(19)] * -2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + ((d[(20)] * -2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(32)] = (data_pack_local[(32)] + ((d[(21)] * -2.000000e+00f) * 2.500000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + (d[(22)] * -2.000000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + ((d[(25)] * 1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + ((d[(26)] * 1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(32)] = (data_pack_local[(32)] + ((d[(27)] * 1.500000e+00f) * 2.500000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + (d[(28)] * 1.500000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + (d[(31)] * -1.000000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + (d[(32)] * 5.000000e-01f));
  data_pack_local[(32)] = (data_pack_local[(32)] + (d[(33)] * 2.500000e+00f));
  data_pack_local[(32)] = (data_pack_local[(32)] + d[(34)]);
  data_pack_local[(33)] = 0.000000e+00f;
  data_pack_local[(33)] = (data_pack_local[(33)] + (d[(7)] * -2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + (d[(8)] * -1.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + (d[(9)] * 2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + d[(10)]);
  data_pack_local[(33)] = (data_pack_local[(33)] + ((d[(13)] * -1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + ((d[(14)] * -1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + ((d[(15)] * -1.500000e+00f) * 2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + (d[(16)] * -1.500000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + ((d[(19)] * -2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + ((d[(20)] * -2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + ((d[(21)] * -2.000000e+00f) * 2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + (d[(22)] * -2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + ((d[(25)] * 1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + ((d[(26)] * 1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + ((d[(27)] * 1.500000e+00f) * 2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + (d[(28)] * 1.500000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + (d[(31)] * -2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + (d[(32)] * -1.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + (d[(33)] * 2.000000e+00f));
  data_pack_local[(33)] = (data_pack_local[(33)] + d[(34)]);
  data_pack_local[(34)] = 0.000000e+00f;
  data_pack_local[(34)] = (data_pack_local[(34)] + (d[(7)] * 5.000000e-01f));
  data_pack_local[(34)] = (data_pack_local[(34)] + (d[(8)] * -1.000000e+00f));
  data_pack_local[(34)] = (data_pack_local[(34)] + (d[(9)] * -5.000000e-01f));
  data_pack_local[(34)] = (data_pack_local[(34)] + d[(10)]);
  data_pack_local[(34)] = (data_pack_local[(34)] + ((d[(13)] * -1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(34)] = (data_pack_local[(34)] + ((d[(14)] * -1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(34)] = (data_pack_local[(34)] + ((d[(15)] * -1.500000e+00f) * -5.000000e-01f));
  data_pack_local[(34)] = (data_pack_local[(34)] + (d[(16)] * -1.500000e+00f));
  data_pack_local[(34)] = (data_pack_local[(34)] + ((d[(19)] * -2.000000e+00f) * 5.000000e-01f));
  data_pack_local[(34)] = (data_pack_local[(34)] + ((d[(20)] * -2.000000e+00f) * -1.000000e+00f));
  data_pack_local[(34)] = (data_pack_local[(34)] + ((d[(21)] * -2.000000e+00f) * -5.000000e-01f));
  data_pack_local[(34)] = (data_pack_local[(34)] + (d[(22)] * -2.000000e+00f));
  data_pack_local[(34)] = (data_pack_local[(34)] + ((d[(25)] * 1.500000e+00f) * 5.000000e-01f));
  data_pack_local[(34)] = (data_pack_local[(34)] + ((d[(26)] * 1.500000e+00f) * -1.000000e+00f));
  data_pack_local[(34)] = (data_pack_local[(34)] + ((d[(27)] * 1.500000e+00f) * -5.000000e-01f));
  data_pack_local[(34)] = (data_pack_local[(34)] + (d[(28)] * 1.500000e+00f));
  data_pack_local[(34)] = (data_pack_local[(34)] + (d[(31)] * 5.000000e-01f));
  data_pack_local[(34)] = (data_pack_local[(34)] + (d[(32)] * -1.000000e+00f));
  data_pack_local[(34)] = (data_pack_local[(34)] + (d[(33)] * -5.000000e-01f));
  data_pack_local[(34)] = (data_pack_local[(34)] + d[(34)]);
  data_pack_local[(35)] = 0.000000e+00f;
  data_pack_local[(35)] = (data_pack_local[(35)] + d[(7)]);
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(8)] * -1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(9)] * -2.000000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(10)] * 1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + d[(11)]);
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(13)] * -1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + ((d[(14)] * -1.500000e+00f) * -1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + ((d[(15)] * -1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + ((d[(16)] * -1.500000e+00f) * 1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(17)] * -1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(19)] * -2.000000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + ((d[(20)] * -2.000000e+00f) * -1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + ((d[(21)] * -2.000000e+00f) * -2.000000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + ((d[(22)] * -2.000000e+00f) * 1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(23)] * -2.000000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(25)] * 1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + ((d[(26)] * 1.500000e+00f) * -1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + ((d[(27)] * 1.500000e+00f) * -2.000000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + ((d[(28)] * 1.500000e+00f) * 1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(29)] * 1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + d[(31)]);
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(32)] * -1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(33)] * -2.000000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + (d[(34)] * 1.500000e+00f));
  data_pack_local[(35)] = (data_pack_local[(35)] + d[(35)]);
  for (int eps1 = 0; eps1 < 6; ++eps1) {
    for (int nu1 = 0; nu1 < 6; ++nu1) {
      data_pack[(((((eps1 * 2408448) + (nu1 * 401408)) + (((int)blockIdx.x) * 128)) + ((int)threadIdx.x)))] = data_pack_local[(((eps1 * 6) + nu1))];
    }
  }
}

extern "C" __global__ void fused_nn_contrib_conv2d_winograd_without_weight_transform_add_1_kernel0(void* __restrict__ placeholder, float* __restrict__ data_pack) {
  float d[16];
  float data_pack_local[16];
  for (int eps = 0; eps < 4; ++eps) {
    for (int nu = 0; nu < 4; ++nu) {
      d[(((eps * 4) + nu))] = (((((1 <= ((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49) / 7) * 2) + eps)) && (((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49) / 7) * 2) + eps) < 15)) && (1 <= (((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 7) * 2) + nu))) && ((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 7) * 2) + nu) < 15)) ? (float)((float*)placeholder)[((((((((((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 1568) / 49) * 50176) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) / 1568) * 196)) + (((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 49) / 7) * 28)) + (eps * 14)) + ((((((int)blockIdx.x) * 128) + ((int)threadIdx.x)) % 7) * 2)) + nu) - 15))] : (float)0.000000e+00f);
    }
  }
  data_pack_local[(0)] = 0.000000e+00f;
  data_pack_local[(0)] = (data_pack_local[(0)] + d[(0)]);
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(2)] * -1.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + (d[(8)] * -1.000000e+00f));
  data_pack_local[(0)] = (data_pack_local[(0)] + ((d[(10)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(1)] = 0.000000e+00f;
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(1)] * -1.000000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + d[(2)]);
  data_pack_local[(1)] = (data_pack_local[(1)] + ((d[(9)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(1)] = (data_pack_local[(1)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(2)] = 0.000000e+00f;
  data_pack_local[(2)] = (data_pack_local[(2)] + d[(1)]);
  data_pack_local[(2)] = (data_pack_local[(2)] + d[(2)]);
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(9)] * -1.000000e+00f));
  data_pack_local[(2)] = (data_pack_local[(2)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(3)] = 0.000000e+00f;
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(1)] * -1.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + d[(3)]);
  data_pack_local[(3)] = (data_pack_local[(3)] + ((d[(9)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(3)] = (data_pack_local[(3)] + (d[(11)] * -1.000000e+00f));
  data_pack_local[(4)] = 0.000000e+00f;
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(4)] * -1.000000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + ((d[(6)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(4)] = (data_pack_local[(4)] + d[(8)]);
  data_pack_local[(4)] = (data_pack_local[(4)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(5)] = 0.000000e+00f;
  data_pack_local[(5)] = (data_pack_local[(5)] + ((d[(5)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(6)] * -1.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + (d[(9)] * -1.000000e+00f));
  data_pack_local[(5)] = (data_pack_local[(5)] + d[(10)]);
  data_pack_local[(6)] = 0.000000e+00f;
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(5)] * -1.000000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + (d[(6)] * -1.000000e+00f));
  data_pack_local[(6)] = (data_pack_local[(6)] + d[(9)]);
  data_pack_local[(6)] = (data_pack_local[(6)] + d[(10)]);
  data_pack_local[(7)] = 0.000000e+00f;
  data_pack_local[(7)] = (data_pack_local[(7)] + ((d[(5)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(7)] * -1.000000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + (d[(9)] * -1.000000e+00f));
  data_pack_local[(7)] = (data_pack_local[(7)] + d[(11)]);
  data_pack_local[(8)] = 0.000000e+00f;
  data_pack_local[(8)] = (data_pack_local[(8)] + d[(4)]);
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(6)] * -1.000000e+00f));
  data_pack_local[(8)] = (data_pack_local[(8)] + d[(8)]);
  data_pack_local[(8)] = (data_pack_local[(8)] + (d[(10)] * -1.000000e+00f));
  data_pack_local[(9)] = 0.000000e+00f;
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(5)] * -1.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + d[(6)]);
  data_pack_local[(9)] = (data_pack_local[(9)] + (d[(9)] * -1.000000e+00f));
  data_pack_local[(9)] = (data_pack_local[(9)] + d[(10)]);
  data_pack_local[(10)] = 0.000000e+00f;
  data_pack_local[(10)] = (data_pack_local[(10)] + d[(5)]);
  data_pack_local[(10)] = (data_pack_local[(10)] + d[(6)]);
  data_pack_local[(10)] = (data_pack_local[(10)] + d[(9)]);
  data_pack_local[(10)] = (data_pack_local[(10)] + d[(10)]);
  data_pack_local[(11)] = 0.000000e+00f;
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(5)] * -1.000000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + d[(7)]);
  data_pack_local[(11)] = (data_pack_local[(11)] + (d[(9)] * -1.000000e+00f));
  data_pack_local[(11)] = (data_pack_local[(11)] + d[(11)]);
  data_pack_local[(12)] = 0.000000e+00f;
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(4)] * -1.000000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + ((d[(6)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(12)] = (data_pack_local[(12)] + d[(12)]);
  data_pack_local[(12)] = (data_pack_local[(12)] + (d[(14)] * -1.000000e+00f));
  data_pack_local[(13)] = 0.000000e+00f;
  data_pack_local[(13)] = (data_pack_local[(13)] + ((d[(5)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(6)] * -1.000000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + (d[(13)] * -1.000000e+00f));
  data_pack_local[(13)] = (data_pack_local[(13)] + d[(14)]);
  data_pack_local[(14)] = 0.000000e+00f;
  data_pack_local[(14)] = (data_pack_local[(14)] + (d[(5)] * -1.000000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + (d[(6)] * -1.000000e+00f));
  data_pack_local[(14)] = (data_pack_local[(14)] + d[(13)]);
  data_pack_local[(14)] = (data_pack_local[(14)] + d[(14)]);
  data_pack_local[(15)] = 0.000000e+00f;
  data_pack_local[(15)] = (data_pack_local[(15)] + ((d[(5)] * -1.000000e+00f) * -1.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + (d[(7)] * -1.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + (d[(13)] * -1.000000e+00f));
  data_pack_local[(15)] = (data_pack_local[(15)] + d[(15)]);
  for (int eps1 = 0; eps1 < 4; ++eps1) {
    for (int nu1 = 0; nu1 < 4; ++nu1) {
      data_pack[(((((eps1 * 1605632) + (nu1 * 401408)) + (((int)blockIdx.x) * 128)) + ((int)threadIdx.x)))] = data_pack_local[(((eps1 * 4) + nu1))];
    }
  }
}

